/* Generated by Cython 0.23.5 */

#define PY_SSIZE_T_CLEAN
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02060000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03020000)
    #error Cython requires Python 2.6+ or Python 3.2+.
#else
#define CYTHON_ABI "0_23_5"
#include <stddef.h>
#ifndef offsetof
#define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#ifdef PYPY_VERSION
#define CYTHON_COMPILING_IN_PYPY 1
#define CYTHON_COMPILING_IN_CPYTHON 0
#else
#define CYTHON_COMPILING_IN_PYPY 0
#define CYTHON_COMPILING_IN_CPYTHON 1
#endif
#if !defined(CYTHON_USE_PYLONG_INTERNALS) && CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x02070000
#define CYTHON_USE_PYLONG_INTERNALS 1
#endif
#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x02070600 && !defined(Py_OptimizeFlag)
#define Py_OptimizeFlag 0
#endif
#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyClass_Type
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyType_Type
#endif
#ifndef Py_TPFLAGS_CHECKTYPES
  #define Py_TPFLAGS_CHECKTYPES 0
#endif
#ifndef Py_TPFLAGS_HAVE_INDEX
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#ifndef Py_TPFLAGS_HAVE_NEWBUFFER
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#ifndef Py_TPFLAGS_HAVE_FINALIZE
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ?\
                                              0 : _PyUnicode_Ready((PyObject *)(op)))
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_KIND(u)         PyUnicode_KIND(u)
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
#else
  #define CYTHON_PEP393_ENABLED 0
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_KIND(u)         (sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ?\
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyUnicode_Contains)
  #define PyUnicode_Contains(u, s)  PySequence_Contains(u, s)
#endif
#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None)) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None)) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)
#else
  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY
  #ifndef PyUnicode_InternFromString
    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
  #endif
#endif
#if PY_VERSION_HEX < 0x030200A4
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   PyInt_AsLong
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   PyInt_AsSsize_t
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyMethod_New(func, self, klass) ((self) ? PyMethod_New(func, self) : PyInstanceMethod_New(func))
#else
  #define __Pyx_PyMethod_New(func, self, klass) PyMethod_New(func, self, klass)
#endif
#if PY_VERSION_HEX >= 0x030500B1
#define __Pyx_PyAsyncMethodsStruct PyAsyncMethods
#define __Pyx_PyType_AsAsync(obj) (Py_TYPE(obj)->tp_as_async)
#elif CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
typedef struct {
    unaryfunc am_await;
    unaryfunc am_aiter;
    unaryfunc am_anext;
} __Pyx_PyAsyncMethodsStruct;
#define __Pyx_PyType_AsAsync(obj) ((__Pyx_PyAsyncMethodsStruct*) (Py_TYPE(obj)->tp_reserved))
#else
#define __Pyx_PyType_AsAsync(obj) NULL
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#define __Pyx_void_to_None(void_result) ((void)(void_result), Py_INCREF(Py_None), Py_None)

#ifndef __cplusplus
  #error "Cython files generated with the C++ option must be compiled with a C++ compiler."
#endif
#ifndef CYTHON_INLINE
  #define CYTHON_INLINE inline
#endif
template<typename T>
void __Pyx_call_destructor(T& x) {
    x.~T();
}
template<typename T>
class __Pyx_FakeReference {
  public:
    __Pyx_FakeReference() : ptr(NULL) { }
    __Pyx_FakeReference(const T& ref) : ptr(const_cast<T*>(&ref)) { }
    T *operator->() { return ptr; }
    operator T&() { return *ptr; }
  private:
    T *ptr;
};

#if defined(WIN32) || defined(MS_WINDOWS)
  #define _USE_MATH_DEFINES
#endif
#include <math.h>
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif


#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#endif

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#define __PYX_HAVE__kdp
#define __PYX_HAVE_API__kdp
#include "kdpVectors.hpp"
#include "ios"
#include "new"
#include "stdexcept"
#include "typeinfo"
#include <memory>
#include "shared_ptr_alias.hpp"
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#ifdef PYREX_WITHOUT_ASSERTIONS
#define CYTHON_WITHOUT_ASSERTIONS
#endif

#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_NCP_UNUSED
# if CYTHON_COMPILING_IN_CPYTHON
#  define CYTHON_NCP_UNUSED
# else
#  define CYTHON_NCP_UNUSED CYTHON_UNUSED
# endif
#endif
typedef struct {PyObject **p; char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT 0
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_uchar_cast(c) ((unsigned char)c)
#define __Pyx_long_cast(x) ((long)x)
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (\
    (sizeof(type) < sizeof(Py_ssize_t))  ||\
    (sizeof(type) > sizeof(Py_ssize_t) &&\
          likely(v < (type)PY_SSIZE_T_MAX ||\
                 v == (type)PY_SSIZE_T_MAX)  &&\
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||\
                                v == (type)PY_SSIZE_T_MIN)))  ||\
    (sizeof(type) == sizeof(Py_ssize_t) &&\
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||\
                               v == (type)PY_SSIZE_T_MAX)))  )
#if defined (__cplusplus) && __cplusplus >= 201103L
    #include <cstdlib>
    #define __Pyx_sst_abs(value) std::abs(value)
#elif SIZEOF_INT >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) abs(value)
#elif SIZEOF_LONG >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) labs(value)
#elif defined (_MSC_VER) && defined (_M_X64)
    #define __Pyx_sst_abs(value) _abs64(value)
#elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define __Pyx_sst_abs(value) llabs(value)
#elif defined (__GNUC__)
    #define __Pyx_sst_abs(value) __builtin_llabs(value)
#else
    #define __Pyx_sst_abs(value) ((value<0) ? -value : value)
#endif
static CYTHON_INLINE char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
#define __Pyx_PyByteArray_FromString(s) PyByteArray_FromStringAndSize((const char*)s, strlen((const char*)s))
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyObject_AsSString(s)    ((signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyStr_FromCString(s)     __Pyx_PyStr_FromString((const char*)s)
#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
#if PY_MAJOR_VERSION < 3
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u)
{
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#else
#define __Pyx_Py_UNICODE_strlen Py_UNICODE_strlen
#endif
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_NewRef(obj) (Py_INCREF(obj), obj)
#define __Pyx_Owned_Py_None(b) __Pyx_NewRef(Py_None)
#define __Pyx_PyBool_FromLong(b) ((b) ? __Pyx_NewRef(Py_True) : __Pyx_NewRef(Py_False))
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x);
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
#if CYTHON_COMPILING_IN_CPYTHON
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    const char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    if (strcmp(default_encoding_c, "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (!ascii_chars_u) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
        Py_DECREF(ascii_chars_u);
        Py_DECREF(ascii_chars_b);
    }
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c));
    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */

static PyObject *__pyx_m;
static PyObject *__pyx_d;
static PyObject *__pyx_b;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;


static const char *__pyx_f[] = {
  "source/kdp.pyx",
};

/*--- Type declarations ---*/
struct __pyx_obj_3kdp_Vec2;
struct __pyx_obj_3kdp_Vec3;
struct __pyx_obj_3kdp_Vec4;
struct __pyx_obj_3kdp_Rot3;
struct __pyx_obj_3kdp_Boost;

/* "kdp.pxd":8
 * from libcpp.memory cimport shared_ptr # First import shared_ptr
 * 
 * cdef class Vec2:             # <<<<<<<<<<<<<<
 * 	# To allow the equivalent of C++ referencess (e.g. the Vec2 Vec3.T()),
 * 	# we must use a shared_ptr
 */
struct __pyx_obj_3kdp_Vec2 {
  PyObject_HEAD
  struct __pyx_vtabstruct_3kdp_Vec2 *__pyx_vtab;
  std::shared_ptr<kdp::Vec2>  vec;
};


/* "kdp.pxd":16
 * 	cdef Vec2 Factory(const Vec2_c& orig)
 * 
 * cdef class Vec3:             # <<<<<<<<<<<<<<
 * 	cdef shared_ptr[Vec3_c] vec
 * 
 */
struct __pyx_obj_3kdp_Vec3 {
  PyObject_HEAD
  struct __pyx_vtabstruct_3kdp_Vec3 *__pyx_vtab;
  std::shared_ptr<kdp::Vec3>  vec;
};


/* "kdp.pxd":22
 * 	cdef Vec3 Factory(const Vec3_c& orig)
 * 
 * cdef class Vec4:             # <<<<<<<<<<<<<<
 * 	cdef shared_ptr[Vec4_c] vec
 * 
 */
struct __pyx_obj_3kdp_Vec4 {
  PyObject_HEAD
  struct __pyx_vtabstruct_3kdp_Vec4 *__pyx_vtab;
  std::shared_ptr<kdp::Vec4>  vec;
};


/* "kdp.pxd":28
 * 	cdef Vec4 Factory(const Vec4_c& orig)
 * 
 * cdef class Rot3:             # <<<<<<<<<<<<<<
 * 	cdef Rot3_c* rot
 * 
 */
struct __pyx_obj_3kdp_Rot3 {
  PyObject_HEAD
  kdp::Rot3 *rot;
};


/* "kdp.pxd":31
 * 	cdef Rot3_c* rot
 * 
 * cdef class Boost:             # <<<<<<<<<<<<<<
 * 	cdef Boost_c* boost
 * 
 */
struct __pyx_obj_3kdp_Boost {
  PyObject_HEAD
  kdp::Boost *boost;
};



/* "kdp.pyx":99
 * from cython.operator cimport dereference as deref
 * 
 * cdef class Vec2:             # <<<<<<<<<<<<<<
 * 	# To allow the equivalent of C++ referencess (e.g. the Vec2 Vec3.T()),
 * 	# we must use a shared_ptr
 */

struct __pyx_vtabstruct_3kdp_Vec2 {
  struct __pyx_obj_3kdp_Vec2 *(*Factory)(kdp::Vec2 const &);
};
static struct __pyx_vtabstruct_3kdp_Vec2 *__pyx_vtabptr_3kdp_Vec2;


/* "kdp.pyx":219
 * ########################################################################
 * 
 * cdef class Vec3:             # <<<<<<<<<<<<<<
 * #~ 	cdef shared_ptr[Vec3_c] vec
 * 
 */

struct __pyx_vtabstruct_3kdp_Vec3 {
  struct __pyx_obj_3kdp_Vec3 *(*Factory)(kdp::Vec3 const &);
};
static struct __pyx_vtabstruct_3kdp_Vec3 *__pyx_vtabptr_3kdp_Vec3;


/* "kdp.pyx":350
 * ########################################################################
 * 
 * cdef class Vec4:             # <<<<<<<<<<<<<<
 * #~ 	cdef shared_ptr[Vec4_c] vec
 * 
 */

struct __pyx_vtabstruct_3kdp_Vec4 {
  struct __pyx_obj_3kdp_Vec4 *(*Factory)(kdp::Vec4 const &);
};
static struct __pyx_vtabstruct_3kdp_Vec4 *__pyx_vtabptr_3kdp_Vec4;

/* --- Runtime support code (head) --- */
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          if (acquire_gil) {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
              PyGILState_Release(__pyx_gilstate_save);\
          } else {\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
#endif
  #define __Pyx_RefNannyFinishContext()\
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_XDECREF(tmp);\
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_DECREF(tmp);\
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

static PyObject *__Pyx_GetBuiltinName(PyObject *name);

static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name);

static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[],\
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args,\
    const char* function_name);

static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found);

static CYTHON_INLINE int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact);

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg);
#endif

static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg);

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func);
#else
#define __Pyx_PyObject_CallNoArg(func) __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL)
#endif

static int __Pyx_SetVtable(PyObject *dict, void *vtable);

static CYTHON_INLINE PyObject *__Pyx_GetModuleGlobalName(PyObject *name);

static PyObject *__Pyx_GetNameInClass(PyObject *nmspace, PyObject *name);

typedef struct {
    int code_line;
    PyCodeObject* code_object;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);

static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

#include <new>

#ifndef __Pyx_CppExn2PyErr
#include <new>
#include <typeinfo>
#include <stdexcept>
#include <ios>
static void __Pyx_CppExn2PyErr() {
  try {
    if (PyErr_Occurred())
      ; // let the latest Python exn pass through and ignore the current one
    else
      throw;
  } catch (const std::bad_alloc& exn) {
    PyErr_SetString(PyExc_MemoryError, exn.what());
  } catch (const std::bad_cast& exn) {
    PyErr_SetString(PyExc_TypeError, exn.what());
  } catch (const std::domain_error& exn) {
    PyErr_SetString(PyExc_ValueError, exn.what());
  } catch (const std::invalid_argument& exn) {
    PyErr_SetString(PyExc_ValueError, exn.what());
  } catch (const std::ios_base::failure& exn) {
    PyErr_SetString(PyExc_IOError, exn.what());
  } catch (const std::out_of_range& exn) {
    PyErr_SetString(PyExc_IndexError, exn.what());
  } catch (const std::overflow_error& exn) {
    PyErr_SetString(PyExc_OverflowError, exn.what());
  } catch (const std::range_error& exn) {
    PyErr_SetString(PyExc_ArithmeticError, exn.what());
  } catch (const std::underflow_error& exn) {
    PyErr_SetString(PyExc_ArithmeticError, exn.what());
  } catch (const std::exception& exn) {
    PyErr_SetString(PyExc_RuntimeError, exn.what());
  }
  catch (...)
  {
    PyErr_SetString(PyExc_RuntimeError, "Unknown exception");
  }
}
#endif

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

static int __Pyx_check_binary_version(void);

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t);

static struct __pyx_obj_3kdp_Vec2 *__pyx_f_3kdp_4Vec2_Factory(kdp::Vec2 const &__pyx_v_orig); /* proto*/
static struct __pyx_obj_3kdp_Vec3 *__pyx_f_3kdp_4Vec3_Factory(kdp::Vec3 const &__pyx_v_orig); /* proto*/
static struct __pyx_obj_3kdp_Vec4 *__pyx_f_3kdp_4Vec4_Factory(kdp::Vec4 const &__pyx_v_orig); /* proto*/

/* Module declarations from 'libcpp' */

/* Module declarations from 'libcpp.memory' */

/* Module declarations from 'kdp' */
static PyTypeObject *__pyx_ptype_3kdp_Vec2 = 0;
static PyTypeObject *__pyx_ptype_3kdp_Vec3 = 0;
static PyTypeObject *__pyx_ptype_3kdp_Vec4 = 0;
static PyTypeObject *__pyx_ptype_3kdp_Rot3 = 0;
static PyTypeObject *__pyx_ptype_3kdp_Boost = 0;
#define __Pyx_MODULE_NAME "kdp"
int __pyx_module_is_main_kdp = 0;

/* Implementation of 'kdp' */
static PyObject *__pyx_builtin_staticmethod;
static char __pyx_k_u[] = "u";
static char __pyx_k_v[] = "v";
static char __pyx_k_x[] = "x";
static char __pyx_k_p3[] = "p3";
static char __pyx_k_x0[] = "x0";
static char __pyx_k_x1[] = "x1";
static char __pyx_k_x2[] = "x2";
static char __pyx_k_x3[] = "x3";
static char __pyx_k_kdp[] = "kdp";
static char __pyx_k_phi[] = "phi";
static char __pyx_k_ret[] = "ret";
static char __pyx_k_rot[] = "rot";
static char __pyx_k_tmp[] = "tmp";
static char __pyx_k_Copy[] = "Copy";
static char __pyx_k_axis[] = "axis";
static char __pyx_k_beta[] = "beta";
static char __pyx_k_iadd[] = "__iadd__";
static char __pyx_k_imul[] = "__imul__";
static char __pyx_k_isub[] = "__isub__";
static char __pyx_k_main[] = "__main__";
static char __pyx_k_mass[] = "mass";
static char __pyx_k_test[] = "__test__";
static char __pyx_k_angle[] = "angle";
static char __pyx_k_omega[] = "omega";
static char __pyx_k_theta[] = "theta";
static char __pyx_k_length[] = "length";
static char __pyx_k_victim[] = "victim";
static char __pyx_k_itruediv[] = "__itruediv__";
static char __pyx_k_pyx_vtable[] = "__pyx_vtable__";
static char __pyx_k_From_MassP3[] = "From_MassP3";
static char __pyx_k_Make_Vec2Vec[] = "Make_Vec2Vec";
static char __pyx_k_newThreshold[] = "newThreshold";
static char __pyx_k_staticmethod[] = "staticmethod";
static char __pyx_k_Make_LengthThetaPhi[] = "Make_LengthThetaPhi";
static char __pyx_k_SetLengthRelDiffThreshold[] = "SetLengthRelDiffThreshold";
static char __pyx_k_home_keith_Documents_Projects_l[] = "/home/keith/Documents/Projects/libkdp/source/kdp.pyx";
static PyObject *__pyx_n_s_Copy;
static PyObject *__pyx_n_s_From_MassP3;
static PyObject *__pyx_n_s_Make_LengthThetaPhi;
static PyObject *__pyx_n_s_Make_Vec2Vec;
static PyObject *__pyx_n_s_SetLengthRelDiffThreshold;
static PyObject *__pyx_n_s_angle;
static PyObject *__pyx_n_s_axis;
static PyObject *__pyx_n_s_beta;
static PyObject *__pyx_kp_s_home_keith_Documents_Projects_l;
static PyObject *__pyx_n_s_iadd;
static PyObject *__pyx_n_s_imul;
static PyObject *__pyx_n_s_isub;
static PyObject *__pyx_n_s_itruediv;
static PyObject *__pyx_n_s_kdp;
static PyObject *__pyx_n_s_length;
static PyObject *__pyx_n_s_main;
static PyObject *__pyx_n_s_mass;
static PyObject *__pyx_n_s_newThreshold;
static PyObject *__pyx_n_s_omega;
static PyObject *__pyx_n_s_p3;
static PyObject *__pyx_n_s_phi;
static PyObject *__pyx_n_s_pyx_vtable;
static PyObject *__pyx_n_s_ret;
static PyObject *__pyx_n_s_rot;
static PyObject *__pyx_n_s_staticmethod;
static PyObject *__pyx_n_s_test;
static PyObject *__pyx_n_s_theta;
static PyObject *__pyx_n_s_tmp;
static PyObject *__pyx_n_s_u;
static PyObject *__pyx_n_s_v;
static PyObject *__pyx_n_s_victim;
static PyObject *__pyx_n_s_x;
static PyObject *__pyx_n_s_x0;
static PyObject *__pyx_n_s_x1;
static PyObject *__pyx_n_s_x2;
static PyObject *__pyx_n_s_x3;
static int __pyx_pf_3kdp_4Vec2___cinit__(struct __pyx_obj_3kdp_Vec2 *__pyx_v_self, double __pyx_v_x1, double __pyx_v_x2); /* proto */
static void __pyx_pf_3kdp_4Vec2_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_3kdp_Vec2 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec2_4Assign(struct __pyx_obj_3kdp_Vec2 *__pyx_v_self, struct __pyx_obj_3kdp_Vec2 *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec2_6Copy(struct __pyx_obj_3kdp_Vec2 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec2_8__deepcopy__(struct __pyx_obj_3kdp_Vec2 *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_memo); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec2_10__repr__(struct __pyx_obj_3kdp_Vec2 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec2_2x1___get__(struct __pyx_obj_3kdp_Vec2 *__pyx_v_self); /* proto */
static int __pyx_pf_3kdp_4Vec2_2x1_2__set__(struct __pyx_obj_3kdp_Vec2 *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec2_2x2___get__(struct __pyx_obj_3kdp_Vec2 *__pyx_v_self); /* proto */
static int __pyx_pf_3kdp_4Vec2_2x2_2__set__(struct __pyx_obj_3kdp_Vec2 *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec2_12__iadd__(struct __pyx_obj_3kdp_Vec2 *__pyx_v_self, struct __pyx_obj_3kdp_Vec2 *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec2_14__isub__(struct __pyx_obj_3kdp_Vec2 *__pyx_v_self, struct __pyx_obj_3kdp_Vec2 *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec2_16__imul__(struct __pyx_obj_3kdp_Vec2 *__pyx_v_self, double __pyx_v_scale); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec2_18__itruediv__(struct __pyx_obj_3kdp_Vec2 *__pyx_v_self, double __pyx_v_scale); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec2_20__add__(struct __pyx_obj_3kdp_Vec2 *__pyx_v_this, struct __pyx_obj_3kdp_Vec2 *__pyx_v_that); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec2_22__sub__(struct __pyx_obj_3kdp_Vec2 *__pyx_v_this, struct __pyx_obj_3kdp_Vec2 *__pyx_v_that); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec2_24__mul__(struct __pyx_obj_3kdp_Vec2 *__pyx_v_this, double __pyx_v_scale); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec2_26__truediv__(struct __pyx_obj_3kdp_Vec2 *__pyx_v_this, double __pyx_v_scale); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec2_28__neg__(struct __pyx_obj_3kdp_Vec2 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec2_30Normalize(struct __pyx_obj_3kdp_Vec2 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec2_32Mag(struct __pyx_obj_3kdp_Vec2 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec2_34Mag2(struct __pyx_obj_3kdp_Vec2 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec2_36Phi(struct __pyx_obj_3kdp_Vec2 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec2_38DeltaPhi(struct __pyx_obj_3kdp_Vec2 *__pyx_v_self, struct __pyx_obj_3kdp_Vec2 *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec2_40Dot(struct __pyx_obj_3kdp_Vec2 *__pyx_v_self, struct __pyx_obj_3kdp_Vec2 *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec2_42Cross(struct __pyx_obj_3kdp_Vec2 *__pyx_v_self, struct __pyx_obj_3kdp_Vec2 *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec2_44InteriorAngle(struct __pyx_obj_3kdp_Vec2 *__pyx_v_self, struct __pyx_obj_3kdp_Vec2 *__pyx_v_other); /* proto */
static int __pyx_pf_3kdp_4Vec3___cinit__(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self, double __pyx_v_x1, double __pyx_v_x2, double __pyx_v_x3); /* proto */
static void __pyx_pf_3kdp_4Vec3_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_3kdp_Vec3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec3_4Assign(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self, struct __pyx_obj_3kdp_Vec3 *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec3_6Make_LengthThetaPhi(double __pyx_v_length, double __pyx_v_theta, double __pyx_v_phi); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec3_8Copy(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec3_10__deepcopy__(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_memo); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec3_12__repr__(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec3_2x1___get__(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self); /* proto */
static int __pyx_pf_3kdp_4Vec3_2x1_2__set__(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec3_2x2___get__(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self); /* proto */
static int __pyx_pf_3kdp_4Vec3_2x2_2__set__(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec3_2x3___get__(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self); /* proto */
static int __pyx_pf_3kdp_4Vec3_2x3_2__set__(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec3_14T(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec3_16__iadd__(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self, struct __pyx_obj_3kdp_Vec3 *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec3_18__isub__(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self, struct __pyx_obj_3kdp_Vec3 *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec3_20__imul__(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self, double __pyx_v_scale); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec3_22__itruediv__(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self, double __pyx_v_scale); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec3_24__add__(struct __pyx_obj_3kdp_Vec3 *__pyx_v_this, struct __pyx_obj_3kdp_Vec3 *__pyx_v_that); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec3_26__sub__(struct __pyx_obj_3kdp_Vec3 *__pyx_v_this, struct __pyx_obj_3kdp_Vec3 *__pyx_v_that); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec3_28__mul__(struct __pyx_obj_3kdp_Vec3 *__pyx_v_this, double __pyx_v_scale); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec3_30__truediv__(struct __pyx_obj_3kdp_Vec3 *__pyx_v_this, double __pyx_v_scale); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec3_32__neg__(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec3_34Normalize(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec3_36Mag(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec3_38Mag2(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec3_40Phi(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec3_42Eta(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec3_44Theta(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec3_46DeltaEta(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self, struct __pyx_obj_3kdp_Vec3 *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec3_48DeltaPhi(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self, struct __pyx_obj_3kdp_Vec3 *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec3_50Dot(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self, struct __pyx_obj_3kdp_Vec3 *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec3_52Cross(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self, struct __pyx_obj_3kdp_Vec3 *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec3_54InteriorAngle(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self, struct __pyx_obj_3kdp_Vec3 *__pyx_v_other); /* proto */
static int __pyx_pf_3kdp_4Vec4___cinit__(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self, double __pyx_v_x0, double __pyx_v_x1, double __pyx_v_x2, double __pyx_v_x3); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec4_2From_MassP3(double __pyx_v_mass, struct __pyx_obj_3kdp_Vec3 *__pyx_v_p3); /* proto */
static void __pyx_pf_3kdp_4Vec4_4__dealloc__(CYTHON_UNUSED struct __pyx_obj_3kdp_Vec4 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec4_6Copy(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec4_8__deepcopy__(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_memo); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec4_10__repr__(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec4_2x0___get__(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self); /* proto */
static int __pyx_pf_3kdp_4Vec4_2x0_2__set__(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec4_2x1___get__(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self); /* proto */
static int __pyx_pf_3kdp_4Vec4_2x1_2__set__(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec4_2x2___get__(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self); /* proto */
static int __pyx_pf_3kdp_4Vec4_2x2_2__set__(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec4_2x3___get__(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self); /* proto */
static int __pyx_pf_3kdp_4Vec4_2x3_2__set__(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec4_12x(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec4_14p(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec4_16__iadd__(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self, struct __pyx_obj_3kdp_Vec4 *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec4_18__isub__(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self, struct __pyx_obj_3kdp_Vec4 *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec4_20__imul__(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self, double __pyx_v_scale); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec4_22__itruediv__(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self, double __pyx_v_scale); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec4_24__add__(struct __pyx_obj_3kdp_Vec4 *__pyx_v_this, struct __pyx_obj_3kdp_Vec4 *__pyx_v_that); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec4_26__sub__(struct __pyx_obj_3kdp_Vec4 *__pyx_v_this, struct __pyx_obj_3kdp_Vec4 *__pyx_v_that); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec4_28__mul__(struct __pyx_obj_3kdp_Vec4 *__pyx_v_this, double __pyx_v_scale); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec4_30__truediv__(struct __pyx_obj_3kdp_Vec4 *__pyx_v_this, double __pyx_v_scale); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec4_32__neg__(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec4_34Length(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec4_36Length2(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec4_38Mass(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec4_40Mass2(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec4_42Length_T(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec4_44Length2_T(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec4_46Contract(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self, struct __pyx_obj_3kdp_Vec4 *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec4_48Beta(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec4_50BetaVec(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec4_52Rapidity(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec4_54Eta(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec4_56Theta(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec4_58Phi(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec4_60DeltaEta(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self, struct __pyx_obj_3kdp_Vec4 *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec4_62DeltaPhi(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self, struct __pyx_obj_3kdp_Vec4 *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec4_64DeltaR2_rap(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self, struct __pyx_obj_3kdp_Vec4 *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec4_66DeltaR_rap(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self, struct __pyx_obj_3kdp_Vec4 *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec4_68DeltaR2_pseudo(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self, struct __pyx_obj_3kdp_Vec4 *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec4_70DeltaR_pseudo(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self, struct __pyx_obj_3kdp_Vec4 *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_3kdp_4Vec4_72SetLengthRelDiffThreshold(double __pyx_v_newThreshold); /* proto */
static int __pyx_pf_3kdp_4Rot3___cinit__(struct __pyx_obj_3kdp_Rot3 *__pyx_v_self, struct __pyx_obj_3kdp_Vec3 *__pyx_v_axis, double __pyx_v_angle); /* proto */
static void __pyx_pf_3kdp_4Rot3_2__dealloc__(struct __pyx_obj_3kdp_Rot3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3kdp_4Rot3_4Make_Vec2Vec(struct __pyx_obj_3kdp_Vec3 *__pyx_v_u, struct __pyx_obj_3kdp_Vec3 *__pyx_v_v, double __pyx_v_omega); /* proto */
static PyObject *__pyx_pf_3kdp_4Rot3_6__call__(struct __pyx_obj_3kdp_Rot3 *__pyx_v_self, struct __pyx_obj_3kdp_Vec3 *__pyx_v_victim); /* proto */
static PyObject *__pyx_pf_3kdp_4Rot3_8Axis(struct __pyx_obj_3kdp_Rot3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3kdp_4Rot3_10Angle(struct __pyx_obj_3kdp_Rot3 *__pyx_v_self); /* proto */
static int __pyx_pf_3kdp_5Boost___cinit__(struct __pyx_obj_3kdp_Boost *__pyx_v_self, struct __pyx_obj_3kdp_Vec3 *__pyx_v_beta); /* proto */
static void __pyx_pf_3kdp_5Boost_2__dealloc__(struct __pyx_obj_3kdp_Boost *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3kdp_5Boost_4Axis(struct __pyx_obj_3kdp_Boost *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3kdp_5Boost_6BetaVec(struct __pyx_obj_3kdp_Boost *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3kdp_5Boost_8Gamma(struct __pyx_obj_3kdp_Boost *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3kdp_5Boost_10Beta(struct __pyx_obj_3kdp_Boost *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3kdp_5Boost_12Rapidity(struct __pyx_obj_3kdp_Boost *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_3kdp_5Boost_14Forward(struct __pyx_obj_3kdp_Boost *__pyx_v_self, struct __pyx_obj_3kdp_Vec4 *__pyx_v_victim); /* proto */
static PyObject *__pyx_pf_3kdp_5Boost_16Backward(struct __pyx_obj_3kdp_Boost *__pyx_v_self, struct __pyx_obj_3kdp_Vec4 *__pyx_v_victim); /* proto */
static PyObject *__pyx_tp_new_3kdp_Vec2(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_3kdp_Vec3(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_3kdp_Vec4(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_3kdp_Rot3(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_3kdp_Boost(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tuple_;
static PyObject *__pyx_tuple__3;
static PyObject *__pyx_tuple__5;
static PyObject *__pyx_tuple__7;
static PyObject *__pyx_codeobj__2;
static PyObject *__pyx_codeobj__4;
static PyObject *__pyx_codeobj__6;
static PyObject *__pyx_codeobj__8;

/* "kdp.pyx":104
 * #~ 	cdef shared_ptr[Vec2_c] vec
 * 
 * 	def __cinit__(self, double x1 = 0., double x2 = 0.):             # <<<<<<<<<<<<<<
 * #~ 		self.vec = shared_ptr[Vec2_c](new Vec2_c(x1, x2))
 * 		# It appears that using make_shared is *slightly* faster, but creates a 10% larger binary
 */

/* Python wrapper */
static int __pyx_pw_3kdp_4Vec2_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_3kdp_4Vec2_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_x1;
  double __pyx_v_x2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x1,&__pyx_n_s_x2,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x1);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x2);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 104; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_x1 = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_x1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 104; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_x1 = ((double)0.);
    }
    if (values[1]) {
      __pyx_v_x2 = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_x2 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 104; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_x2 = ((double)0.);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 104; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("kdp.Vec2.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3kdp_4Vec2___cinit__(((struct __pyx_obj_3kdp_Vec2 *)__pyx_v_self), __pyx_v_x1, __pyx_v_x2);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3kdp_4Vec2___cinit__(struct __pyx_obj_3kdp_Vec2 *__pyx_v_self, double __pyx_v_x1, double __pyx_v_x2) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "kdp.pyx":107
 * #~ 		self.vec = shared_ptr[Vec2_c](new Vec2_c(x1, x2))
 * 		# It appears that using make_shared is *slightly* faster, but creates a 10% larger binary
 * 		self.vec = make_shared[Vec2_c](x1, x2)             # <<<<<<<<<<<<<<
 * 
 * 	def __dealloc__(self):
 */
  __pyx_v_self->vec = std::make_shared<kdp::Vec2>(__pyx_v_x1, __pyx_v_x2);

  /* "kdp.pyx":104
 * #~ 	cdef shared_ptr[Vec2_c] vec
 * 
 * 	def __cinit__(self, double x1 = 0., double x2 = 0.):             # <<<<<<<<<<<<<<
 * #~ 		self.vec = shared_ptr[Vec2_c](new Vec2_c(x1, x2))
 * 		# It appears that using make_shared is *slightly* faster, but creates a 10% larger binary
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":109
 * 		self.vec = make_shared[Vec2_c](x1, x2)
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		return #shared_ptr knows what to do
 * 
 */

/* Python wrapper */
static void __pyx_pw_3kdp_4Vec2_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_3kdp_4Vec2_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_3kdp_4Vec2_2__dealloc__(((struct __pyx_obj_3kdp_Vec2 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_3kdp_4Vec2_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_3kdp_Vec2 *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "kdp.pyx":110
 * 
 * 	def __dealloc__(self):
 * 		return #shared_ptr knows what to do             # <<<<<<<<<<<<<<
 * 
 * 	def Assign(self, Vec2 other):
 */
  goto __pyx_L0;

  /* "kdp.pyx":109
 * 		self.vec = make_shared[Vec2_c](x1, x2)
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		return #shared_ptr knows what to do
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "kdp.pyx":112
 * 		return #shared_ptr knows what to do
 * 
 * 	def Assign(self, Vec2 other):             # <<<<<<<<<<<<<<
 * 		deref(self.vec).assign(deref(other.vec))
 * 		return self
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec2_5Assign(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec2_5Assign(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Assign (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_3kdp_Vec2, 1, "other", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 112; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_3kdp_4Vec2_4Assign(((struct __pyx_obj_3kdp_Vec2 *)__pyx_v_self), ((struct __pyx_obj_3kdp_Vec2 *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec2_4Assign(struct __pyx_obj_3kdp_Vec2 *__pyx_v_self, struct __pyx_obj_3kdp_Vec2 *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Assign", 0);

  /* "kdp.pyx":113
 * 
 * 	def Assign(self, Vec2 other):
 * 		deref(self.vec).assign(deref(other.vec))             # <<<<<<<<<<<<<<
 * 		return self
 * 
 */
  (*__pyx_v_self->vec).operator=((*__pyx_v_other->vec));

  /* "kdp.pyx":114
 * 	def Assign(self, Vec2 other):
 * 		deref(self.vec).assign(deref(other.vec))
 * 		return self             # <<<<<<<<<<<<<<
 * 
 * 	@staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "kdp.pyx":112
 * 		return #shared_ptr knows what to do
 * 
 * 	def Assign(self, Vec2 other):             # <<<<<<<<<<<<<<
 * 		deref(self.vec).assign(deref(other.vec))
 * 		return self
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":117
 * 
 * 	@staticmethod
 * 	cdef Vec2 Factory(const Vec2_c& orig):             # <<<<<<<<<<<<<<
 * 		copy = Vec2()
 * 		deref(copy.vec).assign(orig)
 */

static struct __pyx_obj_3kdp_Vec2 *__pyx_f_3kdp_4Vec2_Factory(kdp::Vec2 const &__pyx_v_orig) {
  struct __pyx_obj_3kdp_Vec2 *__pyx_v_copy = NULL;
  struct __pyx_obj_3kdp_Vec2 *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Factory", 0);

  /* "kdp.pyx":118
 * 	@staticmethod
 * 	cdef Vec2 Factory(const Vec2_c& orig):
 * 		copy = Vec2()             # <<<<<<<<<<<<<<
 * 		deref(copy.vec).assign(orig)
 * 		return copy
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_3kdp_Vec2), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 118; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_copy = ((struct __pyx_obj_3kdp_Vec2 *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "kdp.pyx":119
 * 	cdef Vec2 Factory(const Vec2_c& orig):
 * 		copy = Vec2()
 * 		deref(copy.vec).assign(orig)             # <<<<<<<<<<<<<<
 * 		return copy
 * 
 */
  (*__pyx_v_copy->vec).operator=(__pyx_v_orig);

  /* "kdp.pyx":120
 * 		copy = Vec2()
 * 		deref(copy.vec).assign(orig)
 * 		return copy             # <<<<<<<<<<<<<<
 * 
 * 	def Copy(self):
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __Pyx_INCREF(((PyObject *)__pyx_v_copy));
  __pyx_r = __pyx_v_copy;
  goto __pyx_L0;

  /* "kdp.pyx":117
 * 
 * 	@staticmethod
 * 	cdef Vec2 Factory(const Vec2_c& orig):             # <<<<<<<<<<<<<<
 * 		copy = Vec2()
 * 		deref(copy.vec).assign(orig)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec2.Factory", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_copy);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":122
 * 		return copy
 * 
 * 	def Copy(self):             # <<<<<<<<<<<<<<
 * 		return Vec2.Factory(deref(self.vec))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec2_7Copy(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec2_7Copy(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Copy (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec2_6Copy(((struct __pyx_obj_3kdp_Vec2 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec2_6Copy(struct __pyx_obj_3kdp_Vec2 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Copy", 0);

  /* "kdp.pyx":123
 * 
 * 	def Copy(self):
 * 		return Vec2.Factory(deref(self.vec))             # <<<<<<<<<<<<<<
 * 
 * 	def __deepcopy__(self, memo):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_3kdp_4Vec2_Factory((*__pyx_v_self->vec))); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 123; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":122
 * 		return copy
 * 
 * 	def Copy(self):             # <<<<<<<<<<<<<<
 * 		return Vec2.Factory(deref(self.vec))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec2.Copy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":125
 * 		return Vec2.Factory(deref(self.vec))
 * 
 * 	def __deepcopy__(self, memo):             # <<<<<<<<<<<<<<
 * 		return self.Copy()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec2_9__deepcopy__(PyObject *__pyx_v_self, PyObject *__pyx_v_memo); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec2_9__deepcopy__(PyObject *__pyx_v_self, PyObject *__pyx_v_memo) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__deepcopy__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec2_8__deepcopy__(((struct __pyx_obj_3kdp_Vec2 *)__pyx_v_self), ((PyObject *)__pyx_v_memo));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec2_8__deepcopy__(struct __pyx_obj_3kdp_Vec2 *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_memo) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__deepcopy__", 0);

  /* "kdp.pyx":126
 * 
 * 	def __deepcopy__(self, memo):
 * 		return self.Copy()             # <<<<<<<<<<<<<<
 * 
 * 	def __repr__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_Copy); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":125
 * 		return Vec2.Factory(deref(self.vec))
 * 
 * 	def __deepcopy__(self, memo):             # <<<<<<<<<<<<<<
 * 		return self.Copy()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("kdp.Vec2.__deepcopy__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":128
 * 		return self.Copy()
 * 
 * 	def __repr__(self):             # <<<<<<<<<<<<<<
 * 		return str([self.x1, self.x2])
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec2_11__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec2_11__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec2_10__repr__(((struct __pyx_obj_3kdp_Vec2 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec2_10__repr__(struct __pyx_obj_3kdp_Vec2 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "kdp.pyx":129
 * 
 * 	def __repr__(self):
 * 		return str([self.x1, self.x2])             # <<<<<<<<<<<<<<
 * 
 * 	# This way of defining properties is "deprecated",
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_x1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 129; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_x2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 129; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyList_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 129; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyList_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyList_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 129; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)(&PyUnicode_Type)), __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 129; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":128
 * 		return self.Copy()
 * 
 * 	def __repr__(self):             # <<<<<<<<<<<<<<
 * 		return str([self.x1, self.x2])
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("kdp.Vec2.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":135
 * 	property x1:
 * 		# "A doc string can go here."
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return deref(self.vec).x1
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec2_2x1_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec2_2x1_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec2_2x1___get__(((struct __pyx_obj_3kdp_Vec2 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec2_2x1___get__(struct __pyx_obj_3kdp_Vec2 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "kdp.pyx":136
 * 		# "A doc string can go here."
 * 		def __get__(self):
 * 			return deref(self.vec).x1             # <<<<<<<<<<<<<<
 * 
 * 		def __set__(self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((*__pyx_v_self->vec).x1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":135
 * 	property x1:
 * 		# "A doc string can go here."
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return deref(self.vec).x1
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec2.x1.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":138
 * 			return deref(self.vec).x1
 * 
 * 		def __set__(self, value):             # <<<<<<<<<<<<<<
 * 			deref(self.vec).x1 = value
 * 
 */

/* Python wrapper */
static int __pyx_pw_3kdp_4Vec2_2x1_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_3kdp_4Vec2_2x1_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec2_2x1_2__set__(((struct __pyx_obj_3kdp_Vec2 *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3kdp_4Vec2_2x1_2__set__(struct __pyx_obj_3kdp_Vec2 *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "kdp.pyx":139
 * 
 * 		def __set__(self, value):
 * 			deref(self.vec).x1 = value             # <<<<<<<<<<<<<<
 * 
 * 	property x2:
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 139; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  (*__pyx_v_self->vec).x1 = __pyx_t_1;

  /* "kdp.pyx":138
 * 			return deref(self.vec).x1
 * 
 * 		def __set__(self, value):             # <<<<<<<<<<<<<<
 * 			deref(self.vec).x1 = value
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("kdp.Vec2.x1.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":142
 * 
 * 	property x2:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return deref(self.vec).x2
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec2_2x2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec2_2x2_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec2_2x2___get__(((struct __pyx_obj_3kdp_Vec2 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec2_2x2___get__(struct __pyx_obj_3kdp_Vec2 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "kdp.pyx":143
 * 	property x2:
 * 		def __get__(self):
 * 			return deref(self.vec).x2             # <<<<<<<<<<<<<<
 * 
 * 		def __set__(self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((*__pyx_v_self->vec).x2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 143; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":142
 * 
 * 	property x2:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return deref(self.vec).x2
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec2.x2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":145
 * 			return deref(self.vec).x2
 * 
 * 		def __set__(self, value):             # <<<<<<<<<<<<<<
 * 			deref(self.vec).x2 = value
 * 
 */

/* Python wrapper */
static int __pyx_pw_3kdp_4Vec2_2x2_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_3kdp_4Vec2_2x2_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec2_2x2_2__set__(((struct __pyx_obj_3kdp_Vec2 *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3kdp_4Vec2_2x2_2__set__(struct __pyx_obj_3kdp_Vec2 *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "kdp.pyx":146
 * 
 * 		def __set__(self, value):
 * 			deref(self.vec).x2 = value             # <<<<<<<<<<<<<<
 * 
 * # The broken way to define properties
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 146; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  (*__pyx_v_self->vec).x2 = __pyx_t_1;

  /* "kdp.pyx":145
 * 			return deref(self.vec).x2
 * 
 * 		def __set__(self, value):             # <<<<<<<<<<<<<<
 * 			deref(self.vec).x2 = value
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("kdp.Vec2.x2.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":157
 * #~ 		deref(self.vec).x1 = value
 * 
 * 	def __iadd__(self, Vec2 other):             # <<<<<<<<<<<<<<
 * 		deref(self.vec).addEquals(deref(other.vec))
 * 		return self
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec2_13__iadd__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec2_13__iadd__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iadd__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_3kdp_Vec2, 1, "other", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 157; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_3kdp_4Vec2_12__iadd__(((struct __pyx_obj_3kdp_Vec2 *)__pyx_v_self), ((struct __pyx_obj_3kdp_Vec2 *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec2_12__iadd__(struct __pyx_obj_3kdp_Vec2 *__pyx_v_self, struct __pyx_obj_3kdp_Vec2 *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iadd__", 0);

  /* "kdp.pyx":158
 * 
 * 	def __iadd__(self, Vec2 other):
 * 		deref(self.vec).addEquals(deref(other.vec))             # <<<<<<<<<<<<<<
 * 		return self
 * 
 */
  (*__pyx_v_self->vec).operator+=((*__pyx_v_other->vec));

  /* "kdp.pyx":159
 * 	def __iadd__(self, Vec2 other):
 * 		deref(self.vec).addEquals(deref(other.vec))
 * 		return self             # <<<<<<<<<<<<<<
 * 
 * 	def __isub__(self, Vec2 other):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "kdp.pyx":157
 * #~ 		deref(self.vec).x1 = value
 * 
 * 	def __iadd__(self, Vec2 other):             # <<<<<<<<<<<<<<
 * 		deref(self.vec).addEquals(deref(other.vec))
 * 		return self
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":161
 * 		return self
 * 
 * 	def __isub__(self, Vec2 other):             # <<<<<<<<<<<<<<
 * 		deref(self.vec).subEquals(deref(other.vec))
 * 		return self
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec2_15__isub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec2_15__isub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__isub__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_3kdp_Vec2, 1, "other", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_3kdp_4Vec2_14__isub__(((struct __pyx_obj_3kdp_Vec2 *)__pyx_v_self), ((struct __pyx_obj_3kdp_Vec2 *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec2_14__isub__(struct __pyx_obj_3kdp_Vec2 *__pyx_v_self, struct __pyx_obj_3kdp_Vec2 *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__isub__", 0);

  /* "kdp.pyx":162
 * 
 * 	def __isub__(self, Vec2 other):
 * 		deref(self.vec).subEquals(deref(other.vec))             # <<<<<<<<<<<<<<
 * 		return self
 * 
 */
  (*__pyx_v_self->vec).operator-=((*__pyx_v_other->vec));

  /* "kdp.pyx":163
 * 	def __isub__(self, Vec2 other):
 * 		deref(self.vec).subEquals(deref(other.vec))
 * 		return self             # <<<<<<<<<<<<<<
 * 
 * 	def __imul__(self, double scale):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "kdp.pyx":161
 * 		return self
 * 
 * 	def __isub__(self, Vec2 other):             # <<<<<<<<<<<<<<
 * 		deref(self.vec).subEquals(deref(other.vec))
 * 		return self
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":165
 * 		return self
 * 
 * 	def __imul__(self, double scale):             # <<<<<<<<<<<<<<
 * 		deref(self.vec).mulEquals(scale)
 * 		return self
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec2_17__imul__(PyObject *__pyx_v_self, PyObject *__pyx_arg_scale); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec2_17__imul__(PyObject *__pyx_v_self, PyObject *__pyx_arg_scale) {
  double __pyx_v_scale;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__imul__ (wrapper)", 0);
  assert(__pyx_arg_scale); {
    __pyx_v_scale = __pyx_PyFloat_AsDouble(__pyx_arg_scale); if (unlikely((__pyx_v_scale == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 165; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("kdp.Vec2.__imul__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3kdp_4Vec2_16__imul__(((struct __pyx_obj_3kdp_Vec2 *)__pyx_v_self), ((double)__pyx_v_scale));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec2_16__imul__(struct __pyx_obj_3kdp_Vec2 *__pyx_v_self, double __pyx_v_scale) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__imul__", 0);

  /* "kdp.pyx":166
 * 
 * 	def __imul__(self, double scale):
 * 		deref(self.vec).mulEquals(scale)             # <<<<<<<<<<<<<<
 * 		return self
 * 
 */
  (*__pyx_v_self->vec).operator*=(__pyx_v_scale);

  /* "kdp.pyx":167
 * 	def __imul__(self, double scale):
 * 		deref(self.vec).mulEquals(scale)
 * 		return self             # <<<<<<<<<<<<<<
 * 
 * 	def __itruediv__(self, double scale):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "kdp.pyx":165
 * 		return self
 * 
 * 	def __imul__(self, double scale):             # <<<<<<<<<<<<<<
 * 		deref(self.vec).mulEquals(scale)
 * 		return self
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":169
 * 		return self
 * 
 * 	def __itruediv__(self, double scale):             # <<<<<<<<<<<<<<
 * 		deref(self.vec).divEquals(scale)
 * 		return self
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec2_19__itruediv__(PyObject *__pyx_v_self, PyObject *__pyx_arg_scale); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec2_19__itruediv__(PyObject *__pyx_v_self, PyObject *__pyx_arg_scale) {
  double __pyx_v_scale;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__itruediv__ (wrapper)", 0);
  assert(__pyx_arg_scale); {
    __pyx_v_scale = __pyx_PyFloat_AsDouble(__pyx_arg_scale); if (unlikely((__pyx_v_scale == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 169; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("kdp.Vec2.__itruediv__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3kdp_4Vec2_18__itruediv__(((struct __pyx_obj_3kdp_Vec2 *)__pyx_v_self), ((double)__pyx_v_scale));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec2_18__itruediv__(struct __pyx_obj_3kdp_Vec2 *__pyx_v_self, double __pyx_v_scale) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__itruediv__", 0);

  /* "kdp.pyx":170
 * 
 * 	def __itruediv__(self, double scale):
 * 		deref(self.vec).divEquals(scale)             # <<<<<<<<<<<<<<
 * 		return self
 * 
 */
  (*__pyx_v_self->vec).operator/=(__pyx_v_scale);

  /* "kdp.pyx":171
 * 	def __itruediv__(self, double scale):
 * 		deref(self.vec).divEquals(scale)
 * 		return self             # <<<<<<<<<<<<<<
 * 
 * 	def __add__(Vec2 this, Vec2 that):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "kdp.pyx":169
 * 		return self
 * 
 * 	def __itruediv__(self, double scale):             # <<<<<<<<<<<<<<
 * 		deref(self.vec).divEquals(scale)
 * 		return self
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":173
 * 		return self
 * 
 * 	def __add__(Vec2 this, Vec2 that):             # <<<<<<<<<<<<<<
 * 		return this.Copy().__iadd__(that)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec2_21__add__(PyObject *__pyx_v_this, PyObject *__pyx_v_that); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec2_21__add__(PyObject *__pyx_v_this, PyObject *__pyx_v_that) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__add__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_this), __pyx_ptype_3kdp_Vec2, 1, "this", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 173; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_that), __pyx_ptype_3kdp_Vec2, 1, "that", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 173; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_3kdp_4Vec2_20__add__(((struct __pyx_obj_3kdp_Vec2 *)__pyx_v_this), ((struct __pyx_obj_3kdp_Vec2 *)__pyx_v_that));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec2_20__add__(struct __pyx_obj_3kdp_Vec2 *__pyx_v_this, struct __pyx_obj_3kdp_Vec2 *__pyx_v_that) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__add__", 0);

  /* "kdp.pyx":174
 * 
 * 	def __add__(Vec2 this, Vec2 that):
 * 		return this.Copy().__iadd__(that)             # <<<<<<<<<<<<<<
 * 
 * 	def __sub__(Vec2 this, Vec2 that):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_this), __pyx_n_s_Copy); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (__pyx_t_4) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else {
    __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_iadd); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (!__pyx_t_2) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, ((PyObject *)__pyx_v_that)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_2); __pyx_t_2 = NULL;
    __Pyx_INCREF(((PyObject *)__pyx_v_that));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_that));
    PyTuple_SET_ITEM(__pyx_t_4, 0+1, ((PyObject *)__pyx_v_that));
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":173
 * 		return self
 * 
 * 	def __add__(Vec2 this, Vec2 that):             # <<<<<<<<<<<<<<
 * 		return this.Copy().__iadd__(that)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("kdp.Vec2.__add__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":176
 * 		return this.Copy().__iadd__(that)
 * 
 * 	def __sub__(Vec2 this, Vec2 that):             # <<<<<<<<<<<<<<
 * 		return this.Copy().__isub__(that)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec2_23__sub__(PyObject *__pyx_v_this, PyObject *__pyx_v_that); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec2_23__sub__(PyObject *__pyx_v_this, PyObject *__pyx_v_that) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__sub__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_this), __pyx_ptype_3kdp_Vec2, 1, "this", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 176; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_that), __pyx_ptype_3kdp_Vec2, 1, "that", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 176; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_3kdp_4Vec2_22__sub__(((struct __pyx_obj_3kdp_Vec2 *)__pyx_v_this), ((struct __pyx_obj_3kdp_Vec2 *)__pyx_v_that));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec2_22__sub__(struct __pyx_obj_3kdp_Vec2 *__pyx_v_this, struct __pyx_obj_3kdp_Vec2 *__pyx_v_that) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__sub__", 0);

  /* "kdp.pyx":177
 * 
 * 	def __sub__(Vec2 this, Vec2 that):
 * 		return this.Copy().__isub__(that)             # <<<<<<<<<<<<<<
 * 
 * 	# Currently, __rmul__ is not supported
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_this), __pyx_n_s_Copy); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 177; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (__pyx_t_4) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 177; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else {
    __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 177; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_isub); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 177; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (!__pyx_t_2) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, ((PyObject *)__pyx_v_that)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 177; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 177; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_2); __pyx_t_2 = NULL;
    __Pyx_INCREF(((PyObject *)__pyx_v_that));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_that));
    PyTuple_SET_ITEM(__pyx_t_4, 0+1, ((PyObject *)__pyx_v_that));
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 177; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":176
 * 		return this.Copy().__iadd__(that)
 * 
 * 	def __sub__(Vec2 this, Vec2 that):             # <<<<<<<<<<<<<<
 * 		return this.Copy().__isub__(that)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("kdp.Vec2.__sub__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":180
 * 
 * 	# Currently, __rmul__ is not supported
 * 	def __mul__(Vec2 this, double scale):             # <<<<<<<<<<<<<<
 * 		return this.Copy().__imul__(scale)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec2_25__mul__(PyObject *__pyx_v_this, PyObject *__pyx_arg_scale); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec2_25__mul__(PyObject *__pyx_v_this, PyObject *__pyx_arg_scale) {
  double __pyx_v_scale;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__mul__ (wrapper)", 0);
  assert(__pyx_arg_scale); {
    __pyx_v_scale = __pyx_PyFloat_AsDouble(__pyx_arg_scale); if (unlikely((__pyx_v_scale == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 180; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("kdp.Vec2.__mul__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_this), __pyx_ptype_3kdp_Vec2, 1, "this", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 180; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_3kdp_4Vec2_24__mul__(((struct __pyx_obj_3kdp_Vec2 *)__pyx_v_this), ((double)__pyx_v_scale));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec2_24__mul__(struct __pyx_obj_3kdp_Vec2 *__pyx_v_this, double __pyx_v_scale) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__mul__", 0);

  /* "kdp.pyx":181
 * 	# Currently, __rmul__ is not supported
 * 	def __mul__(Vec2 this, double scale):
 * 		return this.Copy().__imul__(scale)             # <<<<<<<<<<<<<<
 * 
 * 	# Note this is truediv, not div, which is what Python 3 will call for  a / b
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_this), __pyx_n_s_Copy); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (__pyx_t_4) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else {
    __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_imul); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_scale); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_t_2);
    __pyx_t_2 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":180
 * 
 * 	# Currently, __rmul__ is not supported
 * 	def __mul__(Vec2 this, double scale):             # <<<<<<<<<<<<<<
 * 		return this.Copy().__imul__(scale)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("kdp.Vec2.__mul__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":184
 * 
 * 	# Note this is truediv, not div, which is what Python 3 will call for  a / b
 * 	def __truediv__(Vec2 this, double scale):             # <<<<<<<<<<<<<<
 * 		return this.Copy().__itruediv__(scale)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec2_27__truediv__(PyObject *__pyx_v_this, PyObject *__pyx_arg_scale); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec2_27__truediv__(PyObject *__pyx_v_this, PyObject *__pyx_arg_scale) {
  double __pyx_v_scale;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__truediv__ (wrapper)", 0);
  assert(__pyx_arg_scale); {
    __pyx_v_scale = __pyx_PyFloat_AsDouble(__pyx_arg_scale); if (unlikely((__pyx_v_scale == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 184; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("kdp.Vec2.__truediv__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_this), __pyx_ptype_3kdp_Vec2, 1, "this", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 184; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_3kdp_4Vec2_26__truediv__(((struct __pyx_obj_3kdp_Vec2 *)__pyx_v_this), ((double)__pyx_v_scale));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec2_26__truediv__(struct __pyx_obj_3kdp_Vec2 *__pyx_v_this, double __pyx_v_scale) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__truediv__", 0);

  /* "kdp.pyx":185
 * 	# Note this is truediv, not div, which is what Python 3 will call for  a / b
 * 	def __truediv__(Vec2 this, double scale):
 * 		return this.Copy().__itruediv__(scale)             # <<<<<<<<<<<<<<
 * 
 * 	def __neg__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_this), __pyx_n_s_Copy); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (__pyx_t_4) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else {
    __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_itruediv); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_scale); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_t_2);
    __pyx_t_2 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":184
 * 
 * 	# Note this is truediv, not div, which is what Python 3 will call for  a / b
 * 	def __truediv__(Vec2 this, double scale):             # <<<<<<<<<<<<<<
 * 		return this.Copy().__itruediv__(scale)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("kdp.Vec2.__truediv__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":187
 * 		return this.Copy().__itruediv__(scale)
 * 
 * 	def __neg__(self):             # <<<<<<<<<<<<<<
 * 		ret = Vec2()
 * 		deref(ret.vec).assign(-deref(self.vec))
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec2_29__neg__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec2_29__neg__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__neg__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec2_28__neg__(((struct __pyx_obj_3kdp_Vec2 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec2_28__neg__(struct __pyx_obj_3kdp_Vec2 *__pyx_v_self) {
  struct __pyx_obj_3kdp_Vec2 *__pyx_v_ret = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__neg__", 0);

  /* "kdp.pyx":188
 * 
 * 	def __neg__(self):
 * 		ret = Vec2()             # <<<<<<<<<<<<<<
 * 		deref(ret.vec).assign(-deref(self.vec))
 * 		return ret
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_3kdp_Vec2), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 188; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_ret = ((struct __pyx_obj_3kdp_Vec2 *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "kdp.pyx":189
 * 	def __neg__(self):
 * 		ret = Vec2()
 * 		deref(ret.vec).assign(-deref(self.vec))             # <<<<<<<<<<<<<<
 * 		return ret
 * 
 */
  (*__pyx_v_ret->vec).operator=((-(*__pyx_v_self->vec)));

  /* "kdp.pyx":190
 * 		ret = Vec2()
 * 		deref(ret.vec).assign(-deref(self.vec))
 * 		return ret             # <<<<<<<<<<<<<<
 * 
 * 	def Normalize(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_ret));
  __pyx_r = ((PyObject *)__pyx_v_ret);
  goto __pyx_L0;

  /* "kdp.pyx":187
 * 		return this.Copy().__itruediv__(scale)
 * 
 * 	def __neg__(self):             # <<<<<<<<<<<<<<
 * 		ret = Vec2()
 * 		deref(ret.vec).assign(-deref(self.vec))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec2.__neg__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_ret);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":192
 * 		return ret
 * 
 * 	def Normalize(self):             # <<<<<<<<<<<<<<
 * 		deref(self.vec).Normalize()
 * 		return self
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec2_31Normalize(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec2_31Normalize(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Normalize (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec2_30Normalize(((struct __pyx_obj_3kdp_Vec2 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec2_30Normalize(struct __pyx_obj_3kdp_Vec2 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Normalize", 0);

  /* "kdp.pyx":193
 * 
 * 	def Normalize(self):
 * 		deref(self.vec).Normalize()             # <<<<<<<<<<<<<<
 * 		return self
 * 
 */
  (*__pyx_v_self->vec).Normalize();

  /* "kdp.pyx":194
 * 	def Normalize(self):
 * 		deref(self.vec).Normalize()
 * 		return self             # <<<<<<<<<<<<<<
 * 
 * 	def Mag(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "kdp.pyx":192
 * 		return ret
 * 
 * 	def Normalize(self):             # <<<<<<<<<<<<<<
 * 		deref(self.vec).Normalize()
 * 		return self
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":196
 * 		return self
 * 
 * 	def Mag(self):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).Mag()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec2_33Mag(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec2_33Mag(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Mag (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec2_32Mag(((struct __pyx_obj_3kdp_Vec2 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec2_32Mag(struct __pyx_obj_3kdp_Vec2 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Mag", 0);

  /* "kdp.pyx":197
 * 
 * 	def Mag(self):
 * 		return deref(self.vec).Mag()             # <<<<<<<<<<<<<<
 * 
 * 	def Mag2(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((*__pyx_v_self->vec).Mag()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 197; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":196
 * 		return self
 * 
 * 	def Mag(self):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).Mag()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec2.Mag", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":199
 * 		return deref(self.vec).Mag()
 * 
 * 	def Mag2(self):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).Mag2()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec2_35Mag2(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec2_35Mag2(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Mag2 (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec2_34Mag2(((struct __pyx_obj_3kdp_Vec2 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec2_34Mag2(struct __pyx_obj_3kdp_Vec2 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Mag2", 0);

  /* "kdp.pyx":200
 * 
 * 	def Mag2(self):
 * 		return deref(self.vec).Mag2()             # <<<<<<<<<<<<<<
 * 
 * 	def Phi(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((*__pyx_v_self->vec).Mag2()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 200; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":199
 * 		return deref(self.vec).Mag()
 * 
 * 	def Mag2(self):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).Mag2()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec2.Mag2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":202
 * 		return deref(self.vec).Mag2()
 * 
 * 	def Phi(self):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).Phi()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec2_37Phi(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec2_37Phi(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Phi (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec2_36Phi(((struct __pyx_obj_3kdp_Vec2 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec2_36Phi(struct __pyx_obj_3kdp_Vec2 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Phi", 0);

  /* "kdp.pyx":203
 * 
 * 	def Phi(self):
 * 		return deref(self.vec).Phi()             # <<<<<<<<<<<<<<
 * 
 * 	def DeltaPhi(self, Vec2 other):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((*__pyx_v_self->vec).Phi()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 203; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":202
 * 		return deref(self.vec).Mag2()
 * 
 * 	def Phi(self):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).Phi()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec2.Phi", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":205
 * 		return deref(self.vec).Phi()
 * 
 * 	def DeltaPhi(self, Vec2 other):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).DeltaPhi(deref(other.vec))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec2_39DeltaPhi(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec2_39DeltaPhi(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("DeltaPhi (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_3kdp_Vec2, 1, "other", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 205; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_3kdp_4Vec2_38DeltaPhi(((struct __pyx_obj_3kdp_Vec2 *)__pyx_v_self), ((struct __pyx_obj_3kdp_Vec2 *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec2_38DeltaPhi(struct __pyx_obj_3kdp_Vec2 *__pyx_v_self, struct __pyx_obj_3kdp_Vec2 *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("DeltaPhi", 0);

  /* "kdp.pyx":206
 * 
 * 	def DeltaPhi(self, Vec2 other):
 * 		return deref(self.vec).DeltaPhi(deref(other.vec))             # <<<<<<<<<<<<<<
 * 
 * 	def Dot(self, Vec2 other):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((*__pyx_v_self->vec).DeltaPhi((*__pyx_v_other->vec))); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 206; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":205
 * 		return deref(self.vec).Phi()
 * 
 * 	def DeltaPhi(self, Vec2 other):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).DeltaPhi(deref(other.vec))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec2.DeltaPhi", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":208
 * 		return deref(self.vec).DeltaPhi(deref(other.vec))
 * 
 * 	def Dot(self, Vec2 other):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).Dot(deref(other.vec))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec2_41Dot(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec2_41Dot(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Dot (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_3kdp_Vec2, 1, "other", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 208; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_3kdp_4Vec2_40Dot(((struct __pyx_obj_3kdp_Vec2 *)__pyx_v_self), ((struct __pyx_obj_3kdp_Vec2 *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec2_40Dot(struct __pyx_obj_3kdp_Vec2 *__pyx_v_self, struct __pyx_obj_3kdp_Vec2 *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Dot", 0);

  /* "kdp.pyx":209
 * 
 * 	def Dot(self, Vec2 other):
 * 		return deref(self.vec).Dot(deref(other.vec))             # <<<<<<<<<<<<<<
 * 
 * 	def Cross(self, Vec2 other):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((*__pyx_v_self->vec).Dot((*__pyx_v_other->vec))); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 209; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":208
 * 		return deref(self.vec).DeltaPhi(deref(other.vec))
 * 
 * 	def Dot(self, Vec2 other):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).Dot(deref(other.vec))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec2.Dot", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":211
 * 		return deref(self.vec).Dot(deref(other.vec))
 * 
 * 	def Cross(self, Vec2 other):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).Cross(deref(other.vec))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec2_43Cross(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec2_43Cross(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Cross (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_3kdp_Vec2, 1, "other", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 211; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_3kdp_4Vec2_42Cross(((struct __pyx_obj_3kdp_Vec2 *)__pyx_v_self), ((struct __pyx_obj_3kdp_Vec2 *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec2_42Cross(struct __pyx_obj_3kdp_Vec2 *__pyx_v_self, struct __pyx_obj_3kdp_Vec2 *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Cross", 0);

  /* "kdp.pyx":212
 * 
 * 	def Cross(self, Vec2 other):
 * 		return deref(self.vec).Cross(deref(other.vec))             # <<<<<<<<<<<<<<
 * 
 * 	def InteriorAngle(self, Vec2 other):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((*__pyx_v_self->vec).Cross((*__pyx_v_other->vec))); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 212; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":211
 * 		return deref(self.vec).Dot(deref(other.vec))
 * 
 * 	def Cross(self, Vec2 other):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).Cross(deref(other.vec))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec2.Cross", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":214
 * 		return deref(self.vec).Cross(deref(other.vec))
 * 
 * 	def InteriorAngle(self, Vec2 other):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).InteriorAngle(deref(other.vec))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec2_45InteriorAngle(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec2_45InteriorAngle(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("InteriorAngle (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_3kdp_Vec2, 1, "other", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 214; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_3kdp_4Vec2_44InteriorAngle(((struct __pyx_obj_3kdp_Vec2 *)__pyx_v_self), ((struct __pyx_obj_3kdp_Vec2 *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec2_44InteriorAngle(struct __pyx_obj_3kdp_Vec2 *__pyx_v_self, struct __pyx_obj_3kdp_Vec2 *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("InteriorAngle", 0);

  /* "kdp.pyx":215
 * 
 * 	def InteriorAngle(self, Vec2 other):
 * 		return deref(self.vec).InteriorAngle(deref(other.vec))             # <<<<<<<<<<<<<<
 * 
 * ########################################################################
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((*__pyx_v_self->vec).InteriorAngle((*__pyx_v_other->vec))); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":214
 * 		return deref(self.vec).Cross(deref(other.vec))
 * 
 * 	def InteriorAngle(self, Vec2 other):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).InteriorAngle(deref(other.vec))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec2.InteriorAngle", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":222
 * #~ 	cdef shared_ptr[Vec3_c] vec
 * 
 * 	def __cinit__(self, double x1 = 0., double x2 = 0., double x3 = 0.):             # <<<<<<<<<<<<<<
 * #~ 		self.vec = shared_ptr[Vec3_c](new Vec3_c(x1, x2, x3))
 * 		self.vec = make_shared[Vec3_c](x1, x2, x3)
 */

/* Python wrapper */
static int __pyx_pw_3kdp_4Vec3_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_3kdp_4Vec3_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_x1;
  double __pyx_v_x2;
  double __pyx_v_x3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x1,&__pyx_n_s_x2,&__pyx_n_s_x3,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x1);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x2);
          if (value) { values[1] = value; kw_args--; }
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x3);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 222; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_x1 = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_x1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 222; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_x1 = ((double)0.);
    }
    if (values[1]) {
      __pyx_v_x2 = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_x2 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 222; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_x2 = ((double)0.);
    }
    if (values[2]) {
      __pyx_v_x3 = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_x3 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 222; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_x3 = ((double)0.);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 222; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("kdp.Vec3.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3kdp_4Vec3___cinit__(((struct __pyx_obj_3kdp_Vec3 *)__pyx_v_self), __pyx_v_x1, __pyx_v_x2, __pyx_v_x3);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3kdp_4Vec3___cinit__(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self, double __pyx_v_x1, double __pyx_v_x2, double __pyx_v_x3) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "kdp.pyx":224
 * 	def __cinit__(self, double x1 = 0., double x2 = 0., double x3 = 0.):
 * #~ 		self.vec = shared_ptr[Vec3_c](new Vec3_c(x1, x2, x3))
 * 		self.vec = make_shared[Vec3_c](x1, x2, x3)             # <<<<<<<<<<<<<<
 * 
 * 	def __dealloc__(self):
 */
  __pyx_v_self->vec = std::make_shared<kdp::Vec3>(__pyx_v_x1, __pyx_v_x2, __pyx_v_x3);

  /* "kdp.pyx":222
 * #~ 	cdef shared_ptr[Vec3_c] vec
 * 
 * 	def __cinit__(self, double x1 = 0., double x2 = 0., double x3 = 0.):             # <<<<<<<<<<<<<<
 * #~ 		self.vec = shared_ptr[Vec3_c](new Vec3_c(x1, x2, x3))
 * 		self.vec = make_shared[Vec3_c](x1, x2, x3)
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":226
 * 		self.vec = make_shared[Vec3_c](x1, x2, x3)
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		return
 * 
 */

/* Python wrapper */
static void __pyx_pw_3kdp_4Vec3_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_3kdp_4Vec3_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_3kdp_4Vec3_2__dealloc__(((struct __pyx_obj_3kdp_Vec3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_3kdp_4Vec3_2__dealloc__(CYTHON_UNUSED struct __pyx_obj_3kdp_Vec3 *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "kdp.pyx":227
 * 
 * 	def __dealloc__(self):
 * 		return             # <<<<<<<<<<<<<<
 * 
 * 	def Assign(self, Vec3 other):
 */
  goto __pyx_L0;

  /* "kdp.pyx":226
 * 		self.vec = make_shared[Vec3_c](x1, x2, x3)
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		return
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "kdp.pyx":229
 * 		return
 * 
 * 	def Assign(self, Vec3 other):             # <<<<<<<<<<<<<<
 * 		deref(self.vec).assign(deref(other.vec))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec3_5Assign(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec3_5Assign(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Assign (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_3kdp_Vec3, 1, "other", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 229; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_3kdp_4Vec3_4Assign(((struct __pyx_obj_3kdp_Vec3 *)__pyx_v_self), ((struct __pyx_obj_3kdp_Vec3 *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec3_4Assign(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self, struct __pyx_obj_3kdp_Vec3 *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Assign", 0);

  /* "kdp.pyx":230
 * 
 * 	def Assign(self, Vec3 other):
 * 		deref(self.vec).assign(deref(other.vec))             # <<<<<<<<<<<<<<
 * 
 * 	@staticmethod
 */
  (*__pyx_v_self->vec).operator=((*__pyx_v_other->vec));

  /* "kdp.pyx":229
 * 		return
 * 
 * 	def Assign(self, Vec3 other):             # <<<<<<<<<<<<<<
 * 		deref(self.vec).assign(deref(other.vec))
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":233
 * 
 * 	@staticmethod
 * 	cdef Vec3 Factory(const Vec3_c& orig):             # <<<<<<<<<<<<<<
 * 		copy = Vec3()
 * 		deref(copy.vec).assign(orig)
 */

static struct __pyx_obj_3kdp_Vec3 *__pyx_f_3kdp_4Vec3_Factory(kdp::Vec3 const &__pyx_v_orig) {
  struct __pyx_obj_3kdp_Vec3 *__pyx_v_copy = NULL;
  struct __pyx_obj_3kdp_Vec3 *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Factory", 0);

  /* "kdp.pyx":234
 * 	@staticmethod
 * 	cdef Vec3 Factory(const Vec3_c& orig):
 * 		copy = Vec3()             # <<<<<<<<<<<<<<
 * 		deref(copy.vec).assign(orig)
 * 		return copy
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_3kdp_Vec3), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 234; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_copy = ((struct __pyx_obj_3kdp_Vec3 *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "kdp.pyx":235
 * 	cdef Vec3 Factory(const Vec3_c& orig):
 * 		copy = Vec3()
 * 		deref(copy.vec).assign(orig)             # <<<<<<<<<<<<<<
 * 		return copy
 * 
 */
  (*__pyx_v_copy->vec).operator=(__pyx_v_orig);

  /* "kdp.pyx":236
 * 		copy = Vec3()
 * 		deref(copy.vec).assign(orig)
 * 		return copy             # <<<<<<<<<<<<<<
 * 
 * 	@staticmethod
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __Pyx_INCREF(((PyObject *)__pyx_v_copy));
  __pyx_r = __pyx_v_copy;
  goto __pyx_L0;

  /* "kdp.pyx":233
 * 
 * 	@staticmethod
 * 	cdef Vec3 Factory(const Vec3_c& orig):             # <<<<<<<<<<<<<<
 * 		copy = Vec3()
 * 		deref(copy.vec).assign(orig)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec3.Factory", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_copy);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":239
 * 
 * 	@staticmethod
 * 	def Make_LengthThetaPhi(double length, double theta, double phi):             # <<<<<<<<<<<<<<
 * 		return Vec3.Factory(Vec3_c(length, theta, phi, V3f_LengthThetaPhi))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec3_7Make_LengthThetaPhi(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_3kdp_4Vec3_7Make_LengthThetaPhi = {"Make_LengthThetaPhi", (PyCFunction)__pyx_pw_3kdp_4Vec3_7Make_LengthThetaPhi, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_3kdp_4Vec3_7Make_LengthThetaPhi(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_length;
  double __pyx_v_theta;
  double __pyx_v_phi;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Make_LengthThetaPhi (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_length,&__pyx_n_s_theta,&__pyx_n_s_phi,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_length)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_theta)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("Make_LengthThetaPhi", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 239; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_phi)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("Make_LengthThetaPhi", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 239; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "Make_LengthThetaPhi") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 239; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_length = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_length == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 239; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_theta = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_theta == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 239; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_phi = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_phi == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 239; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("Make_LengthThetaPhi", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 239; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("kdp.Vec3.Make_LengthThetaPhi", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3kdp_4Vec3_6Make_LengthThetaPhi(__pyx_v_length, __pyx_v_theta, __pyx_v_phi);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec3_6Make_LengthThetaPhi(double __pyx_v_length, double __pyx_v_theta, double __pyx_v_phi) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Make_LengthThetaPhi", 0);

  /* "kdp.pyx":240
 * 	@staticmethod
 * 	def Make_LengthThetaPhi(double length, double theta, double phi):
 * 		return Vec3.Factory(Vec3_c(length, theta, phi, V3f_LengthThetaPhi))             # <<<<<<<<<<<<<<
 * 
 * 	def Copy(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_3kdp_4Vec3_Factory(kdp::Vec3(__pyx_v_length, __pyx_v_theta, __pyx_v_phi, kdp::Vec3from::LengthThetaPhi))); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 240; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":239
 * 
 * 	@staticmethod
 * 	def Make_LengthThetaPhi(double length, double theta, double phi):             # <<<<<<<<<<<<<<
 * 		return Vec3.Factory(Vec3_c(length, theta, phi, V3f_LengthThetaPhi))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec3.Make_LengthThetaPhi", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":242
 * 		return Vec3.Factory(Vec3_c(length, theta, phi, V3f_LengthThetaPhi))
 * 
 * 	def Copy(self):             # <<<<<<<<<<<<<<
 * 		return Vec3.Factory(deref(self.vec))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec3_9Copy(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec3_9Copy(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Copy (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec3_8Copy(((struct __pyx_obj_3kdp_Vec3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec3_8Copy(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Copy", 0);

  /* "kdp.pyx":243
 * 
 * 	def Copy(self):
 * 		return Vec3.Factory(deref(self.vec))             # <<<<<<<<<<<<<<
 * 
 * 	def __deepcopy__(self, memo):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_3kdp_4Vec3_Factory((*__pyx_v_self->vec))); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 243; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":242
 * 		return Vec3.Factory(Vec3_c(length, theta, phi, V3f_LengthThetaPhi))
 * 
 * 	def Copy(self):             # <<<<<<<<<<<<<<
 * 		return Vec3.Factory(deref(self.vec))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec3.Copy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":245
 * 		return Vec3.Factory(deref(self.vec))
 * 
 * 	def __deepcopy__(self, memo):             # <<<<<<<<<<<<<<
 * 		return self.Copy()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec3_11__deepcopy__(PyObject *__pyx_v_self, PyObject *__pyx_v_memo); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec3_11__deepcopy__(PyObject *__pyx_v_self, PyObject *__pyx_v_memo) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__deepcopy__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec3_10__deepcopy__(((struct __pyx_obj_3kdp_Vec3 *)__pyx_v_self), ((PyObject *)__pyx_v_memo));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec3_10__deepcopy__(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_memo) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__deepcopy__", 0);

  /* "kdp.pyx":246
 * 
 * 	def __deepcopy__(self, memo):
 * 		return self.Copy()             # <<<<<<<<<<<<<<
 * 
 * 	def __repr__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_Copy); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 246; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 246; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 246; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":245
 * 		return Vec3.Factory(deref(self.vec))
 * 
 * 	def __deepcopy__(self, memo):             # <<<<<<<<<<<<<<
 * 		return self.Copy()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("kdp.Vec3.__deepcopy__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":248
 * 		return self.Copy()
 * 
 * 	def __repr__(self):             # <<<<<<<<<<<<<<
 * 		return str([self.x1, self.x2, self.x3])
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec3_13__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec3_13__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec3_12__repr__(((struct __pyx_obj_3kdp_Vec3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec3_12__repr__(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "kdp.pyx":249
 * 
 * 	def __repr__(self):
 * 		return str([self.x1, self.x2, self.x3])             # <<<<<<<<<<<<<<
 * 
 * 	property x1:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_x1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 249; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_x2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 249; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_x3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 249; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyList_New(3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 249; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_1);
  PyList_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyList_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyList_SET_ITEM(__pyx_t_4, 2, __pyx_t_3);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 249; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_4);
  __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyObject_Call(((PyObject *)(&PyUnicode_Type)), __pyx_t_3, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 249; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":248
 * 		return self.Copy()
 * 
 * 	def __repr__(self):             # <<<<<<<<<<<<<<
 * 		return str([self.x1, self.x2, self.x3])
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("kdp.Vec3.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":252
 * 
 * 	property x1:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return deref(self.vec).x1
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec3_2x1_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec3_2x1_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec3_2x1___get__(((struct __pyx_obj_3kdp_Vec3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec3_2x1___get__(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "kdp.pyx":253
 * 	property x1:
 * 		def __get__(self):
 * 			return deref(self.vec).x1             # <<<<<<<<<<<<<<
 * 
 * 		def __set__(self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((*__pyx_v_self->vec).x1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 253; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":252
 * 
 * 	property x1:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return deref(self.vec).x1
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec3.x1.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":255
 * 			return deref(self.vec).x1
 * 
 * 		def __set__(self, value):             # <<<<<<<<<<<<<<
 * 			deref(self.vec).x1 = value
 * 
 */

/* Python wrapper */
static int __pyx_pw_3kdp_4Vec3_2x1_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_3kdp_4Vec3_2x1_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec3_2x1_2__set__(((struct __pyx_obj_3kdp_Vec3 *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3kdp_4Vec3_2x1_2__set__(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "kdp.pyx":256
 * 
 * 		def __set__(self, value):
 * 			deref(self.vec).x1 = value             # <<<<<<<<<<<<<<
 * 
 * 	property x2:
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 256; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  (*__pyx_v_self->vec).x1 = __pyx_t_1;

  /* "kdp.pyx":255
 * 			return deref(self.vec).x1
 * 
 * 		def __set__(self, value):             # <<<<<<<<<<<<<<
 * 			deref(self.vec).x1 = value
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("kdp.Vec3.x1.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":259
 * 
 * 	property x2:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return deref(self.vec).x2
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec3_2x2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec3_2x2_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec3_2x2___get__(((struct __pyx_obj_3kdp_Vec3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec3_2x2___get__(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "kdp.pyx":260
 * 	property x2:
 * 		def __get__(self):
 * 			return deref(self.vec).x2             # <<<<<<<<<<<<<<
 * 
 * 		def __set__(self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((*__pyx_v_self->vec).x2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 260; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":259
 * 
 * 	property x2:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return deref(self.vec).x2
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec3.x2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":262
 * 			return deref(self.vec).x2
 * 
 * 		def __set__(self, value):             # <<<<<<<<<<<<<<
 * 			deref(self.vec).x2 = value
 * 
 */

/* Python wrapper */
static int __pyx_pw_3kdp_4Vec3_2x2_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_3kdp_4Vec3_2x2_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec3_2x2_2__set__(((struct __pyx_obj_3kdp_Vec3 *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3kdp_4Vec3_2x2_2__set__(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "kdp.pyx":263
 * 
 * 		def __set__(self, value):
 * 			deref(self.vec).x2 = value             # <<<<<<<<<<<<<<
 * 
 * 	property x3:
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 263; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  (*__pyx_v_self->vec).x2 = __pyx_t_1;

  /* "kdp.pyx":262
 * 			return deref(self.vec).x2
 * 
 * 		def __set__(self, value):             # <<<<<<<<<<<<<<
 * 			deref(self.vec).x2 = value
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("kdp.Vec3.x2.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":266
 * 
 * 	property x3:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return deref(self.vec).x3
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec3_2x3_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec3_2x3_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec3_2x3___get__(((struct __pyx_obj_3kdp_Vec3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec3_2x3___get__(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "kdp.pyx":267
 * 	property x3:
 * 		def __get__(self):
 * 			return deref(self.vec).x3             # <<<<<<<<<<<<<<
 * 
 * 		def __set__(self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((*__pyx_v_self->vec).x3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 267; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":266
 * 
 * 	property x3:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return deref(self.vec).x3
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec3.x3.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":269
 * 			return deref(self.vec).x3
 * 
 * 		def __set__(self, value):             # <<<<<<<<<<<<<<
 * 			deref(self.vec).x3 = value
 * 
 */

/* Python wrapper */
static int __pyx_pw_3kdp_4Vec3_2x3_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_3kdp_4Vec3_2x3_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec3_2x3_2__set__(((struct __pyx_obj_3kdp_Vec3 *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3kdp_4Vec3_2x3_2__set__(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "kdp.pyx":270
 * 
 * 		def __set__(self, value):
 * 			deref(self.vec).x3 = value             # <<<<<<<<<<<<<<
 * 
 * 	def T(self):
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 270; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  (*__pyx_v_self->vec).x3 = __pyx_t_1;

  /* "kdp.pyx":269
 * 			return deref(self.vec).x3
 * 
 * 		def __set__(self, value):             # <<<<<<<<<<<<<<
 * 			deref(self.vec).x3 = value
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("kdp.Vec3.x3.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":272
 * 			deref(self.vec).x3 = value
 * 
 * 	def T(self):             # <<<<<<<<<<<<<<
 * 		vec2 = Vec2()
 * 		vec2.vec = shared_ptr_alias[Vec2_c, Vec3_c](self.vec, <Vec2_c*>(self.vec.get()))
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec3_15T(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec3_15T(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("T (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec3_14T(((struct __pyx_obj_3kdp_Vec3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec3_14T(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self) {
  struct __pyx_obj_3kdp_Vec2 *__pyx_v_vec2 = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("T", 0);

  /* "kdp.pyx":273
 * 
 * 	def T(self):
 * 		vec2 = Vec2()             # <<<<<<<<<<<<<<
 * 		vec2.vec = shared_ptr_alias[Vec2_c, Vec3_c](self.vec, <Vec2_c*>(self.vec.get()))
 * 		return vec2
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_3kdp_Vec2), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 273; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_vec2 = ((struct __pyx_obj_3kdp_Vec2 *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "kdp.pyx":274
 * 	def T(self):
 * 		vec2 = Vec2()
 * 		vec2.vec = shared_ptr_alias[Vec2_c, Vec3_c](self.vec, <Vec2_c*>(self.vec.get()))             # <<<<<<<<<<<<<<
 * 		return vec2
 * 
 */
  __pyx_v_vec2->vec = shared_ptr_alias<kdp::Vec2,kdp::Vec3>(__pyx_v_self->vec, ((kdp::Vec2 *)__pyx_v_self->vec.get()));

  /* "kdp.pyx":275
 * 		vec2 = Vec2()
 * 		vec2.vec = shared_ptr_alias[Vec2_c, Vec3_c](self.vec, <Vec2_c*>(self.vec.get()))
 * 		return vec2             # <<<<<<<<<<<<<<
 * 
 * 	def __iadd__(self, Vec3 other):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_vec2));
  __pyx_r = ((PyObject *)__pyx_v_vec2);
  goto __pyx_L0;

  /* "kdp.pyx":272
 * 			deref(self.vec).x3 = value
 * 
 * 	def T(self):             # <<<<<<<<<<<<<<
 * 		vec2 = Vec2()
 * 		vec2.vec = shared_ptr_alias[Vec2_c, Vec3_c](self.vec, <Vec2_c*>(self.vec.get()))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec3.T", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_vec2);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":277
 * 		return vec2
 * 
 * 	def __iadd__(self, Vec3 other):             # <<<<<<<<<<<<<<
 * 		deref(self.vec).addEquals(deref(other.vec))
 * 		return self
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec3_17__iadd__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec3_17__iadd__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iadd__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_3kdp_Vec3, 1, "other", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 277; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_3kdp_4Vec3_16__iadd__(((struct __pyx_obj_3kdp_Vec3 *)__pyx_v_self), ((struct __pyx_obj_3kdp_Vec3 *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec3_16__iadd__(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self, struct __pyx_obj_3kdp_Vec3 *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iadd__", 0);

  /* "kdp.pyx":278
 * 
 * 	def __iadd__(self, Vec3 other):
 * 		deref(self.vec).addEquals(deref(other.vec))             # <<<<<<<<<<<<<<
 * 		return self
 * 
 */
  (*__pyx_v_self->vec).operator+=((*__pyx_v_other->vec));

  /* "kdp.pyx":279
 * 	def __iadd__(self, Vec3 other):
 * 		deref(self.vec).addEquals(deref(other.vec))
 * 		return self             # <<<<<<<<<<<<<<
 * 
 * 	def __isub__(self, Vec3 other):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "kdp.pyx":277
 * 		return vec2
 * 
 * 	def __iadd__(self, Vec3 other):             # <<<<<<<<<<<<<<
 * 		deref(self.vec).addEquals(deref(other.vec))
 * 		return self
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":281
 * 		return self
 * 
 * 	def __isub__(self, Vec3 other):             # <<<<<<<<<<<<<<
 * 		deref(self.vec).subEquals(deref(other.vec))
 * 		return self
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec3_19__isub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec3_19__isub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__isub__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_3kdp_Vec3, 1, "other", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 281; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_3kdp_4Vec3_18__isub__(((struct __pyx_obj_3kdp_Vec3 *)__pyx_v_self), ((struct __pyx_obj_3kdp_Vec3 *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec3_18__isub__(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self, struct __pyx_obj_3kdp_Vec3 *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__isub__", 0);

  /* "kdp.pyx":282
 * 
 * 	def __isub__(self, Vec3 other):
 * 		deref(self.vec).subEquals(deref(other.vec))             # <<<<<<<<<<<<<<
 * 		return self
 * 
 */
  (*__pyx_v_self->vec).operator-=((*__pyx_v_other->vec));

  /* "kdp.pyx":283
 * 	def __isub__(self, Vec3 other):
 * 		deref(self.vec).subEquals(deref(other.vec))
 * 		return self             # <<<<<<<<<<<<<<
 * 
 * 	def __imul__(self, double scale):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "kdp.pyx":281
 * 		return self
 * 
 * 	def __isub__(self, Vec3 other):             # <<<<<<<<<<<<<<
 * 		deref(self.vec).subEquals(deref(other.vec))
 * 		return self
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":285
 * 		return self
 * 
 * 	def __imul__(self, double scale):             # <<<<<<<<<<<<<<
 * 		deref(self.vec).mulEquals(scale)
 * 		return self
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec3_21__imul__(PyObject *__pyx_v_self, PyObject *__pyx_arg_scale); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec3_21__imul__(PyObject *__pyx_v_self, PyObject *__pyx_arg_scale) {
  double __pyx_v_scale;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__imul__ (wrapper)", 0);
  assert(__pyx_arg_scale); {
    __pyx_v_scale = __pyx_PyFloat_AsDouble(__pyx_arg_scale); if (unlikely((__pyx_v_scale == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 285; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("kdp.Vec3.__imul__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3kdp_4Vec3_20__imul__(((struct __pyx_obj_3kdp_Vec3 *)__pyx_v_self), ((double)__pyx_v_scale));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec3_20__imul__(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self, double __pyx_v_scale) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__imul__", 0);

  /* "kdp.pyx":286
 * 
 * 	def __imul__(self, double scale):
 * 		deref(self.vec).mulEquals(scale)             # <<<<<<<<<<<<<<
 * 		return self
 * 
 */
  (*__pyx_v_self->vec).operator*=(__pyx_v_scale);

  /* "kdp.pyx":287
 * 	def __imul__(self, double scale):
 * 		deref(self.vec).mulEquals(scale)
 * 		return self             # <<<<<<<<<<<<<<
 * 
 * 	def __itruediv__(self, double scale):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "kdp.pyx":285
 * 		return self
 * 
 * 	def __imul__(self, double scale):             # <<<<<<<<<<<<<<
 * 		deref(self.vec).mulEquals(scale)
 * 		return self
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":289
 * 		return self
 * 
 * 	def __itruediv__(self, double scale):             # <<<<<<<<<<<<<<
 * 		deref(self.vec).divEquals(scale)
 * 		return self
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec3_23__itruediv__(PyObject *__pyx_v_self, PyObject *__pyx_arg_scale); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec3_23__itruediv__(PyObject *__pyx_v_self, PyObject *__pyx_arg_scale) {
  double __pyx_v_scale;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__itruediv__ (wrapper)", 0);
  assert(__pyx_arg_scale); {
    __pyx_v_scale = __pyx_PyFloat_AsDouble(__pyx_arg_scale); if (unlikely((__pyx_v_scale == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 289; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("kdp.Vec3.__itruediv__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3kdp_4Vec3_22__itruediv__(((struct __pyx_obj_3kdp_Vec3 *)__pyx_v_self), ((double)__pyx_v_scale));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec3_22__itruediv__(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self, double __pyx_v_scale) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__itruediv__", 0);

  /* "kdp.pyx":290
 * 
 * 	def __itruediv__(self, double scale):
 * 		deref(self.vec).divEquals(scale)             # <<<<<<<<<<<<<<
 * 		return self
 * 
 */
  (*__pyx_v_self->vec).operator/=(__pyx_v_scale);

  /* "kdp.pyx":291
 * 	def __itruediv__(self, double scale):
 * 		deref(self.vec).divEquals(scale)
 * 		return self             # <<<<<<<<<<<<<<
 * 
 * 	def __add__(Vec3 this, Vec3 that):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "kdp.pyx":289
 * 		return self
 * 
 * 	def __itruediv__(self, double scale):             # <<<<<<<<<<<<<<
 * 		deref(self.vec).divEquals(scale)
 * 		return self
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":293
 * 		return self
 * 
 * 	def __add__(Vec3 this, Vec3 that):             # <<<<<<<<<<<<<<
 * 		return this.Copy().__iadd__(that)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec3_25__add__(PyObject *__pyx_v_this, PyObject *__pyx_v_that); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec3_25__add__(PyObject *__pyx_v_this, PyObject *__pyx_v_that) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__add__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_this), __pyx_ptype_3kdp_Vec3, 1, "this", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 293; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_that), __pyx_ptype_3kdp_Vec3, 1, "that", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 293; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_3kdp_4Vec3_24__add__(((struct __pyx_obj_3kdp_Vec3 *)__pyx_v_this), ((struct __pyx_obj_3kdp_Vec3 *)__pyx_v_that));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec3_24__add__(struct __pyx_obj_3kdp_Vec3 *__pyx_v_this, struct __pyx_obj_3kdp_Vec3 *__pyx_v_that) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__add__", 0);

  /* "kdp.pyx":294
 * 
 * 	def __add__(Vec3 this, Vec3 that):
 * 		return this.Copy().__iadd__(that)             # <<<<<<<<<<<<<<
 * 
 * 	def __sub__(Vec3 this, Vec3 that):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_this), __pyx_n_s_Copy); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 294; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (__pyx_t_4) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 294; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else {
    __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 294; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_iadd); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 294; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (!__pyx_t_2) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, ((PyObject *)__pyx_v_that)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 294; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 294; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_2); __pyx_t_2 = NULL;
    __Pyx_INCREF(((PyObject *)__pyx_v_that));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_that));
    PyTuple_SET_ITEM(__pyx_t_4, 0+1, ((PyObject *)__pyx_v_that));
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 294; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":293
 * 		return self
 * 
 * 	def __add__(Vec3 this, Vec3 that):             # <<<<<<<<<<<<<<
 * 		return this.Copy().__iadd__(that)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("kdp.Vec3.__add__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":296
 * 		return this.Copy().__iadd__(that)
 * 
 * 	def __sub__(Vec3 this, Vec3 that):             # <<<<<<<<<<<<<<
 * 		return this.Copy().__isub__(that)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec3_27__sub__(PyObject *__pyx_v_this, PyObject *__pyx_v_that); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec3_27__sub__(PyObject *__pyx_v_this, PyObject *__pyx_v_that) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__sub__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_this), __pyx_ptype_3kdp_Vec3, 1, "this", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 296; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_that), __pyx_ptype_3kdp_Vec3, 1, "that", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 296; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_3kdp_4Vec3_26__sub__(((struct __pyx_obj_3kdp_Vec3 *)__pyx_v_this), ((struct __pyx_obj_3kdp_Vec3 *)__pyx_v_that));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec3_26__sub__(struct __pyx_obj_3kdp_Vec3 *__pyx_v_this, struct __pyx_obj_3kdp_Vec3 *__pyx_v_that) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__sub__", 0);

  /* "kdp.pyx":297
 * 
 * 	def __sub__(Vec3 this, Vec3 that):
 * 		return this.Copy().__isub__(that)             # <<<<<<<<<<<<<<
 * 
 * 	# Currently, __rmul__ is not supported
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_this), __pyx_n_s_Copy); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 297; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (__pyx_t_4) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 297; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else {
    __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 297; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_isub); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 297; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (!__pyx_t_2) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, ((PyObject *)__pyx_v_that)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 297; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 297; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_2); __pyx_t_2 = NULL;
    __Pyx_INCREF(((PyObject *)__pyx_v_that));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_that));
    PyTuple_SET_ITEM(__pyx_t_4, 0+1, ((PyObject *)__pyx_v_that));
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 297; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":296
 * 		return this.Copy().__iadd__(that)
 * 
 * 	def __sub__(Vec3 this, Vec3 that):             # <<<<<<<<<<<<<<
 * 		return this.Copy().__isub__(that)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("kdp.Vec3.__sub__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":300
 * 
 * 	# Currently, __rmul__ is not supported
 * 	def __mul__(Vec3 this, double scale):             # <<<<<<<<<<<<<<
 * 		return this.Copy().__imul__(scale)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec3_29__mul__(PyObject *__pyx_v_this, PyObject *__pyx_arg_scale); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec3_29__mul__(PyObject *__pyx_v_this, PyObject *__pyx_arg_scale) {
  double __pyx_v_scale;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__mul__ (wrapper)", 0);
  assert(__pyx_arg_scale); {
    __pyx_v_scale = __pyx_PyFloat_AsDouble(__pyx_arg_scale); if (unlikely((__pyx_v_scale == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 300; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("kdp.Vec3.__mul__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_this), __pyx_ptype_3kdp_Vec3, 1, "this", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 300; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_3kdp_4Vec3_28__mul__(((struct __pyx_obj_3kdp_Vec3 *)__pyx_v_this), ((double)__pyx_v_scale));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec3_28__mul__(struct __pyx_obj_3kdp_Vec3 *__pyx_v_this, double __pyx_v_scale) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__mul__", 0);

  /* "kdp.pyx":301
 * 	# Currently, __rmul__ is not supported
 * 	def __mul__(Vec3 this, double scale):
 * 		return this.Copy().__imul__(scale)             # <<<<<<<<<<<<<<
 * 
 * 	# Note this is truediv, not div
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_this), __pyx_n_s_Copy); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 301; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (__pyx_t_4) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 301; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else {
    __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 301; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_imul); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 301; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_scale); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 301; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 301; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 301; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_t_2);
    __pyx_t_2 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 301; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":300
 * 
 * 	# Currently, __rmul__ is not supported
 * 	def __mul__(Vec3 this, double scale):             # <<<<<<<<<<<<<<
 * 		return this.Copy().__imul__(scale)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("kdp.Vec3.__mul__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":304
 * 
 * 	# Note this is truediv, not div
 * 	def __truediv__(Vec3 this, double scale):             # <<<<<<<<<<<<<<
 * 		return this.Copy().__itruediv__(scale)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec3_31__truediv__(PyObject *__pyx_v_this, PyObject *__pyx_arg_scale); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec3_31__truediv__(PyObject *__pyx_v_this, PyObject *__pyx_arg_scale) {
  double __pyx_v_scale;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__truediv__ (wrapper)", 0);
  assert(__pyx_arg_scale); {
    __pyx_v_scale = __pyx_PyFloat_AsDouble(__pyx_arg_scale); if (unlikely((__pyx_v_scale == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 304; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("kdp.Vec3.__truediv__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_this), __pyx_ptype_3kdp_Vec3, 1, "this", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 304; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_3kdp_4Vec3_30__truediv__(((struct __pyx_obj_3kdp_Vec3 *)__pyx_v_this), ((double)__pyx_v_scale));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec3_30__truediv__(struct __pyx_obj_3kdp_Vec3 *__pyx_v_this, double __pyx_v_scale) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__truediv__", 0);

  /* "kdp.pyx":305
 * 	# Note this is truediv, not div
 * 	def __truediv__(Vec3 this, double scale):
 * 		return this.Copy().__itruediv__(scale)             # <<<<<<<<<<<<<<
 * 
 * 	def __neg__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_this), __pyx_n_s_Copy); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 305; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (__pyx_t_4) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 305; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else {
    __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 305; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_itruediv); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 305; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_scale); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 305; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 305; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 305; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_t_2);
    __pyx_t_2 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 305; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":304
 * 
 * 	# Note this is truediv, not div
 * 	def __truediv__(Vec3 this, double scale):             # <<<<<<<<<<<<<<
 * 		return this.Copy().__itruediv__(scale)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("kdp.Vec3.__truediv__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":307
 * 		return this.Copy().__itruediv__(scale)
 * 
 * 	def __neg__(self):             # <<<<<<<<<<<<<<
 * 		ret = Vec3()
 * 		deref(ret.vec).assign(-deref(self.vec))
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec3_33__neg__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec3_33__neg__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__neg__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec3_32__neg__(((struct __pyx_obj_3kdp_Vec3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec3_32__neg__(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self) {
  struct __pyx_obj_3kdp_Vec3 *__pyx_v_ret = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__neg__", 0);

  /* "kdp.pyx":308
 * 
 * 	def __neg__(self):
 * 		ret = Vec3()             # <<<<<<<<<<<<<<
 * 		deref(ret.vec).assign(-deref(self.vec))
 * 		return ret
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_3kdp_Vec3), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 308; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_ret = ((struct __pyx_obj_3kdp_Vec3 *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "kdp.pyx":309
 * 	def __neg__(self):
 * 		ret = Vec3()
 * 		deref(ret.vec).assign(-deref(self.vec))             # <<<<<<<<<<<<<<
 * 		return ret
 * 
 */
  (*__pyx_v_ret->vec).operator=((-(*__pyx_v_self->vec)));

  /* "kdp.pyx":310
 * 		ret = Vec3()
 * 		deref(ret.vec).assign(-deref(self.vec))
 * 		return ret             # <<<<<<<<<<<<<<
 * 
 * 	def Normalize(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_ret));
  __pyx_r = ((PyObject *)__pyx_v_ret);
  goto __pyx_L0;

  /* "kdp.pyx":307
 * 		return this.Copy().__itruediv__(scale)
 * 
 * 	def __neg__(self):             # <<<<<<<<<<<<<<
 * 		ret = Vec3()
 * 		deref(ret.vec).assign(-deref(self.vec))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec3.__neg__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_ret);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":312
 * 		return ret
 * 
 * 	def Normalize(self):             # <<<<<<<<<<<<<<
 * 		deref(self.vec).Normalize()
 * 		return self
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec3_35Normalize(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec3_35Normalize(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Normalize (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec3_34Normalize(((struct __pyx_obj_3kdp_Vec3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec3_34Normalize(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Normalize", 0);

  /* "kdp.pyx":313
 * 
 * 	def Normalize(self):
 * 		deref(self.vec).Normalize()             # <<<<<<<<<<<<<<
 * 		return self
 * 
 */
  (*__pyx_v_self->vec).Normalize();

  /* "kdp.pyx":314
 * 	def Normalize(self):
 * 		deref(self.vec).Normalize()
 * 		return self             # <<<<<<<<<<<<<<
 * 
 * 	def Mag(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "kdp.pyx":312
 * 		return ret
 * 
 * 	def Normalize(self):             # <<<<<<<<<<<<<<
 * 		deref(self.vec).Normalize()
 * 		return self
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":316
 * 		return self
 * 
 * 	def Mag(self):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).Mag()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec3_37Mag(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec3_37Mag(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Mag (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec3_36Mag(((struct __pyx_obj_3kdp_Vec3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec3_36Mag(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Mag", 0);

  /* "kdp.pyx":317
 * 
 * 	def Mag(self):
 * 		return deref(self.vec).Mag()             # <<<<<<<<<<<<<<
 * 
 * 	def Mag2(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((*__pyx_v_self->vec).Mag()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 317; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":316
 * 		return self
 * 
 * 	def Mag(self):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).Mag()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec3.Mag", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":319
 * 		return deref(self.vec).Mag()
 * 
 * 	def Mag2(self):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).Mag2()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec3_39Mag2(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec3_39Mag2(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Mag2 (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec3_38Mag2(((struct __pyx_obj_3kdp_Vec3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec3_38Mag2(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Mag2", 0);

  /* "kdp.pyx":320
 * 
 * 	def Mag2(self):
 * 		return deref(self.vec).Mag2()             # <<<<<<<<<<<<<<
 * 
 * 	def Phi(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((*__pyx_v_self->vec).Mag2()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":319
 * 		return deref(self.vec).Mag()
 * 
 * 	def Mag2(self):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).Mag2()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec3.Mag2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":322
 * 		return deref(self.vec).Mag2()
 * 
 * 	def Phi(self):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).Phi()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec3_41Phi(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec3_41Phi(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Phi (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec3_40Phi(((struct __pyx_obj_3kdp_Vec3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec3_40Phi(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Phi", 0);

  /* "kdp.pyx":323
 * 
 * 	def Phi(self):
 * 		return deref(self.vec).Phi()             # <<<<<<<<<<<<<<
 * 
 * 	def Eta(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((*__pyx_v_self->vec).Phi()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":322
 * 		return deref(self.vec).Mag2()
 * 
 * 	def Phi(self):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).Phi()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec3.Phi", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":325
 * 		return deref(self.vec).Phi()
 * 
 * 	def Eta(self):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).Eta()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec3_43Eta(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec3_43Eta(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Eta (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec3_42Eta(((struct __pyx_obj_3kdp_Vec3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec3_42Eta(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Eta", 0);

  /* "kdp.pyx":326
 * 
 * 	def Eta(self):
 * 		return deref(self.vec).Eta()             # <<<<<<<<<<<<<<
 * 
 * 	def Theta(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((*__pyx_v_self->vec).Eta()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 326; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":325
 * 		return deref(self.vec).Phi()
 * 
 * 	def Eta(self):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).Eta()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec3.Eta", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":328
 * 		return deref(self.vec).Eta()
 * 
 * 	def Theta(self):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).Theta()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec3_45Theta(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec3_45Theta(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Theta (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec3_44Theta(((struct __pyx_obj_3kdp_Vec3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec3_44Theta(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Theta", 0);

  /* "kdp.pyx":329
 * 
 * 	def Theta(self):
 * 		return deref(self.vec).Theta()             # <<<<<<<<<<<<<<
 * 
 * 	def DeltaEta(self, Vec3 other):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((*__pyx_v_self->vec).Theta()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":328
 * 		return deref(self.vec).Eta()
 * 
 * 	def Theta(self):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).Theta()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec3.Theta", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":331
 * 		return deref(self.vec).Theta()
 * 
 * 	def DeltaEta(self, Vec3 other):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).DeltaEta(deref(other.vec))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec3_47DeltaEta(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec3_47DeltaEta(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("DeltaEta (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_3kdp_Vec3, 1, "other", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 331; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_3kdp_4Vec3_46DeltaEta(((struct __pyx_obj_3kdp_Vec3 *)__pyx_v_self), ((struct __pyx_obj_3kdp_Vec3 *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec3_46DeltaEta(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self, struct __pyx_obj_3kdp_Vec3 *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("DeltaEta", 0);

  /* "kdp.pyx":332
 * 
 * 	def DeltaEta(self, Vec3 other):
 * 		return deref(self.vec).DeltaEta(deref(other.vec))             # <<<<<<<<<<<<<<
 * 
 * 	def DeltaPhi(self, Vec3 other):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((*__pyx_v_self->vec).DeltaEta((*__pyx_v_other->vec))); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 332; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":331
 * 		return deref(self.vec).Theta()
 * 
 * 	def DeltaEta(self, Vec3 other):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).DeltaEta(deref(other.vec))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec3.DeltaEta", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":334
 * 		return deref(self.vec).DeltaEta(deref(other.vec))
 * 
 * 	def DeltaPhi(self, Vec3 other):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).DeltaPhi(deref(other.vec))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec3_49DeltaPhi(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec3_49DeltaPhi(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("DeltaPhi (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_3kdp_Vec3, 1, "other", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 334; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_3kdp_4Vec3_48DeltaPhi(((struct __pyx_obj_3kdp_Vec3 *)__pyx_v_self), ((struct __pyx_obj_3kdp_Vec3 *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec3_48DeltaPhi(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self, struct __pyx_obj_3kdp_Vec3 *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("DeltaPhi", 0);

  /* "kdp.pyx":335
 * 
 * 	def DeltaPhi(self, Vec3 other):
 * 		return deref(self.vec).DeltaPhi(deref(other.vec))             # <<<<<<<<<<<<<<
 * 
 * 	def Dot(self, Vec3 other):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((*__pyx_v_self->vec).DeltaPhi((*__pyx_v_other->vec))); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 335; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":334
 * 		return deref(self.vec).DeltaEta(deref(other.vec))
 * 
 * 	def DeltaPhi(self, Vec3 other):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).DeltaPhi(deref(other.vec))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec3.DeltaPhi", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":337
 * 		return deref(self.vec).DeltaPhi(deref(other.vec))
 * 
 * 	def Dot(self, Vec3 other):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).Dot(deref(other.vec))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec3_51Dot(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec3_51Dot(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Dot (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_3kdp_Vec3, 1, "other", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 337; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_3kdp_4Vec3_50Dot(((struct __pyx_obj_3kdp_Vec3 *)__pyx_v_self), ((struct __pyx_obj_3kdp_Vec3 *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec3_50Dot(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self, struct __pyx_obj_3kdp_Vec3 *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Dot", 0);

  /* "kdp.pyx":338
 * 
 * 	def Dot(self, Vec3 other):
 * 		return deref(self.vec).Dot(deref(other.vec))             # <<<<<<<<<<<<<<
 * 
 * 	def Cross(self, Vec3 other):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((*__pyx_v_self->vec).Dot((*__pyx_v_other->vec))); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 338; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":337
 * 		return deref(self.vec).DeltaPhi(deref(other.vec))
 * 
 * 	def Dot(self, Vec3 other):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).Dot(deref(other.vec))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec3.Dot", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":340
 * 		return deref(self.vec).Dot(deref(other.vec))
 * 
 * 	def Cross(self, Vec3 other):             # <<<<<<<<<<<<<<
 * 		ret = Vec3()
 * 		deref(ret.vec).assign(deref(self.vec).Cross(deref(other.vec)))
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec3_53Cross(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec3_53Cross(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Cross (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_3kdp_Vec3, 1, "other", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 340; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_3kdp_4Vec3_52Cross(((struct __pyx_obj_3kdp_Vec3 *)__pyx_v_self), ((struct __pyx_obj_3kdp_Vec3 *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec3_52Cross(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self, struct __pyx_obj_3kdp_Vec3 *__pyx_v_other) {
  struct __pyx_obj_3kdp_Vec3 *__pyx_v_ret = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Cross", 0);

  /* "kdp.pyx":341
 * 
 * 	def Cross(self, Vec3 other):
 * 		ret = Vec3()             # <<<<<<<<<<<<<<
 * 		deref(ret.vec).assign(deref(self.vec).Cross(deref(other.vec)))
 * 		return ret
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_3kdp_Vec3), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 341; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_ret = ((struct __pyx_obj_3kdp_Vec3 *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "kdp.pyx":342
 * 	def Cross(self, Vec3 other):
 * 		ret = Vec3()
 * 		deref(ret.vec).assign(deref(self.vec).Cross(deref(other.vec)))             # <<<<<<<<<<<<<<
 * 		return ret
 * 
 */
  (*__pyx_v_ret->vec).operator=((*__pyx_v_self->vec).Cross((*__pyx_v_other->vec)));

  /* "kdp.pyx":343
 * 		ret = Vec3()
 * 		deref(ret.vec).assign(deref(self.vec).Cross(deref(other.vec)))
 * 		return ret             # <<<<<<<<<<<<<<
 * 
 * 	def InteriorAngle(self, Vec3 other):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_ret));
  __pyx_r = ((PyObject *)__pyx_v_ret);
  goto __pyx_L0;

  /* "kdp.pyx":340
 * 		return deref(self.vec).Dot(deref(other.vec))
 * 
 * 	def Cross(self, Vec3 other):             # <<<<<<<<<<<<<<
 * 		ret = Vec3()
 * 		deref(ret.vec).assign(deref(self.vec).Cross(deref(other.vec)))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec3.Cross", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_ret);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":345
 * 		return ret
 * 
 * 	def InteriorAngle(self, Vec3 other):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).InteriorAngle(deref(other.vec))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec3_55InteriorAngle(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec3_55InteriorAngle(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("InteriorAngle (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_3kdp_Vec3, 1, "other", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 345; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_3kdp_4Vec3_54InteriorAngle(((struct __pyx_obj_3kdp_Vec3 *)__pyx_v_self), ((struct __pyx_obj_3kdp_Vec3 *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec3_54InteriorAngle(struct __pyx_obj_3kdp_Vec3 *__pyx_v_self, struct __pyx_obj_3kdp_Vec3 *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("InteriorAngle", 0);

  /* "kdp.pyx":346
 * 
 * 	def InteriorAngle(self, Vec3 other):
 * 		return deref(self.vec).InteriorAngle(deref(other.vec))             # <<<<<<<<<<<<<<
 * 
 * ########################################################################
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((*__pyx_v_self->vec).InteriorAngle((*__pyx_v_other->vec))); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 346; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":345
 * 		return ret
 * 
 * 	def InteriorAngle(self, Vec3 other):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).InteriorAngle(deref(other.vec))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec3.InteriorAngle", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":353
 * #~ 	cdef shared_ptr[Vec4_c] vec
 * 
 * 	def __cinit__(self, double x0 = 0., double x1 = 0., double x2 = 0., double x3 = 0.):             # <<<<<<<<<<<<<<
 * #~ 		self.vec = shared_ptr[Vec4_c](new Vec4_c(x0, x1, x2, x3))
 * 		self.vec = make_shared[Vec4_c](x0, x1, x2, x3)
 */

/* Python wrapper */
static int __pyx_pw_3kdp_4Vec4_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_3kdp_4Vec4_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_x0;
  double __pyx_v_x1;
  double __pyx_v_x2;
  double __pyx_v_x3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x0,&__pyx_n_s_x1,&__pyx_n_s_x2,&__pyx_n_s_x3,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x0);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x1);
          if (value) { values[1] = value; kw_args--; }
        }
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x2);
          if (value) { values[2] = value; kw_args--; }
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x3);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 353; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_x0 = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_x0 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 353; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_x0 = ((double)0.);
    }
    if (values[1]) {
      __pyx_v_x1 = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_x1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 353; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_x1 = ((double)0.);
    }
    if (values[2]) {
      __pyx_v_x2 = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_x2 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 353; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_x2 = ((double)0.);
    }
    if (values[3]) {
      __pyx_v_x3 = __pyx_PyFloat_AsDouble(values[3]); if (unlikely((__pyx_v_x3 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 353; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_x3 = ((double)0.);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 353; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("kdp.Vec4.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3kdp_4Vec4___cinit__(((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_self), __pyx_v_x0, __pyx_v_x1, __pyx_v_x2, __pyx_v_x3);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3kdp_4Vec4___cinit__(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self, double __pyx_v_x0, double __pyx_v_x1, double __pyx_v_x2, double __pyx_v_x3) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "kdp.pyx":355
 * 	def __cinit__(self, double x0 = 0., double x1 = 0., double x2 = 0., double x3 = 0.):
 * #~ 		self.vec = shared_ptr[Vec4_c](new Vec4_c(x0, x1, x2, x3))
 * 		self.vec = make_shared[Vec4_c](x0, x1, x2, x3)             # <<<<<<<<<<<<<<
 * 
 * 	@staticmethod
 */
  __pyx_v_self->vec = std::make_shared<kdp::Vec4>(__pyx_v_x0, __pyx_v_x1, __pyx_v_x2, __pyx_v_x3);

  /* "kdp.pyx":353
 * #~ 	cdef shared_ptr[Vec4_c] vec
 * 
 * 	def __cinit__(self, double x0 = 0., double x1 = 0., double x2 = 0., double x3 = 0.):             # <<<<<<<<<<<<<<
 * #~ 		self.vec = shared_ptr[Vec4_c](new Vec4_c(x0, x1, x2, x3))
 * 		self.vec = make_shared[Vec4_c](x0, x1, x2, x3)
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":358
 * 
 * 	@staticmethod
 * 	def From_MassP3(double mass, Vec3 p3):             # <<<<<<<<<<<<<<
 * 		ret = Vec4()
 * #~ 		ret.vec = shared_ptr[Vec4_c](new Vec4_c(mass, deref(p3.vec), Mass))
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec4_3From_MassP3(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_3kdp_4Vec4_3From_MassP3 = {"From_MassP3", (PyCFunction)__pyx_pw_3kdp_4Vec4_3From_MassP3, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_3kdp_4Vec4_3From_MassP3(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_mass;
  struct __pyx_obj_3kdp_Vec3 *__pyx_v_p3 = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("From_MassP3 (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_mass,&__pyx_n_s_p3,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_mass)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_p3)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("From_MassP3", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 358; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "From_MassP3") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 358; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_mass = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_mass == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 358; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_p3 = ((struct __pyx_obj_3kdp_Vec3 *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("From_MassP3", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 358; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("kdp.Vec4.From_MassP3", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_p3), __pyx_ptype_3kdp_Vec3, 1, "p3", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 358; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_3kdp_4Vec4_2From_MassP3(__pyx_v_mass, __pyx_v_p3);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec4_2From_MassP3(double __pyx_v_mass, struct __pyx_obj_3kdp_Vec3 *__pyx_v_p3) {
  struct __pyx_obj_3kdp_Vec4 *__pyx_v_ret = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("From_MassP3", 0);

  /* "kdp.pyx":359
 * 	@staticmethod
 * 	def From_MassP3(double mass, Vec3 p3):
 * 		ret = Vec4()             # <<<<<<<<<<<<<<
 * #~ 		ret.vec = shared_ptr[Vec4_c](new Vec4_c(mass, deref(p3.vec), Mass))
 * 		ret.vec = make_shared[Vec4_c](mass, deref(p3.vec), V4f2_Mass)
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_3kdp_Vec4), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 359; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_ret = ((struct __pyx_obj_3kdp_Vec4 *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "kdp.pyx":361
 * 		ret = Vec4()
 * #~ 		ret.vec = shared_ptr[Vec4_c](new Vec4_c(mass, deref(p3.vec), Mass))
 * 		ret.vec = make_shared[Vec4_c](mass, deref(p3.vec), V4f2_Mass)             # <<<<<<<<<<<<<<
 * 		return ret
 * 
 */
  __pyx_v_ret->vec = std::make_shared<kdp::Vec4>(__pyx_v_mass, (*__pyx_v_p3->vec), kdp::Vec4from2::Mass);

  /* "kdp.pyx":362
 * #~ 		ret.vec = shared_ptr[Vec4_c](new Vec4_c(mass, deref(p3.vec), Mass))
 * 		ret.vec = make_shared[Vec4_c](mass, deref(p3.vec), V4f2_Mass)
 * 		return ret             # <<<<<<<<<<<<<<
 * 
 * 	def __dealloc__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_ret));
  __pyx_r = ((PyObject *)__pyx_v_ret);
  goto __pyx_L0;

  /* "kdp.pyx":358
 * 
 * 	@staticmethod
 * 	def From_MassP3(double mass, Vec3 p3):             # <<<<<<<<<<<<<<
 * 		ret = Vec4()
 * #~ 		ret.vec = shared_ptr[Vec4_c](new Vec4_c(mass, deref(p3.vec), Mass))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec4.From_MassP3", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_ret);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":364
 * 		return ret
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		return
 * 
 */

/* Python wrapper */
static void __pyx_pw_3kdp_4Vec4_5__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_3kdp_4Vec4_5__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_3kdp_4Vec4_4__dealloc__(((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_3kdp_4Vec4_4__dealloc__(CYTHON_UNUSED struct __pyx_obj_3kdp_Vec4 *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "kdp.pyx":365
 * 
 * 	def __dealloc__(self):
 * 		return             # <<<<<<<<<<<<<<
 * 
 * 	@staticmethod
 */
  goto __pyx_L0;

  /* "kdp.pyx":364
 * 		return ret
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		return
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "kdp.pyx":368
 * 
 * 	@staticmethod
 * 	cdef Vec4 Factory(const Vec4_c& orig):             # <<<<<<<<<<<<<<
 * 		copy = Vec4()
 * 		deref(copy.vec).assign(orig)
 */

static struct __pyx_obj_3kdp_Vec4 *__pyx_f_3kdp_4Vec4_Factory(kdp::Vec4 const &__pyx_v_orig) {
  struct __pyx_obj_3kdp_Vec4 *__pyx_v_copy = NULL;
  struct __pyx_obj_3kdp_Vec4 *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Factory", 0);

  /* "kdp.pyx":369
 * 	@staticmethod
 * 	cdef Vec4 Factory(const Vec4_c& orig):
 * 		copy = Vec4()             # <<<<<<<<<<<<<<
 * 		deref(copy.vec).assign(orig)
 * 		return copy
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_3kdp_Vec4), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 369; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_copy = ((struct __pyx_obj_3kdp_Vec4 *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "kdp.pyx":370
 * 	cdef Vec4 Factory(const Vec4_c& orig):
 * 		copy = Vec4()
 * 		deref(copy.vec).assign(orig)             # <<<<<<<<<<<<<<
 * 		return copy
 * 
 */
  (*__pyx_v_copy->vec).operator=(__pyx_v_orig);

  /* "kdp.pyx":371
 * 		copy = Vec4()
 * 		deref(copy.vec).assign(orig)
 * 		return copy             # <<<<<<<<<<<<<<
 * 
 * 	def Copy(self):
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __Pyx_INCREF(((PyObject *)__pyx_v_copy));
  __pyx_r = __pyx_v_copy;
  goto __pyx_L0;

  /* "kdp.pyx":368
 * 
 * 	@staticmethod
 * 	cdef Vec4 Factory(const Vec4_c& orig):             # <<<<<<<<<<<<<<
 * 		copy = Vec4()
 * 		deref(copy.vec).assign(orig)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec4.Factory", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_copy);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":373
 * 		return copy
 * 
 * 	def Copy(self):             # <<<<<<<<<<<<<<
 * 		return Vec4.Factory(deref(self.vec))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec4_7Copy(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec4_7Copy(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Copy (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec4_6Copy(((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec4_6Copy(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Copy", 0);

  /* "kdp.pyx":374
 * 
 * 	def Copy(self):
 * 		return Vec4.Factory(deref(self.vec))             # <<<<<<<<<<<<<<
 * 
 * 	def __deepcopy__(self, memo):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_3kdp_4Vec4_Factory((*__pyx_v_self->vec))); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 374; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":373
 * 		return copy
 * 
 * 	def Copy(self):             # <<<<<<<<<<<<<<
 * 		return Vec4.Factory(deref(self.vec))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec4.Copy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":376
 * 		return Vec4.Factory(deref(self.vec))
 * 
 * 	def __deepcopy__(self, memo):             # <<<<<<<<<<<<<<
 * 		return self.Copy()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec4_9__deepcopy__(PyObject *__pyx_v_self, PyObject *__pyx_v_memo); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec4_9__deepcopy__(PyObject *__pyx_v_self, PyObject *__pyx_v_memo) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__deepcopy__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec4_8__deepcopy__(((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_self), ((PyObject *)__pyx_v_memo));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec4_8__deepcopy__(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_memo) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__deepcopy__", 0);

  /* "kdp.pyx":377
 * 
 * 	def __deepcopy__(self, memo):
 * 		return self.Copy()             # <<<<<<<<<<<<<<
 * 
 * 	def __repr__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_Copy); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 377; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 377; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 377; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":376
 * 		return Vec4.Factory(deref(self.vec))
 * 
 * 	def __deepcopy__(self, memo):             # <<<<<<<<<<<<<<
 * 		return self.Copy()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("kdp.Vec4.__deepcopy__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":379
 * 		return self.Copy()
 * 
 * 	def __repr__(self):             # <<<<<<<<<<<<<<
 * 		return str([self.x0, [self.x1, self.x2, self.x3]])
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec4_11__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec4_11__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec4_10__repr__(((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec4_10__repr__(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "kdp.pyx":380
 * 
 * 	def __repr__(self):
 * 		return str([self.x0, [self.x1, self.x2, self.x3]])             # <<<<<<<<<<<<<<
 * 
 * 	property x0:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_x0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 380; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_x1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 380; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_x2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 380; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_x3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 380; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyList_New(3); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 380; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_2);
  PyList_SET_ITEM(__pyx_t_5, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyList_SET_ITEM(__pyx_t_5, 1, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyList_SET_ITEM(__pyx_t_5, 2, __pyx_t_4);
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_t_4 = PyList_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 380; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_1);
  PyList_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_5);
  PyList_SET_ITEM(__pyx_t_4, 1, __pyx_t_5);
  __pyx_t_1 = 0;
  __pyx_t_5 = 0;
  __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 380; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4);
  __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyObject_Call(((PyObject *)(&PyUnicode_Type)), __pyx_t_5, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 380; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":379
 * 		return self.Copy()
 * 
 * 	def __repr__(self):             # <<<<<<<<<<<<<<
 * 		return str([self.x0, [self.x1, self.x2, self.x3]])
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("kdp.Vec4.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":384
 * 	property x0:
 * 		# "A doc string can go here."
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return deref(self.vec).x0
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec4_2x0_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec4_2x0_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec4_2x0___get__(((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec4_2x0___get__(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "kdp.pyx":385
 * 		# "A doc string can go here."
 * 		def __get__(self):
 * 			return deref(self.vec).x0             # <<<<<<<<<<<<<<
 * 
 * 		def __set__(self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((*__pyx_v_self->vec).x0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 385; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":384
 * 	property x0:
 * 		# "A doc string can go here."
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return deref(self.vec).x0
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec4.x0.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":387
 * 			return deref(self.vec).x0
 * 
 * 		def __set__(self, value):             # <<<<<<<<<<<<<<
 * 			deref(self.vec).x0 = value
 * 
 */

/* Python wrapper */
static int __pyx_pw_3kdp_4Vec4_2x0_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_3kdp_4Vec4_2x0_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec4_2x0_2__set__(((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3kdp_4Vec4_2x0_2__set__(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "kdp.pyx":388
 * 
 * 		def __set__(self, value):
 * 			deref(self.vec).x0 = value             # <<<<<<<<<<<<<<
 * 
 * 	property x1:
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 388; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  (*__pyx_v_self->vec).x0 = __pyx_t_1;

  /* "kdp.pyx":387
 * 			return deref(self.vec).x0
 * 
 * 		def __set__(self, value):             # <<<<<<<<<<<<<<
 * 			deref(self.vec).x0 = value
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("kdp.Vec4.x0.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":391
 * 
 * 	property x1:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return deref(self.vec).x1
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec4_2x1_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec4_2x1_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec4_2x1___get__(((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec4_2x1___get__(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "kdp.pyx":392
 * 	property x1:
 * 		def __get__(self):
 * 			return deref(self.vec).x1             # <<<<<<<<<<<<<<
 * 
 * 		def __set__(self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((*__pyx_v_self->vec).x1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 392; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":391
 * 
 * 	property x1:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return deref(self.vec).x1
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec4.x1.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":394
 * 			return deref(self.vec).x1
 * 
 * 		def __set__(self, value):             # <<<<<<<<<<<<<<
 * 			deref(self.vec).x1 = value
 * 
 */

/* Python wrapper */
static int __pyx_pw_3kdp_4Vec4_2x1_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_3kdp_4Vec4_2x1_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec4_2x1_2__set__(((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3kdp_4Vec4_2x1_2__set__(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "kdp.pyx":395
 * 
 * 		def __set__(self, value):
 * 			deref(self.vec).x1 = value             # <<<<<<<<<<<<<<
 * 
 * 	property x2:
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 395; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  (*__pyx_v_self->vec).x1 = __pyx_t_1;

  /* "kdp.pyx":394
 * 			return deref(self.vec).x1
 * 
 * 		def __set__(self, value):             # <<<<<<<<<<<<<<
 * 			deref(self.vec).x1 = value
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("kdp.Vec4.x1.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":398
 * 
 * 	property x2:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return deref(self.vec).x2
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec4_2x2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec4_2x2_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec4_2x2___get__(((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec4_2x2___get__(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "kdp.pyx":399
 * 	property x2:
 * 		def __get__(self):
 * 			return deref(self.vec).x2             # <<<<<<<<<<<<<<
 * 
 * 		def __set__(self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((*__pyx_v_self->vec).x2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 399; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":398
 * 
 * 	property x2:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return deref(self.vec).x2
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec4.x2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":401
 * 			return deref(self.vec).x2
 * 
 * 		def __set__(self, value):             # <<<<<<<<<<<<<<
 * 			deref(self.vec).x2 = value
 * 
 */

/* Python wrapper */
static int __pyx_pw_3kdp_4Vec4_2x2_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_3kdp_4Vec4_2x2_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec4_2x2_2__set__(((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3kdp_4Vec4_2x2_2__set__(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "kdp.pyx":402
 * 
 * 		def __set__(self, value):
 * 			deref(self.vec).x2 = value             # <<<<<<<<<<<<<<
 * 
 * 	property x3:
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 402; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  (*__pyx_v_self->vec).x2 = __pyx_t_1;

  /* "kdp.pyx":401
 * 			return deref(self.vec).x2
 * 
 * 		def __set__(self, value):             # <<<<<<<<<<<<<<
 * 			deref(self.vec).x2 = value
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("kdp.Vec4.x2.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":405
 * 
 * 	property x3:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return deref(self.vec).x3
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec4_2x3_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec4_2x3_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec4_2x3___get__(((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec4_2x3___get__(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "kdp.pyx":406
 * 	property x3:
 * 		def __get__(self):
 * 			return deref(self.vec).x3             # <<<<<<<<<<<<<<
 * 
 * 		def __set__(self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((*__pyx_v_self->vec).x3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 406; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":405
 * 
 * 	property x3:
 * 		def __get__(self):             # <<<<<<<<<<<<<<
 * 			return deref(self.vec).x3
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec4.x3.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":408
 * 			return deref(self.vec).x3
 * 
 * 		def __set__(self, value):             # <<<<<<<<<<<<<<
 * 			deref(self.vec).x3 = value
 * 
 */

/* Python wrapper */
static int __pyx_pw_3kdp_4Vec4_2x3_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_3kdp_4Vec4_2x3_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec4_2x3_2__set__(((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3kdp_4Vec4_2x3_2__set__(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "kdp.pyx":409
 * 
 * 		def __set__(self, value):
 * 			deref(self.vec).x3 = value             # <<<<<<<<<<<<<<
 * 
 * 	def x(self):
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 409; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  (*__pyx_v_self->vec).x3 = __pyx_t_1;

  /* "kdp.pyx":408
 * 			return deref(self.vec).x3
 * 
 * 		def __set__(self, value):             # <<<<<<<<<<<<<<
 * 			deref(self.vec).x3 = value
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("kdp.Vec4.x3.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":411
 * 			deref(self.vec).x3 = value
 * 
 * 	def x(self):             # <<<<<<<<<<<<<<
 * 		vec3 = Vec3()
 * 		vec3.vec = shared_ptr_alias[Vec3_c, Vec4_c](self.vec, <Vec3_c*>(self.vec.get()))
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec4_13x(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec4_13x(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("x (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec4_12x(((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec4_12x(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self) {
  struct __pyx_obj_3kdp_Vec3 *__pyx_v_vec3 = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("x", 0);

  /* "kdp.pyx":412
 * 
 * 	def x(self):
 * 		vec3 = Vec3()             # <<<<<<<<<<<<<<
 * 		vec3.vec = shared_ptr_alias[Vec3_c, Vec4_c](self.vec, <Vec3_c*>(self.vec.get()))
 * 		return vec3
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_3kdp_Vec3), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 412; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_vec3 = ((struct __pyx_obj_3kdp_Vec3 *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "kdp.pyx":413
 * 	def x(self):
 * 		vec3 = Vec3()
 * 		vec3.vec = shared_ptr_alias[Vec3_c, Vec4_c](self.vec, <Vec3_c*>(self.vec.get()))             # <<<<<<<<<<<<<<
 * 		return vec3
 * 
 */
  __pyx_v_vec3->vec = shared_ptr_alias<kdp::Vec3,kdp::Vec4>(__pyx_v_self->vec, ((kdp::Vec3 *)__pyx_v_self->vec.get()));

  /* "kdp.pyx":414
 * 		vec3 = Vec3()
 * 		vec3.vec = shared_ptr_alias[Vec3_c, Vec4_c](self.vec, <Vec3_c*>(self.vec.get()))
 * 		return vec3             # <<<<<<<<<<<<<<
 * 
 * 	def p(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_vec3));
  __pyx_r = ((PyObject *)__pyx_v_vec3);
  goto __pyx_L0;

  /* "kdp.pyx":411
 * 			deref(self.vec).x3 = value
 * 
 * 	def x(self):             # <<<<<<<<<<<<<<
 * 		vec3 = Vec3()
 * 		vec3.vec = shared_ptr_alias[Vec3_c, Vec4_c](self.vec, <Vec3_c*>(self.vec.get()))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec4.x", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_vec3);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":416
 * 		return vec3
 * 
 * 	def p(self):             # <<<<<<<<<<<<<<
 * 		return self.x()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec4_15p(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec4_15p(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("p (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec4_14p(((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec4_14p(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("p", 0);

  /* "kdp.pyx":417
 * 
 * 	def p(self):
 * 		return self.x()             # <<<<<<<<<<<<<<
 * 
 * 	def __iadd__(self, Vec4 other):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_x); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 417; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 417; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 417; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":416
 * 		return vec3
 * 
 * 	def p(self):             # <<<<<<<<<<<<<<
 * 		return self.x()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("kdp.Vec4.p", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":419
 * 		return self.x()
 * 
 * 	def __iadd__(self, Vec4 other):             # <<<<<<<<<<<<<<
 * 		deref(self.vec).addEquals(deref(other.vec))
 * 		return self
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec4_17__iadd__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec4_17__iadd__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iadd__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_3kdp_Vec4, 1, "other", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 419; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_3kdp_4Vec4_16__iadd__(((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_self), ((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec4_16__iadd__(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self, struct __pyx_obj_3kdp_Vec4 *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iadd__", 0);

  /* "kdp.pyx":420
 * 
 * 	def __iadd__(self, Vec4 other):
 * 		deref(self.vec).addEquals(deref(other.vec))             # <<<<<<<<<<<<<<
 * 		return self
 * 
 */
  (*__pyx_v_self->vec).operator+=((*__pyx_v_other->vec));

  /* "kdp.pyx":421
 * 	def __iadd__(self, Vec4 other):
 * 		deref(self.vec).addEquals(deref(other.vec))
 * 		return self             # <<<<<<<<<<<<<<
 * 
 * 	def __isub__(self, Vec4 other):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "kdp.pyx":419
 * 		return self.x()
 * 
 * 	def __iadd__(self, Vec4 other):             # <<<<<<<<<<<<<<
 * 		deref(self.vec).addEquals(deref(other.vec))
 * 		return self
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":423
 * 		return self
 * 
 * 	def __isub__(self, Vec4 other):             # <<<<<<<<<<<<<<
 * 		deref(self.vec).subEquals(deref(other.vec))
 * 		return self
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec4_19__isub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec4_19__isub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__isub__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_3kdp_Vec4, 1, "other", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 423; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_3kdp_4Vec4_18__isub__(((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_self), ((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec4_18__isub__(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self, struct __pyx_obj_3kdp_Vec4 *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__isub__", 0);

  /* "kdp.pyx":424
 * 
 * 	def __isub__(self, Vec4 other):
 * 		deref(self.vec).subEquals(deref(other.vec))             # <<<<<<<<<<<<<<
 * 		return self
 * 
 */
  (*__pyx_v_self->vec).operator-=((*__pyx_v_other->vec));

  /* "kdp.pyx":425
 * 	def __isub__(self, Vec4 other):
 * 		deref(self.vec).subEquals(deref(other.vec))
 * 		return self             # <<<<<<<<<<<<<<
 * 
 * 	def __imul__(self, double scale):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "kdp.pyx":423
 * 		return self
 * 
 * 	def __isub__(self, Vec4 other):             # <<<<<<<<<<<<<<
 * 		deref(self.vec).subEquals(deref(other.vec))
 * 		return self
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":427
 * 		return self
 * 
 * 	def __imul__(self, double scale):             # <<<<<<<<<<<<<<
 * 		deref(self.vec).mulEquals(scale)
 * 		return self
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec4_21__imul__(PyObject *__pyx_v_self, PyObject *__pyx_arg_scale); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec4_21__imul__(PyObject *__pyx_v_self, PyObject *__pyx_arg_scale) {
  double __pyx_v_scale;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__imul__ (wrapper)", 0);
  assert(__pyx_arg_scale); {
    __pyx_v_scale = __pyx_PyFloat_AsDouble(__pyx_arg_scale); if (unlikely((__pyx_v_scale == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 427; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("kdp.Vec4.__imul__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3kdp_4Vec4_20__imul__(((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_self), ((double)__pyx_v_scale));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec4_20__imul__(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self, double __pyx_v_scale) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__imul__", 0);

  /* "kdp.pyx":428
 * 
 * 	def __imul__(self, double scale):
 * 		deref(self.vec).mulEquals(scale)             # <<<<<<<<<<<<<<
 * 		return self
 * 
 */
  (*__pyx_v_self->vec).operator*=(__pyx_v_scale);

  /* "kdp.pyx":429
 * 	def __imul__(self, double scale):
 * 		deref(self.vec).mulEquals(scale)
 * 		return self             # <<<<<<<<<<<<<<
 * 
 * 	def __itruediv__(self, double scale):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "kdp.pyx":427
 * 		return self
 * 
 * 	def __imul__(self, double scale):             # <<<<<<<<<<<<<<
 * 		deref(self.vec).mulEquals(scale)
 * 		return self
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":431
 * 		return self
 * 
 * 	def __itruediv__(self, double scale):             # <<<<<<<<<<<<<<
 * 		deref(self.vec).divEquals(scale)
 * 		return self
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec4_23__itruediv__(PyObject *__pyx_v_self, PyObject *__pyx_arg_scale); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec4_23__itruediv__(PyObject *__pyx_v_self, PyObject *__pyx_arg_scale) {
  double __pyx_v_scale;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__itruediv__ (wrapper)", 0);
  assert(__pyx_arg_scale); {
    __pyx_v_scale = __pyx_PyFloat_AsDouble(__pyx_arg_scale); if (unlikely((__pyx_v_scale == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 431; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("kdp.Vec4.__itruediv__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3kdp_4Vec4_22__itruediv__(((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_self), ((double)__pyx_v_scale));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec4_22__itruediv__(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self, double __pyx_v_scale) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__itruediv__", 0);

  /* "kdp.pyx":432
 * 
 * 	def __itruediv__(self, double scale):
 * 		deref(self.vec).divEquals(scale)             # <<<<<<<<<<<<<<
 * 		return self
 * 
 */
  (*__pyx_v_self->vec).operator/=(__pyx_v_scale);

  /* "kdp.pyx":433
 * 	def __itruediv__(self, double scale):
 * 		deref(self.vec).divEquals(scale)
 * 		return self             # <<<<<<<<<<<<<<
 * 
 * 	def __add__(Vec4 this, Vec4 that):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __pyx_r = ((PyObject *)__pyx_v_self);
  goto __pyx_L0;

  /* "kdp.pyx":431
 * 		return self
 * 
 * 	def __itruediv__(self, double scale):             # <<<<<<<<<<<<<<
 * 		deref(self.vec).divEquals(scale)
 * 		return self
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":435
 * 		return self
 * 
 * 	def __add__(Vec4 this, Vec4 that):             # <<<<<<<<<<<<<<
 * 		return this.Copy().__iadd__(that)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec4_25__add__(PyObject *__pyx_v_this, PyObject *__pyx_v_that); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec4_25__add__(PyObject *__pyx_v_this, PyObject *__pyx_v_that) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__add__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_this), __pyx_ptype_3kdp_Vec4, 1, "this", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 435; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_that), __pyx_ptype_3kdp_Vec4, 1, "that", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 435; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_3kdp_4Vec4_24__add__(((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_this), ((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_that));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec4_24__add__(struct __pyx_obj_3kdp_Vec4 *__pyx_v_this, struct __pyx_obj_3kdp_Vec4 *__pyx_v_that) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__add__", 0);

  /* "kdp.pyx":436
 * 
 * 	def __add__(Vec4 this, Vec4 that):
 * 		return this.Copy().__iadd__(that)             # <<<<<<<<<<<<<<
 * 
 * 	def __sub__(Vec4 this, Vec4 that):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_this), __pyx_n_s_Copy); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 436; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (__pyx_t_4) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 436; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else {
    __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 436; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_iadd); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 436; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (!__pyx_t_2) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, ((PyObject *)__pyx_v_that)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 436; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 436; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_2); __pyx_t_2 = NULL;
    __Pyx_INCREF(((PyObject *)__pyx_v_that));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_that));
    PyTuple_SET_ITEM(__pyx_t_4, 0+1, ((PyObject *)__pyx_v_that));
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 436; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":435
 * 		return self
 * 
 * 	def __add__(Vec4 this, Vec4 that):             # <<<<<<<<<<<<<<
 * 		return this.Copy().__iadd__(that)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("kdp.Vec4.__add__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":438
 * 		return this.Copy().__iadd__(that)
 * 
 * 	def __sub__(Vec4 this, Vec4 that):             # <<<<<<<<<<<<<<
 * 		return this.Copy().__isub__(that)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec4_27__sub__(PyObject *__pyx_v_this, PyObject *__pyx_v_that); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec4_27__sub__(PyObject *__pyx_v_this, PyObject *__pyx_v_that) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__sub__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_this), __pyx_ptype_3kdp_Vec4, 1, "this", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 438; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_that), __pyx_ptype_3kdp_Vec4, 1, "that", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 438; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_3kdp_4Vec4_26__sub__(((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_this), ((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_that));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec4_26__sub__(struct __pyx_obj_3kdp_Vec4 *__pyx_v_this, struct __pyx_obj_3kdp_Vec4 *__pyx_v_that) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__sub__", 0);

  /* "kdp.pyx":439
 * 
 * 	def __sub__(Vec4 this, Vec4 that):
 * 		return this.Copy().__isub__(that)             # <<<<<<<<<<<<<<
 * 
 * 	# Currently, __rmul__ is not supported
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_this), __pyx_n_s_Copy); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 439; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (__pyx_t_4) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 439; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else {
    __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 439; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_isub); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 439; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (!__pyx_t_2) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, ((PyObject *)__pyx_v_that)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 439; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 439; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_2); __pyx_t_2 = NULL;
    __Pyx_INCREF(((PyObject *)__pyx_v_that));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_that));
    PyTuple_SET_ITEM(__pyx_t_4, 0+1, ((PyObject *)__pyx_v_that));
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 439; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":438
 * 		return this.Copy().__iadd__(that)
 * 
 * 	def __sub__(Vec4 this, Vec4 that):             # <<<<<<<<<<<<<<
 * 		return this.Copy().__isub__(that)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("kdp.Vec4.__sub__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":442
 * 
 * 	# Currently, __rmul__ is not supported
 * 	def __mul__(Vec4 this, double scale):             # <<<<<<<<<<<<<<
 * 		return this.Copy().__imul__(scale)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec4_29__mul__(PyObject *__pyx_v_this, PyObject *__pyx_arg_scale); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec4_29__mul__(PyObject *__pyx_v_this, PyObject *__pyx_arg_scale) {
  double __pyx_v_scale;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__mul__ (wrapper)", 0);
  assert(__pyx_arg_scale); {
    __pyx_v_scale = __pyx_PyFloat_AsDouble(__pyx_arg_scale); if (unlikely((__pyx_v_scale == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 442; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("kdp.Vec4.__mul__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_this), __pyx_ptype_3kdp_Vec4, 1, "this", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 442; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_3kdp_4Vec4_28__mul__(((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_this), ((double)__pyx_v_scale));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec4_28__mul__(struct __pyx_obj_3kdp_Vec4 *__pyx_v_this, double __pyx_v_scale) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__mul__", 0);

  /* "kdp.pyx":443
 * 	# Currently, __rmul__ is not supported
 * 	def __mul__(Vec4 this, double scale):
 * 		return this.Copy().__imul__(scale)             # <<<<<<<<<<<<<<
 * 
 * 	# Note this is truediv, not div
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_this), __pyx_n_s_Copy); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 443; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (__pyx_t_4) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 443; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else {
    __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 443; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_imul); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 443; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_scale); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 443; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 443; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 443; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_t_2);
    __pyx_t_2 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 443; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":442
 * 
 * 	# Currently, __rmul__ is not supported
 * 	def __mul__(Vec4 this, double scale):             # <<<<<<<<<<<<<<
 * 		return this.Copy().__imul__(scale)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("kdp.Vec4.__mul__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":446
 * 
 * 	# Note this is truediv, not div
 * 	def __truediv__(Vec4 this, double scale):             # <<<<<<<<<<<<<<
 * 		return this.Copy().__itruediv__(scale)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec4_31__truediv__(PyObject *__pyx_v_this, PyObject *__pyx_arg_scale); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec4_31__truediv__(PyObject *__pyx_v_this, PyObject *__pyx_arg_scale) {
  double __pyx_v_scale;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__truediv__ (wrapper)", 0);
  assert(__pyx_arg_scale); {
    __pyx_v_scale = __pyx_PyFloat_AsDouble(__pyx_arg_scale); if (unlikely((__pyx_v_scale == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 446; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("kdp.Vec4.__truediv__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_this), __pyx_ptype_3kdp_Vec4, 1, "this", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 446; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_3kdp_4Vec4_30__truediv__(((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_this), ((double)__pyx_v_scale));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec4_30__truediv__(struct __pyx_obj_3kdp_Vec4 *__pyx_v_this, double __pyx_v_scale) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__truediv__", 0);

  /* "kdp.pyx":447
 * 	# Note this is truediv, not div
 * 	def __truediv__(Vec4 this, double scale):
 * 		return this.Copy().__itruediv__(scale)             # <<<<<<<<<<<<<<
 * 
 * 	def __neg__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_this), __pyx_n_s_Copy); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 447; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (__pyx_t_4) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 447; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else {
    __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 447; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_itruediv); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 447; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_scale); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 447; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (!__pyx_t_4) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 447; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 447; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_t_2);
    __pyx_t_2 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 447; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":446
 * 
 * 	# Note this is truediv, not div
 * 	def __truediv__(Vec4 this, double scale):             # <<<<<<<<<<<<<<
 * 		return this.Copy().__itruediv__(scale)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("kdp.Vec4.__truediv__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":449
 * 		return this.Copy().__itruediv__(scale)
 * 
 * 	def __neg__(self):             # <<<<<<<<<<<<<<
 * 		ret = Vec4()
 * 		deref(ret.vec).assign(-deref(self.vec))
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec4_33__neg__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec4_33__neg__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__neg__ (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec4_32__neg__(((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec4_32__neg__(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self) {
  struct __pyx_obj_3kdp_Vec4 *__pyx_v_ret = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__neg__", 0);

  /* "kdp.pyx":450
 * 
 * 	def __neg__(self):
 * 		ret = Vec4()             # <<<<<<<<<<<<<<
 * 		deref(ret.vec).assign(-deref(self.vec))
 * 		return ret
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_3kdp_Vec4), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 450; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_ret = ((struct __pyx_obj_3kdp_Vec4 *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "kdp.pyx":451
 * 	def __neg__(self):
 * 		ret = Vec4()
 * 		deref(ret.vec).assign(-deref(self.vec))             # <<<<<<<<<<<<<<
 * 		return ret
 * 
 */
  (*__pyx_v_ret->vec).operator=((-(*__pyx_v_self->vec)));

  /* "kdp.pyx":452
 * 		ret = Vec4()
 * 		deref(ret.vec).assign(-deref(self.vec))
 * 		return ret             # <<<<<<<<<<<<<<
 * 
 * 	def Length(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_ret));
  __pyx_r = ((PyObject *)__pyx_v_ret);
  goto __pyx_L0;

  /* "kdp.pyx":449
 * 		return this.Copy().__itruediv__(scale)
 * 
 * 	def __neg__(self):             # <<<<<<<<<<<<<<
 * 		ret = Vec4()
 * 		deref(ret.vec).assign(-deref(self.vec))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec4.__neg__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_ret);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":454
 * 		return ret
 * 
 * 	def Length(self):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).Length()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec4_35Length(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec4_35Length(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Length (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec4_34Length(((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec4_34Length(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Length", 0);

  /* "kdp.pyx":455
 * 
 * 	def Length(self):
 * 		return deref(self.vec).Length()             # <<<<<<<<<<<<<<
 * 
 * 	def Length2(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((*__pyx_v_self->vec).Length()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 455; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":454
 * 		return ret
 * 
 * 	def Length(self):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).Length()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec4.Length", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":457
 * 		return deref(self.vec).Length()
 * 
 * 	def Length2(self):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).Length2()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec4_37Length2(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec4_37Length2(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Length2 (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec4_36Length2(((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec4_36Length2(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Length2", 0);

  /* "kdp.pyx":458
 * 
 * 	def Length2(self):
 * 		return deref(self.vec).Length2()             # <<<<<<<<<<<<<<
 * 
 * 	def Mass(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((*__pyx_v_self->vec).Length2()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 458; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":457
 * 		return deref(self.vec).Length()
 * 
 * 	def Length2(self):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).Length2()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec4.Length2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":460
 * 		return deref(self.vec).Length2()
 * 
 * 	def Mass(self):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).Mass()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec4_39Mass(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec4_39Mass(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Mass (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec4_38Mass(((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec4_38Mass(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Mass", 0);

  /* "kdp.pyx":461
 * 
 * 	def Mass(self):
 * 		return deref(self.vec).Mass()             # <<<<<<<<<<<<<<
 * 
 * 	def Mass2(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((*__pyx_v_self->vec).Mass()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 461; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":460
 * 		return deref(self.vec).Length2()
 * 
 * 	def Mass(self):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).Mass()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec4.Mass", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":463
 * 		return deref(self.vec).Mass()
 * 
 * 	def Mass2(self):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).Mass2()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec4_41Mass2(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec4_41Mass2(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Mass2 (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec4_40Mass2(((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec4_40Mass2(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Mass2", 0);

  /* "kdp.pyx":464
 * 
 * 	def Mass2(self):
 * 		return deref(self.vec).Mass2()             # <<<<<<<<<<<<<<
 * 
 * 	def Length_T(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((*__pyx_v_self->vec).Mass2()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 464; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":463
 * 		return deref(self.vec).Mass()
 * 
 * 	def Mass2(self):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).Mass2()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec4.Mass2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":466
 * 		return deref(self.vec).Mass2()
 * 
 * 	def Length_T(self):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).Length_T()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec4_43Length_T(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec4_43Length_T(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Length_T (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec4_42Length_T(((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec4_42Length_T(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Length_T", 0);

  /* "kdp.pyx":467
 * 
 * 	def Length_T(self):
 * 		return deref(self.vec).Length_T()             # <<<<<<<<<<<<<<
 * 
 * 	def Length2_T(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((*__pyx_v_self->vec).Length_T()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 467; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":466
 * 		return deref(self.vec).Mass2()
 * 
 * 	def Length_T(self):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).Length_T()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec4.Length_T", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":469
 * 		return deref(self.vec).Length_T()
 * 
 * 	def Length2_T(self):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).Length2_T()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec4_45Length2_T(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec4_45Length2_T(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Length2_T (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec4_44Length2_T(((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec4_44Length2_T(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Length2_T", 0);

  /* "kdp.pyx":470
 * 
 * 	def Length2_T(self):
 * 		return deref(self.vec).Length2_T()             # <<<<<<<<<<<<<<
 * 
 * 	def Contract(self, Vec4 other):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((*__pyx_v_self->vec).Length2_T()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 470; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":469
 * 		return deref(self.vec).Length_T()
 * 
 * 	def Length2_T(self):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).Length2_T()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec4.Length2_T", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":472
 * 		return deref(self.vec).Length2_T()
 * 
 * 	def Contract(self, Vec4 other):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).Contract(deref(other.vec))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec4_47Contract(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec4_47Contract(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Contract (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_3kdp_Vec4, 1, "other", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 472; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_3kdp_4Vec4_46Contract(((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_self), ((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec4_46Contract(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self, struct __pyx_obj_3kdp_Vec4 *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Contract", 0);

  /* "kdp.pyx":473
 * 
 * 	def Contract(self, Vec4 other):
 * 		return deref(self.vec).Contract(deref(other.vec))             # <<<<<<<<<<<<<<
 * 
 * 	def Beta(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((*__pyx_v_self->vec).Contract((*__pyx_v_other->vec))); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 473; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":472
 * 		return deref(self.vec).Length2_T()
 * 
 * 	def Contract(self, Vec4 other):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).Contract(deref(other.vec))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec4.Contract", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":475
 * 		return deref(self.vec).Contract(deref(other.vec))
 * 
 * 	def Beta(self):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).Beta()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec4_49Beta(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec4_49Beta(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Beta (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec4_48Beta(((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec4_48Beta(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Beta", 0);

  /* "kdp.pyx":476
 * 
 * 	def Beta(self):
 * 		return deref(self.vec).Beta()             # <<<<<<<<<<<<<<
 * 
 * 	def BetaVec(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((*__pyx_v_self->vec).Beta()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 476; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":475
 * 		return deref(self.vec).Contract(deref(other.vec))
 * 
 * 	def Beta(self):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).Beta()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec4.Beta", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":478
 * 		return deref(self.vec).Beta()
 * 
 * 	def BetaVec(self):             # <<<<<<<<<<<<<<
 * 		return Vec3.Factory(deref(self.vec).BetaVec())
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec4_51BetaVec(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec4_51BetaVec(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("BetaVec (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec4_50BetaVec(((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec4_50BetaVec(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("BetaVec", 0);

  /* "kdp.pyx":479
 * 
 * 	def BetaVec(self):
 * 		return Vec3.Factory(deref(self.vec).BetaVec())             # <<<<<<<<<<<<<<
 * 
 * 	def Rapidity(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_3kdp_4Vec3_Factory((*__pyx_v_self->vec).BetaVec())); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 479; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":478
 * 		return deref(self.vec).Beta()
 * 
 * 	def BetaVec(self):             # <<<<<<<<<<<<<<
 * 		return Vec3.Factory(deref(self.vec).BetaVec())
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec4.BetaVec", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":481
 * 		return Vec3.Factory(deref(self.vec).BetaVec())
 * 
 * 	def Rapidity(self):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).Rapidity()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec4_53Rapidity(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec4_53Rapidity(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Rapidity (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec4_52Rapidity(((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec4_52Rapidity(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Rapidity", 0);

  /* "kdp.pyx":482
 * 
 * 	def Rapidity(self):
 * 		return deref(self.vec).Rapidity()             # <<<<<<<<<<<<<<
 * 
 * 	def Eta(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((*__pyx_v_self->vec).Rapidity()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 482; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":481
 * 		return Vec3.Factory(deref(self.vec).BetaVec())
 * 
 * 	def Rapidity(self):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).Rapidity()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec4.Rapidity", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":484
 * 		return deref(self.vec).Rapidity()
 * 
 * 	def Eta(self):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).Eta()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec4_55Eta(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec4_55Eta(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Eta (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec4_54Eta(((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec4_54Eta(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Eta", 0);

  /* "kdp.pyx":485
 * 
 * 	def Eta(self):
 * 		return deref(self.vec).Eta()             # <<<<<<<<<<<<<<
 * 
 * 	def Theta(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((*__pyx_v_self->vec).Eta()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 485; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":484
 * 		return deref(self.vec).Rapidity()
 * 
 * 	def Eta(self):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).Eta()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec4.Eta", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":487
 * 		return deref(self.vec).Eta()
 * 
 * 	def Theta(self):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).Theta()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec4_57Theta(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec4_57Theta(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Theta (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec4_56Theta(((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec4_56Theta(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Theta", 0);

  /* "kdp.pyx":488
 * 
 * 	def Theta(self):
 * 		return deref(self.vec).Theta()             # <<<<<<<<<<<<<<
 * 
 * 	def Phi(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((*__pyx_v_self->vec).Theta()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 488; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":487
 * 		return deref(self.vec).Eta()
 * 
 * 	def Theta(self):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).Theta()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec4.Theta", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":490
 * 		return deref(self.vec).Theta()
 * 
 * 	def Phi(self):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).Phi()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec4_59Phi(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec4_59Phi(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Phi (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Vec4_58Phi(((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec4_58Phi(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Phi", 0);

  /* "kdp.pyx":491
 * 
 * 	def Phi(self):
 * 		return deref(self.vec).Phi()             # <<<<<<<<<<<<<<
 * 
 * 	def DeltaEta(self, Vec4 other):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((*__pyx_v_self->vec).Phi()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 491; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":490
 * 		return deref(self.vec).Theta()
 * 
 * 	def Phi(self):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).Phi()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec4.Phi", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":493
 * 		return deref(self.vec).Phi()
 * 
 * 	def DeltaEta(self, Vec4 other):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).DeltaEta(deref(other.vec))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec4_61DeltaEta(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec4_61DeltaEta(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("DeltaEta (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_3kdp_Vec4, 1, "other", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 493; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_3kdp_4Vec4_60DeltaEta(((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_self), ((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec4_60DeltaEta(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self, struct __pyx_obj_3kdp_Vec4 *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("DeltaEta", 0);

  /* "kdp.pyx":494
 * 
 * 	def DeltaEta(self, Vec4 other):
 * 		return deref(self.vec).DeltaEta(deref(other.vec))             # <<<<<<<<<<<<<<
 * 
 * 	def DeltaPhi(self, Vec4 other):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((*__pyx_v_self->vec).DeltaEta((*__pyx_v_other->vec))); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 494; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":493
 * 		return deref(self.vec).Phi()
 * 
 * 	def DeltaEta(self, Vec4 other):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).DeltaEta(deref(other.vec))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec4.DeltaEta", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":496
 * 		return deref(self.vec).DeltaEta(deref(other.vec))
 * 
 * 	def DeltaPhi(self, Vec4 other):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).DeltaPhi(deref(other.vec))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec4_63DeltaPhi(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec4_63DeltaPhi(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("DeltaPhi (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_3kdp_Vec4, 1, "other", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 496; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_3kdp_4Vec4_62DeltaPhi(((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_self), ((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec4_62DeltaPhi(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self, struct __pyx_obj_3kdp_Vec4 *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("DeltaPhi", 0);

  /* "kdp.pyx":497
 * 
 * 	def DeltaPhi(self, Vec4 other):
 * 		return deref(self.vec).DeltaPhi(deref(other.vec))             # <<<<<<<<<<<<<<
 * 
 * 	def DeltaR2_rap(self, Vec4 other):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((*__pyx_v_self->vec).DeltaPhi((*__pyx_v_other->vec))); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 497; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":496
 * 		return deref(self.vec).DeltaEta(deref(other.vec))
 * 
 * 	def DeltaPhi(self, Vec4 other):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).DeltaPhi(deref(other.vec))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec4.DeltaPhi", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":499
 * 		return deref(self.vec).DeltaPhi(deref(other.vec))
 * 
 * 	def DeltaR2_rap(self, Vec4 other):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).DeltaR2_rap(deref(other.vec))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec4_65DeltaR2_rap(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec4_65DeltaR2_rap(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("DeltaR2_rap (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_3kdp_Vec4, 1, "other", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 499; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_3kdp_4Vec4_64DeltaR2_rap(((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_self), ((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec4_64DeltaR2_rap(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self, struct __pyx_obj_3kdp_Vec4 *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("DeltaR2_rap", 0);

  /* "kdp.pyx":500
 * 
 * 	def DeltaR2_rap(self, Vec4 other):
 * 		return deref(self.vec).DeltaR2_rap(deref(other.vec))             # <<<<<<<<<<<<<<
 * 
 * 	def DeltaR_rap(self, Vec4 other):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((*__pyx_v_self->vec).DeltaR2_rap((*__pyx_v_other->vec))); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 500; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":499
 * 		return deref(self.vec).DeltaPhi(deref(other.vec))
 * 
 * 	def DeltaR2_rap(self, Vec4 other):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).DeltaR2_rap(deref(other.vec))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec4.DeltaR2_rap", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":502
 * 		return deref(self.vec).DeltaR2_rap(deref(other.vec))
 * 
 * 	def DeltaR_rap(self, Vec4 other):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).DeltaR_rap(deref(other.vec))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec4_67DeltaR_rap(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec4_67DeltaR_rap(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("DeltaR_rap (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_3kdp_Vec4, 1, "other", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 502; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_3kdp_4Vec4_66DeltaR_rap(((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_self), ((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec4_66DeltaR_rap(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self, struct __pyx_obj_3kdp_Vec4 *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("DeltaR_rap", 0);

  /* "kdp.pyx":503
 * 
 * 	def DeltaR_rap(self, Vec4 other):
 * 		return deref(self.vec).DeltaR_rap(deref(other.vec))             # <<<<<<<<<<<<<<
 * 
 * 	def DeltaR2_pseudo(self, Vec4 other):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((*__pyx_v_self->vec).DeltaR_rap((*__pyx_v_other->vec))); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 503; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":502
 * 		return deref(self.vec).DeltaR2_rap(deref(other.vec))
 * 
 * 	def DeltaR_rap(self, Vec4 other):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).DeltaR_rap(deref(other.vec))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec4.DeltaR_rap", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":505
 * 		return deref(self.vec).DeltaR_rap(deref(other.vec))
 * 
 * 	def DeltaR2_pseudo(self, Vec4 other):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).DeltaR2_pseudo(deref(other.vec))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec4_69DeltaR2_pseudo(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec4_69DeltaR2_pseudo(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("DeltaR2_pseudo (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_3kdp_Vec4, 1, "other", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 505; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_3kdp_4Vec4_68DeltaR2_pseudo(((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_self), ((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec4_68DeltaR2_pseudo(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self, struct __pyx_obj_3kdp_Vec4 *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("DeltaR2_pseudo", 0);

  /* "kdp.pyx":506
 * 
 * 	def DeltaR2_pseudo(self, Vec4 other):
 * 		return deref(self.vec).DeltaR2_pseudo(deref(other.vec))             # <<<<<<<<<<<<<<
 * 
 * 	def DeltaR_pseudo(self, Vec4 other):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((*__pyx_v_self->vec).DeltaR2_pseudo((*__pyx_v_other->vec))); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 506; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":505
 * 		return deref(self.vec).DeltaR_rap(deref(other.vec))
 * 
 * 	def DeltaR2_pseudo(self, Vec4 other):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).DeltaR2_pseudo(deref(other.vec))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec4.DeltaR2_pseudo", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":508
 * 		return deref(self.vec).DeltaR2_pseudo(deref(other.vec))
 * 
 * 	def DeltaR_pseudo(self, Vec4 other):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).DeltaR_pseudo(deref(other.vec))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec4_71DeltaR_pseudo(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static PyObject *__pyx_pw_3kdp_4Vec4_71DeltaR_pseudo(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("DeltaR_pseudo (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_3kdp_Vec4, 1, "other", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 508; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_3kdp_4Vec4_70DeltaR_pseudo(((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_self), ((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec4_70DeltaR_pseudo(struct __pyx_obj_3kdp_Vec4 *__pyx_v_self, struct __pyx_obj_3kdp_Vec4 *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("DeltaR_pseudo", 0);

  /* "kdp.pyx":509
 * 
 * 	def DeltaR_pseudo(self, Vec4 other):
 * 		return deref(self.vec).DeltaR_pseudo(deref(other.vec))             # <<<<<<<<<<<<<<
 * 
 * 	@staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((*__pyx_v_self->vec).DeltaR_pseudo((*__pyx_v_other->vec))); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 509; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":508
 * 		return deref(self.vec).DeltaR2_pseudo(deref(other.vec))
 * 
 * 	def DeltaR_pseudo(self, Vec4 other):             # <<<<<<<<<<<<<<
 * 		return deref(self.vec).DeltaR_pseudo(deref(other.vec))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Vec4.DeltaR_pseudo", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":512
 * 
 * 	@staticmethod
 * 	def SetLengthRelDiffThreshold(double newThreshold):             # <<<<<<<<<<<<<<
 * 		Vec4_c.SetLengthRelDiffThreshold(newThreshold)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Vec4_73SetLengthRelDiffThreshold(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_3kdp_4Vec4_73SetLengthRelDiffThreshold = {"SetLengthRelDiffThreshold", (PyCFunction)__pyx_pw_3kdp_4Vec4_73SetLengthRelDiffThreshold, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_3kdp_4Vec4_73SetLengthRelDiffThreshold(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_newThreshold;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("SetLengthRelDiffThreshold (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_newThreshold,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_newThreshold)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "SetLengthRelDiffThreshold") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 512; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_newThreshold = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_newThreshold == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 512; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("SetLengthRelDiffThreshold", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 512; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("kdp.Vec4.SetLengthRelDiffThreshold", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_3kdp_4Vec4_72SetLengthRelDiffThreshold(__pyx_v_newThreshold);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Vec4_72SetLengthRelDiffThreshold(double __pyx_v_newThreshold) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("SetLengthRelDiffThreshold", 0);

  /* "kdp.pyx":513
 * 	@staticmethod
 * 	def SetLengthRelDiffThreshold(double newThreshold):
 * 		Vec4_c.SetLengthRelDiffThreshold(newThreshold)             # <<<<<<<<<<<<<<
 * 
 * ########################################################################
 */
  try {
    kdp::Vec4::SetLengthRelDiffThreshold(__pyx_v_newThreshold);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 513; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "kdp.pyx":512
 * 
 * 	@staticmethod
 * 	def SetLengthRelDiffThreshold(double newThreshold):             # <<<<<<<<<<<<<<
 * 		Vec4_c.SetLengthRelDiffThreshold(newThreshold)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("kdp.Vec4.SetLengthRelDiffThreshold", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":519
 * cdef class Rot3:
 * 
 * 	def __cinit__(self, Vec3 axis, double angle):             # <<<<<<<<<<<<<<
 * #~ 		self.vec = shared_ptr[Vec4_c](new Vec4_c(x0, x1, x2, x3))
 * 		self.rot = new Rot3_c(deref(axis.vec), angle)
 */

/* Python wrapper */
static int __pyx_pw_3kdp_4Rot3_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_3kdp_4Rot3_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_3kdp_Vec3 *__pyx_v_axis = 0;
  double __pyx_v_angle;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_axis,&__pyx_n_s_angle,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_axis)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_angle)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 519; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 519; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_axis = ((struct __pyx_obj_3kdp_Vec3 *)values[0]);
    __pyx_v_angle = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_angle == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 519; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 519; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("kdp.Rot3.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_axis), __pyx_ptype_3kdp_Vec3, 1, "axis", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 519; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_3kdp_4Rot3___cinit__(((struct __pyx_obj_3kdp_Rot3 *)__pyx_v_self), __pyx_v_axis, __pyx_v_angle);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3kdp_4Rot3___cinit__(struct __pyx_obj_3kdp_Rot3 *__pyx_v_self, struct __pyx_obj_3kdp_Vec3 *__pyx_v_axis, double __pyx_v_angle) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  kdp::Rot3 *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "kdp.pyx":521
 * 	def __cinit__(self, Vec3 axis, double angle):
 * #~ 		self.vec = shared_ptr[Vec4_c](new Vec4_c(x0, x1, x2, x3))
 * 		self.rot = new Rot3_c(deref(axis.vec), angle)             # <<<<<<<<<<<<<<
 * 
 * 	def __dealloc__(self):
 */
  try {
    __pyx_t_1 = new kdp::Rot3((*__pyx_v_axis->vec), __pyx_v_angle);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 521; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_self->rot = __pyx_t_1;

  /* "kdp.pyx":519
 * cdef class Rot3:
 * 
 * 	def __cinit__(self, Vec3 axis, double angle):             # <<<<<<<<<<<<<<
 * #~ 		self.vec = shared_ptr[Vec4_c](new Vec4_c(x0, x1, x2, x3))
 * 		self.rot = new Rot3_c(deref(axis.vec), angle)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("kdp.Rot3.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":523
 * 		self.rot = new Rot3_c(deref(axis.vec), angle)
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		del self.rot
 * 
 */

/* Python wrapper */
static void __pyx_pw_3kdp_4Rot3_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_3kdp_4Rot3_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_3kdp_4Rot3_2__dealloc__(((struct __pyx_obj_3kdp_Rot3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_3kdp_4Rot3_2__dealloc__(struct __pyx_obj_3kdp_Rot3 *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "kdp.pyx":524
 * 
 * 	def __dealloc__(self):
 * 		del self.rot             # <<<<<<<<<<<<<<
 * 
 * 	# Have to make this to get the axis for vec to vec rotation
 */
  delete __pyx_v_self->rot;

  /* "kdp.pyx":523
 * 		self.rot = new Rot3_c(deref(axis.vec), angle)
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		del self.rot
 * 
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "kdp.pyx":528
 * 	# Have to make this to get the axis for vec to vec rotation
 * 	@staticmethod
 * 	def Make_Vec2Vec(Vec3 u, Vec3 v, double omega):             # <<<<<<<<<<<<<<
 * 		# Create a dummy rotation object to solve for axis/angle
 * 		# use a pointer so we don't have to declare default ctor for Cython
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Rot3_5Make_Vec2Vec(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_3kdp_4Rot3_5Make_Vec2Vec = {"Make_Vec2Vec", (PyCFunction)__pyx_pw_3kdp_4Rot3_5Make_Vec2Vec, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_3kdp_4Rot3_5Make_Vec2Vec(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_3kdp_Vec3 *__pyx_v_u = 0;
  struct __pyx_obj_3kdp_Vec3 *__pyx_v_v = 0;
  double __pyx_v_omega;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Make_Vec2Vec (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_u,&__pyx_n_s_v,&__pyx_n_s_omega,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_u)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_v)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("Make_Vec2Vec", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 528; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_omega)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("Make_Vec2Vec", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 528; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "Make_Vec2Vec") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 528; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_u = ((struct __pyx_obj_3kdp_Vec3 *)values[0]);
    __pyx_v_v = ((struct __pyx_obj_3kdp_Vec3 *)values[1]);
    __pyx_v_omega = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_omega == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 528; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("Make_Vec2Vec", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 528; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("kdp.Rot3.Make_Vec2Vec", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_u), __pyx_ptype_3kdp_Vec3, 1, "u", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 528; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_v), __pyx_ptype_3kdp_Vec3, 1, "v", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 528; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_3kdp_4Rot3_4Make_Vec2Vec(__pyx_v_u, __pyx_v_v, __pyx_v_omega);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Rot3_4Make_Vec2Vec(struct __pyx_obj_3kdp_Vec3 *__pyx_v_u, struct __pyx_obj_3kdp_Vec3 *__pyx_v_v, double __pyx_v_omega) {
  kdp::Rot3 *__pyx_v_tmp;
  struct __pyx_obj_3kdp_Rot3 *__pyx_v_rot = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  kdp::Rot3 *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Make_Vec2Vec", 0);

  /* "kdp.pyx":531
 * 		# Create a dummy rotation object to solve for axis/angle
 * 		# use a pointer so we don't have to declare default ctor for Cython
 * 		cdef Rot3_c* tmp = new Rot3_c(deref(u.vec), deref(v.vec), omega)             # <<<<<<<<<<<<<<
 * 		rot = Rot3(Vec3.Factory(tmp.Axis()), tmp.Angle())
 * 
 */
  try {
    __pyx_t_1 = new kdp::Rot3((*__pyx_v_u->vec), (*__pyx_v_v->vec), __pyx_v_omega);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 531; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_tmp = __pyx_t_1;

  /* "kdp.pyx":532
 * 		# use a pointer so we don't have to declare default ctor for Cython
 * 		cdef Rot3_c* tmp = new Rot3_c(deref(u.vec), deref(v.vec), omega)
 * 		rot = Rot3(Vec3.Factory(tmp.Axis()), tmp.Angle())             # <<<<<<<<<<<<<<
 * 
 * 		del tmp # must clean
 */
  __pyx_t_2 = ((PyObject *)__pyx_f_3kdp_4Vec3_Factory(__pyx_v_tmp->Axis())); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 532; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_tmp->Angle()); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 532; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 532; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_3);
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_3kdp_Rot3), __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 532; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_v_rot = ((struct __pyx_obj_3kdp_Rot3 *)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "kdp.pyx":534
 * 		rot = Rot3(Vec3.Factory(tmp.Axis()), tmp.Angle())
 * 
 * 		del tmp # must clean             # <<<<<<<<<<<<<<
 * 		return rot
 * 
 */
  delete __pyx_v_tmp;

  /* "kdp.pyx":535
 * 
 * 		del tmp # must clean
 * 		return rot             # <<<<<<<<<<<<<<
 * 
 * 	def __call__(self, Vec3 victim):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_rot));
  __pyx_r = ((PyObject *)__pyx_v_rot);
  goto __pyx_L0;

  /* "kdp.pyx":528
 * 	# Have to make this to get the axis for vec to vec rotation
 * 	@staticmethod
 * 	def Make_Vec2Vec(Vec3 u, Vec3 v, double omega):             # <<<<<<<<<<<<<<
 * 		# Create a dummy rotation object to solve for axis/angle
 * 		# use a pointer so we don't have to declare default ctor for Cython
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("kdp.Rot3.Make_Vec2Vec", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_rot);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":537
 * 		return rot
 * 
 * 	def __call__(self, Vec3 victim):             # <<<<<<<<<<<<<<
 * 		self.rot.Rotate(deref(victim.vec))
 * 		return victim
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Rot3_7__call__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_3kdp_4Rot3_7__call__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_3kdp_Vec3 *__pyx_v_victim = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__call__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_victim,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_victim)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__call__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 537; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_victim = ((struct __pyx_obj_3kdp_Vec3 *)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__call__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 537; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("kdp.Rot3.__call__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_victim), __pyx_ptype_3kdp_Vec3, 1, "victim", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 537; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_3kdp_4Rot3_6__call__(((struct __pyx_obj_3kdp_Rot3 *)__pyx_v_self), __pyx_v_victim);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Rot3_6__call__(struct __pyx_obj_3kdp_Rot3 *__pyx_v_self, struct __pyx_obj_3kdp_Vec3 *__pyx_v_victim) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__call__", 0);

  /* "kdp.pyx":538
 * 
 * 	def __call__(self, Vec3 victim):
 * 		self.rot.Rotate(deref(victim.vec))             # <<<<<<<<<<<<<<
 * 		return victim
 * 
 */
  __pyx_v_self->rot->operator()((*__pyx_v_victim->vec));

  /* "kdp.pyx":539
 * 	def __call__(self, Vec3 victim):
 * 		self.rot.Rotate(deref(victim.vec))
 * 		return victim             # <<<<<<<<<<<<<<
 * 
 * 	def Axis(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_victim));
  __pyx_r = ((PyObject *)__pyx_v_victim);
  goto __pyx_L0;

  /* "kdp.pyx":537
 * 		return rot
 * 
 * 	def __call__(self, Vec3 victim):             # <<<<<<<<<<<<<<
 * 		self.rot.Rotate(deref(victim.vec))
 * 		return victim
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":541
 * 		return victim
 * 
 * 	def Axis(self):             # <<<<<<<<<<<<<<
 * 		return Vec3.Factory(self.rot.Axis())
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Rot3_9Axis(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3kdp_4Rot3_9Axis(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Axis (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Rot3_8Axis(((struct __pyx_obj_3kdp_Rot3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Rot3_8Axis(struct __pyx_obj_3kdp_Rot3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Axis", 0);

  /* "kdp.pyx":542
 * 
 * 	def Axis(self):
 * 		return Vec3.Factory(self.rot.Axis())             # <<<<<<<<<<<<<<
 * 
 * 	def Angle(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_3kdp_4Vec3_Factory(__pyx_v_self->rot->Axis())); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 542; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":541
 * 		return victim
 * 
 * 	def Axis(self):             # <<<<<<<<<<<<<<
 * 		return Vec3.Factory(self.rot.Axis())
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Rot3.Axis", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":544
 * 		return Vec3.Factory(self.rot.Axis())
 * 
 * 	def Angle(self):             # <<<<<<<<<<<<<<
 * 		return self.rot.Angle()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_4Rot3_11Angle(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3kdp_4Rot3_11Angle(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Angle (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_4Rot3_10Angle(((struct __pyx_obj_3kdp_Rot3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_4Rot3_10Angle(struct __pyx_obj_3kdp_Rot3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Angle", 0);

  /* "kdp.pyx":545
 * 
 * 	def Angle(self):
 * 		return self.rot.Angle()             # <<<<<<<<<<<<<<
 * 
 * ########################################################################
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->rot->Angle()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 545; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":544
 * 		return Vec3.Factory(self.rot.Axis())
 * 
 * 	def Angle(self):             # <<<<<<<<<<<<<<
 * 		return self.rot.Angle()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Rot3.Angle", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":551
 * cdef class Boost:
 * 
 * 	def __cinit__(self, Vec3 beta):             # <<<<<<<<<<<<<<
 * 		self.boost = new Boost_c(deref(beta.vec))
 * 
 */

/* Python wrapper */
static int __pyx_pw_3kdp_5Boost_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_3kdp_5Boost_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_3kdp_Vec3 *__pyx_v_beta = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_beta,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_beta)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 551; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_beta = ((struct __pyx_obj_3kdp_Vec3 *)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 551; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("kdp.Boost.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_beta), __pyx_ptype_3kdp_Vec3, 1, "beta", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 551; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_3kdp_5Boost___cinit__(((struct __pyx_obj_3kdp_Boost *)__pyx_v_self), __pyx_v_beta);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_3kdp_5Boost___cinit__(struct __pyx_obj_3kdp_Boost *__pyx_v_self, struct __pyx_obj_3kdp_Vec3 *__pyx_v_beta) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  kdp::Boost *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "kdp.pyx":552
 * 
 * 	def __cinit__(self, Vec3 beta):
 * 		self.boost = new Boost_c(deref(beta.vec))             # <<<<<<<<<<<<<<
 * 
 * 	def __dealloc__(self):
 */
  try {
    __pyx_t_1 = new kdp::Boost((*__pyx_v_beta->vec));
  } catch(...) {
    __Pyx_CppExn2PyErr();
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 552; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_self->boost = __pyx_t_1;

  /* "kdp.pyx":551
 * cdef class Boost:
 * 
 * 	def __cinit__(self, Vec3 beta):             # <<<<<<<<<<<<<<
 * 		self.boost = new Boost_c(deref(beta.vec))
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("kdp.Boost.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":554
 * 		self.boost = new Boost_c(deref(beta.vec))
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		del self.boost
 * 
 */

/* Python wrapper */
static void __pyx_pw_3kdp_5Boost_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_3kdp_5Boost_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_3kdp_5Boost_2__dealloc__(((struct __pyx_obj_3kdp_Boost *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_3kdp_5Boost_2__dealloc__(struct __pyx_obj_3kdp_Boost *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "kdp.pyx":555
 * 
 * 	def __dealloc__(self):
 * 		del self.boost             # <<<<<<<<<<<<<<
 * 
 * 	def Axis(self):
 */
  delete __pyx_v_self->boost;

  /* "kdp.pyx":554
 * 		self.boost = new Boost_c(deref(beta.vec))
 * 
 * 	def __dealloc__(self):             # <<<<<<<<<<<<<<
 * 		del self.boost
 * 
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "kdp.pyx":557
 * 		del self.boost
 * 
 * 	def Axis(self):             # <<<<<<<<<<<<<<
 * 		return Vec3.Factory(self.boost.Axis())
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_5Boost_5Axis(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3kdp_5Boost_5Axis(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Axis (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_5Boost_4Axis(((struct __pyx_obj_3kdp_Boost *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_5Boost_4Axis(struct __pyx_obj_3kdp_Boost *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Axis", 0);

  /* "kdp.pyx":558
 * 
 * 	def Axis(self):
 * 		return Vec3.Factory(self.boost.Axis())             # <<<<<<<<<<<<<<
 * 
 * 	def BetaVec(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_3kdp_4Vec3_Factory(__pyx_v_self->boost->Axis())); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 558; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":557
 * 		del self.boost
 * 
 * 	def Axis(self):             # <<<<<<<<<<<<<<
 * 		return Vec3.Factory(self.boost.Axis())
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Boost.Axis", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":560
 * 		return Vec3.Factory(self.boost.Axis())
 * 
 * 	def BetaVec(self):             # <<<<<<<<<<<<<<
 * 		return Vec3.Factory(self.boost.BetaVec())
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_5Boost_7BetaVec(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3kdp_5Boost_7BetaVec(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("BetaVec (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_5Boost_6BetaVec(((struct __pyx_obj_3kdp_Boost *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_5Boost_6BetaVec(struct __pyx_obj_3kdp_Boost *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("BetaVec", 0);

  /* "kdp.pyx":561
 * 
 * 	def BetaVec(self):
 * 		return Vec3.Factory(self.boost.BetaVec())             # <<<<<<<<<<<<<<
 * 
 * 	def Gamma(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_f_3kdp_4Vec3_Factory(__pyx_v_self->boost->BetaVec())); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 561; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":560
 * 		return Vec3.Factory(self.boost.Axis())
 * 
 * 	def BetaVec(self):             # <<<<<<<<<<<<<<
 * 		return Vec3.Factory(self.boost.BetaVec())
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Boost.BetaVec", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":563
 * 		return Vec3.Factory(self.boost.BetaVec())
 * 
 * 	def Gamma(self):             # <<<<<<<<<<<<<<
 * 		return self.boost.Gamma()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_5Boost_9Gamma(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3kdp_5Boost_9Gamma(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Gamma (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_5Boost_8Gamma(((struct __pyx_obj_3kdp_Boost *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_5Boost_8Gamma(struct __pyx_obj_3kdp_Boost *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Gamma", 0);

  /* "kdp.pyx":564
 * 
 * 	def Gamma(self):
 * 		return self.boost.Gamma()             # <<<<<<<<<<<<<<
 * 
 * 	def Beta(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->boost->Gamma()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 564; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":563
 * 		return Vec3.Factory(self.boost.BetaVec())
 * 
 * 	def Gamma(self):             # <<<<<<<<<<<<<<
 * 		return self.boost.Gamma()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Boost.Gamma", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":566
 * 		return self.boost.Gamma()
 * 
 * 	def Beta(self):             # <<<<<<<<<<<<<<
 * 		return self.boost.Beta()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_5Boost_11Beta(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3kdp_5Boost_11Beta(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Beta (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_5Boost_10Beta(((struct __pyx_obj_3kdp_Boost *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_5Boost_10Beta(struct __pyx_obj_3kdp_Boost *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Beta", 0);

  /* "kdp.pyx":567
 * 
 * 	def Beta(self):
 * 		return self.boost.Beta()             # <<<<<<<<<<<<<<
 * 
 * 	def Rapidity(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->boost->Beta()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 567; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":566
 * 		return self.boost.Gamma()
 * 
 * 	def Beta(self):             # <<<<<<<<<<<<<<
 * 		return self.boost.Beta()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Boost.Beta", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":569
 * 		return self.boost.Beta()
 * 
 * 	def Rapidity(self):             # <<<<<<<<<<<<<<
 * 		return self.boost.Rapidity()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_5Boost_13Rapidity(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_3kdp_5Boost_13Rapidity(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Rapidity (wrapper)", 0);
  __pyx_r = __pyx_pf_3kdp_5Boost_12Rapidity(((struct __pyx_obj_3kdp_Boost *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_5Boost_12Rapidity(struct __pyx_obj_3kdp_Boost *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Rapidity", 0);

  /* "kdp.pyx":570
 * 
 * 	def Rapidity(self):
 * 		return self.boost.Rapidity()             # <<<<<<<<<<<<<<
 * 
 * 	def Forward(self, Vec4 victim):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->boost->Rapidity()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 570; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "kdp.pyx":569
 * 		return self.boost.Beta()
 * 
 * 	def Rapidity(self):             # <<<<<<<<<<<<<<
 * 		return self.boost.Rapidity()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kdp.Boost.Rapidity", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":572
 * 		return self.boost.Rapidity()
 * 
 * 	def Forward(self, Vec4 victim):             # <<<<<<<<<<<<<<
 * 		self.boost.Forward(deref(victim.vec))
 * 		return victim
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_5Boost_15Forward(PyObject *__pyx_v_self, PyObject *__pyx_v_victim); /*proto*/
static PyObject *__pyx_pw_3kdp_5Boost_15Forward(PyObject *__pyx_v_self, PyObject *__pyx_v_victim) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Forward (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_victim), __pyx_ptype_3kdp_Vec4, 1, "victim", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 572; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_3kdp_5Boost_14Forward(((struct __pyx_obj_3kdp_Boost *)__pyx_v_self), ((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_victim));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_5Boost_14Forward(struct __pyx_obj_3kdp_Boost *__pyx_v_self, struct __pyx_obj_3kdp_Vec4 *__pyx_v_victim) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Forward", 0);

  /* "kdp.pyx":573
 * 
 * 	def Forward(self, Vec4 victim):
 * 		self.boost.Forward(deref(victim.vec))             # <<<<<<<<<<<<<<
 * 		return victim
 * 
 */
  __pyx_v_self->boost->Forward((*__pyx_v_victim->vec));

  /* "kdp.pyx":574
 * 	def Forward(self, Vec4 victim):
 * 		self.boost.Forward(deref(victim.vec))
 * 		return victim             # <<<<<<<<<<<<<<
 * 
 * 	def Backward(self, Vec4 victim):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_victim));
  __pyx_r = ((PyObject *)__pyx_v_victim);
  goto __pyx_L0;

  /* "kdp.pyx":572
 * 		return self.boost.Rapidity()
 * 
 * 	def Forward(self, Vec4 victim):             # <<<<<<<<<<<<<<
 * 		self.boost.Forward(deref(victim.vec))
 * 		return victim
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kdp.pyx":576
 * 		return victim
 * 
 * 	def Backward(self, Vec4 victim):             # <<<<<<<<<<<<<<
 * 		self.boost.Backward(deref(victim.vec))
 * 		return victim
 */

/* Python wrapper */
static PyObject *__pyx_pw_3kdp_5Boost_17Backward(PyObject *__pyx_v_self, PyObject *__pyx_v_victim); /*proto*/
static PyObject *__pyx_pw_3kdp_5Boost_17Backward(PyObject *__pyx_v_self, PyObject *__pyx_v_victim) {
  CYTHON_UNUSED int __pyx_lineno = 0;
  CYTHON_UNUSED const char *__pyx_filename = NULL;
  CYTHON_UNUSED int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Backward (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_victim), __pyx_ptype_3kdp_Vec4, 1, "victim", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 576; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_pf_3kdp_5Boost_16Backward(((struct __pyx_obj_3kdp_Boost *)__pyx_v_self), ((struct __pyx_obj_3kdp_Vec4 *)__pyx_v_victim));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_3kdp_5Boost_16Backward(struct __pyx_obj_3kdp_Boost *__pyx_v_self, struct __pyx_obj_3kdp_Vec4 *__pyx_v_victim) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Backward", 0);

  /* "kdp.pyx":577
 * 
 * 	def Backward(self, Vec4 victim):
 * 		self.boost.Backward(deref(victim.vec))             # <<<<<<<<<<<<<<
 * 		return victim
 */
  __pyx_v_self->boost->Backward((*__pyx_v_victim->vec));

  /* "kdp.pyx":578
 * 	def Backward(self, Vec4 victim):
 * 		self.boost.Backward(deref(victim.vec))
 * 		return victim             # <<<<<<<<<<<<<<
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_victim));
  __pyx_r = ((PyObject *)__pyx_v_victim);
  goto __pyx_L0;

  /* "kdp.pyx":576
 * 		return victim
 * 
 * 	def Backward(self, Vec4 victim):             # <<<<<<<<<<<<<<
 * 		self.boost.Backward(deref(victim.vec))
 * 		return victim
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static struct __pyx_vtabstruct_3kdp_Vec2 __pyx_vtable_3kdp_Vec2;

static PyObject *__pyx_tp_new_3kdp_Vec2(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_3kdp_Vec2 *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_3kdp_Vec2 *)o);
  p->__pyx_vtab = __pyx_vtabptr_3kdp_Vec2;
  new((void*)&(p->vec)) std::shared_ptr<kdp::Vec2> ();
  if (unlikely(__pyx_pw_3kdp_4Vec2_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_3kdp_Vec2(PyObject *o) {
  struct __pyx_obj_3kdp_Vec2 *p = (struct __pyx_obj_3kdp_Vec2 *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_3kdp_4Vec2_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  __Pyx_call_destructor(p->vec);
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_3kdp_4Vec2_x1(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3kdp_4Vec2_2x1_1__get__(o);
}

static int __pyx_setprop_3kdp_4Vec2_x1(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_3kdp_4Vec2_2x1_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_3kdp_4Vec2_x2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3kdp_4Vec2_2x2_1__get__(o);
}

static int __pyx_setprop_3kdp_4Vec2_x2(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_3kdp_4Vec2_2x2_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_3kdp_Vec2[] = {
  {"Assign", (PyCFunction)__pyx_pw_3kdp_4Vec2_5Assign, METH_O, 0},
  {"Copy", (PyCFunction)__pyx_pw_3kdp_4Vec2_7Copy, METH_NOARGS, 0},
  {"__deepcopy__", (PyCFunction)__pyx_pw_3kdp_4Vec2_9__deepcopy__, METH_O, 0},
  {"Normalize", (PyCFunction)__pyx_pw_3kdp_4Vec2_31Normalize, METH_NOARGS, 0},
  {"Mag", (PyCFunction)__pyx_pw_3kdp_4Vec2_33Mag, METH_NOARGS, 0},
  {"Mag2", (PyCFunction)__pyx_pw_3kdp_4Vec2_35Mag2, METH_NOARGS, 0},
  {"Phi", (PyCFunction)__pyx_pw_3kdp_4Vec2_37Phi, METH_NOARGS, 0},
  {"DeltaPhi", (PyCFunction)__pyx_pw_3kdp_4Vec2_39DeltaPhi, METH_O, 0},
  {"Dot", (PyCFunction)__pyx_pw_3kdp_4Vec2_41Dot, METH_O, 0},
  {"Cross", (PyCFunction)__pyx_pw_3kdp_4Vec2_43Cross, METH_O, 0},
  {"InteriorAngle", (PyCFunction)__pyx_pw_3kdp_4Vec2_45InteriorAngle, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_3kdp_Vec2[] = {
  {(char *)"x1", __pyx_getprop_3kdp_4Vec2_x1, __pyx_setprop_3kdp_4Vec2_x1, 0, 0},
  {(char *)"x2", __pyx_getprop_3kdp_4Vec2_x2, __pyx_setprop_3kdp_4Vec2_x2, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Vec2 = {
  __pyx_pw_3kdp_4Vec2_21__add__, /*nb_add*/
  __pyx_pw_3kdp_4Vec2_23__sub__, /*nb_subtract*/
  __pyx_pw_3kdp_4Vec2_25__mul__, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  __pyx_pw_3kdp_4Vec2_29__neg__, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_hex*/
  #endif
  __pyx_pw_3kdp_4Vec2_13__iadd__, /*nb_inplace_add*/
  __pyx_pw_3kdp_4Vec2_15__isub__, /*nb_inplace_subtract*/
  __pyx_pw_3kdp_4Vec2_17__imul__, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  __pyx_pw_3kdp_4Vec2_27__truediv__, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  __pyx_pw_3kdp_4Vec2_19__itruediv__, /*nb_inplace_true_divide*/
  0, /*nb_index*/
  #if PY_VERSION_HEX >= 0x03050000
  0, /*nb_matrix_multiply*/
  #endif
  #if PY_VERSION_HEX >= 0x03050000
  0, /*nb_inplace_matrix_multiply*/
  #endif
};

static PyTypeObject __pyx_type_3kdp_Vec2 = {
  PyVarObject_HEAD_INIT(0, 0)
  "kdp.Vec2", /*tp_name*/
  sizeof(struct __pyx_obj_3kdp_Vec2), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_3kdp_Vec2, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_3kdp_4Vec2_11__repr__, /*tp_repr*/
  &__pyx_tp_as_number_Vec2, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_3kdp_Vec2, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_3kdp_Vec2, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_3kdp_Vec2, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_3kdp_Vec3 __pyx_vtable_3kdp_Vec3;

static PyObject *__pyx_tp_new_3kdp_Vec3(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_3kdp_Vec3 *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_3kdp_Vec3 *)o);
  p->__pyx_vtab = __pyx_vtabptr_3kdp_Vec3;
  new((void*)&(p->vec)) std::shared_ptr<kdp::Vec3> ();
  if (unlikely(__pyx_pw_3kdp_4Vec3_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_3kdp_Vec3(PyObject *o) {
  struct __pyx_obj_3kdp_Vec3 *p = (struct __pyx_obj_3kdp_Vec3 *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_3kdp_4Vec3_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  __Pyx_call_destructor(p->vec);
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_3kdp_4Vec3_x1(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3kdp_4Vec3_2x1_1__get__(o);
}

static int __pyx_setprop_3kdp_4Vec3_x1(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_3kdp_4Vec3_2x1_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_3kdp_4Vec3_x2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3kdp_4Vec3_2x2_1__get__(o);
}

static int __pyx_setprop_3kdp_4Vec3_x2(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_3kdp_4Vec3_2x2_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_3kdp_4Vec3_x3(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3kdp_4Vec3_2x3_1__get__(o);
}

static int __pyx_setprop_3kdp_4Vec3_x3(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_3kdp_4Vec3_2x3_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_3kdp_Vec3[] = {
  {"Assign", (PyCFunction)__pyx_pw_3kdp_4Vec3_5Assign, METH_O, 0},
  {"Make_LengthThetaPhi", (PyCFunction)__pyx_pw_3kdp_4Vec3_7Make_LengthThetaPhi, METH_VARARGS|METH_KEYWORDS, 0},
  {"Copy", (PyCFunction)__pyx_pw_3kdp_4Vec3_9Copy, METH_NOARGS, 0},
  {"__deepcopy__", (PyCFunction)__pyx_pw_3kdp_4Vec3_11__deepcopy__, METH_O, 0},
  {"T", (PyCFunction)__pyx_pw_3kdp_4Vec3_15T, METH_NOARGS, 0},
  {"Normalize", (PyCFunction)__pyx_pw_3kdp_4Vec3_35Normalize, METH_NOARGS, 0},
  {"Mag", (PyCFunction)__pyx_pw_3kdp_4Vec3_37Mag, METH_NOARGS, 0},
  {"Mag2", (PyCFunction)__pyx_pw_3kdp_4Vec3_39Mag2, METH_NOARGS, 0},
  {"Phi", (PyCFunction)__pyx_pw_3kdp_4Vec3_41Phi, METH_NOARGS, 0},
  {"Eta", (PyCFunction)__pyx_pw_3kdp_4Vec3_43Eta, METH_NOARGS, 0},
  {"Theta", (PyCFunction)__pyx_pw_3kdp_4Vec3_45Theta, METH_NOARGS, 0},
  {"DeltaEta", (PyCFunction)__pyx_pw_3kdp_4Vec3_47DeltaEta, METH_O, 0},
  {"DeltaPhi", (PyCFunction)__pyx_pw_3kdp_4Vec3_49DeltaPhi, METH_O, 0},
  {"Dot", (PyCFunction)__pyx_pw_3kdp_4Vec3_51Dot, METH_O, 0},
  {"Cross", (PyCFunction)__pyx_pw_3kdp_4Vec3_53Cross, METH_O, 0},
  {"InteriorAngle", (PyCFunction)__pyx_pw_3kdp_4Vec3_55InteriorAngle, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_3kdp_Vec3[] = {
  {(char *)"x1", __pyx_getprop_3kdp_4Vec3_x1, __pyx_setprop_3kdp_4Vec3_x1, 0, 0},
  {(char *)"x2", __pyx_getprop_3kdp_4Vec3_x2, __pyx_setprop_3kdp_4Vec3_x2, 0, 0},
  {(char *)"x3", __pyx_getprop_3kdp_4Vec3_x3, __pyx_setprop_3kdp_4Vec3_x3, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Vec3 = {
  __pyx_pw_3kdp_4Vec3_25__add__, /*nb_add*/
  __pyx_pw_3kdp_4Vec3_27__sub__, /*nb_subtract*/
  __pyx_pw_3kdp_4Vec3_29__mul__, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  __pyx_pw_3kdp_4Vec3_33__neg__, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_hex*/
  #endif
  __pyx_pw_3kdp_4Vec3_17__iadd__, /*nb_inplace_add*/
  __pyx_pw_3kdp_4Vec3_19__isub__, /*nb_inplace_subtract*/
  __pyx_pw_3kdp_4Vec3_21__imul__, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  __pyx_pw_3kdp_4Vec3_31__truediv__, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  __pyx_pw_3kdp_4Vec3_23__itruediv__, /*nb_inplace_true_divide*/
  0, /*nb_index*/
  #if PY_VERSION_HEX >= 0x03050000
  0, /*nb_matrix_multiply*/
  #endif
  #if PY_VERSION_HEX >= 0x03050000
  0, /*nb_inplace_matrix_multiply*/
  #endif
};

static PyTypeObject __pyx_type_3kdp_Vec3 = {
  PyVarObject_HEAD_INIT(0, 0)
  "kdp.Vec3", /*tp_name*/
  sizeof(struct __pyx_obj_3kdp_Vec3), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_3kdp_Vec3, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_3kdp_4Vec3_13__repr__, /*tp_repr*/
  &__pyx_tp_as_number_Vec3, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_3kdp_Vec3, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_3kdp_Vec3, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_3kdp_Vec3, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_3kdp_Vec4 __pyx_vtable_3kdp_Vec4;

static PyObject *__pyx_tp_new_3kdp_Vec4(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_3kdp_Vec4 *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_3kdp_Vec4 *)o);
  p->__pyx_vtab = __pyx_vtabptr_3kdp_Vec4;
  new((void*)&(p->vec)) std::shared_ptr<kdp::Vec4> ();
  if (unlikely(__pyx_pw_3kdp_4Vec4_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_3kdp_Vec4(PyObject *o) {
  struct __pyx_obj_3kdp_Vec4 *p = (struct __pyx_obj_3kdp_Vec4 *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_3kdp_4Vec4_5__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  __Pyx_call_destructor(p->vec);
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_3kdp_4Vec4_x0(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3kdp_4Vec4_2x0_1__get__(o);
}

static int __pyx_setprop_3kdp_4Vec4_x0(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_3kdp_4Vec4_2x0_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_3kdp_4Vec4_x1(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3kdp_4Vec4_2x1_1__get__(o);
}

static int __pyx_setprop_3kdp_4Vec4_x1(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_3kdp_4Vec4_2x1_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_3kdp_4Vec4_x2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3kdp_4Vec4_2x2_1__get__(o);
}

static int __pyx_setprop_3kdp_4Vec4_x2(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_3kdp_4Vec4_2x2_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_3kdp_4Vec4_x3(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_3kdp_4Vec4_2x3_1__get__(o);
}

static int __pyx_setprop_3kdp_4Vec4_x3(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_3kdp_4Vec4_2x3_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_3kdp_Vec4[] = {
  {"From_MassP3", (PyCFunction)__pyx_pw_3kdp_4Vec4_3From_MassP3, METH_VARARGS|METH_KEYWORDS, 0},
  {"Copy", (PyCFunction)__pyx_pw_3kdp_4Vec4_7Copy, METH_NOARGS, 0},
  {"__deepcopy__", (PyCFunction)__pyx_pw_3kdp_4Vec4_9__deepcopy__, METH_O, 0},
  {"x", (PyCFunction)__pyx_pw_3kdp_4Vec4_13x, METH_NOARGS, 0},
  {"p", (PyCFunction)__pyx_pw_3kdp_4Vec4_15p, METH_NOARGS, 0},
  {"Length", (PyCFunction)__pyx_pw_3kdp_4Vec4_35Length, METH_NOARGS, 0},
  {"Length2", (PyCFunction)__pyx_pw_3kdp_4Vec4_37Length2, METH_NOARGS, 0},
  {"Mass", (PyCFunction)__pyx_pw_3kdp_4Vec4_39Mass, METH_NOARGS, 0},
  {"Mass2", (PyCFunction)__pyx_pw_3kdp_4Vec4_41Mass2, METH_NOARGS, 0},
  {"Length_T", (PyCFunction)__pyx_pw_3kdp_4Vec4_43Length_T, METH_NOARGS, 0},
  {"Length2_T", (PyCFunction)__pyx_pw_3kdp_4Vec4_45Length2_T, METH_NOARGS, 0},
  {"Contract", (PyCFunction)__pyx_pw_3kdp_4Vec4_47Contract, METH_O, 0},
  {"Beta", (PyCFunction)__pyx_pw_3kdp_4Vec4_49Beta, METH_NOARGS, 0},
  {"BetaVec", (PyCFunction)__pyx_pw_3kdp_4Vec4_51BetaVec, METH_NOARGS, 0},
  {"Rapidity", (PyCFunction)__pyx_pw_3kdp_4Vec4_53Rapidity, METH_NOARGS, 0},
  {"Eta", (PyCFunction)__pyx_pw_3kdp_4Vec4_55Eta, METH_NOARGS, 0},
  {"Theta", (PyCFunction)__pyx_pw_3kdp_4Vec4_57Theta, METH_NOARGS, 0},
  {"Phi", (PyCFunction)__pyx_pw_3kdp_4Vec4_59Phi, METH_NOARGS, 0},
  {"DeltaEta", (PyCFunction)__pyx_pw_3kdp_4Vec4_61DeltaEta, METH_O, 0},
  {"DeltaPhi", (PyCFunction)__pyx_pw_3kdp_4Vec4_63DeltaPhi, METH_O, 0},
  {"DeltaR2_rap", (PyCFunction)__pyx_pw_3kdp_4Vec4_65DeltaR2_rap, METH_O, 0},
  {"DeltaR_rap", (PyCFunction)__pyx_pw_3kdp_4Vec4_67DeltaR_rap, METH_O, 0},
  {"DeltaR2_pseudo", (PyCFunction)__pyx_pw_3kdp_4Vec4_69DeltaR2_pseudo, METH_O, 0},
  {"DeltaR_pseudo", (PyCFunction)__pyx_pw_3kdp_4Vec4_71DeltaR_pseudo, METH_O, 0},
  {"SetLengthRelDiffThreshold", (PyCFunction)__pyx_pw_3kdp_4Vec4_73SetLengthRelDiffThreshold, METH_VARARGS|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_3kdp_Vec4[] = {
  {(char *)"x0", __pyx_getprop_3kdp_4Vec4_x0, __pyx_setprop_3kdp_4Vec4_x0, 0, 0},
  {(char *)"x1", __pyx_getprop_3kdp_4Vec4_x1, __pyx_setprop_3kdp_4Vec4_x1, 0, 0},
  {(char *)"x2", __pyx_getprop_3kdp_4Vec4_x2, __pyx_setprop_3kdp_4Vec4_x2, 0, 0},
  {(char *)"x3", __pyx_getprop_3kdp_4Vec4_x3, __pyx_setprop_3kdp_4Vec4_x3, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Vec4 = {
  __pyx_pw_3kdp_4Vec4_25__add__, /*nb_add*/
  __pyx_pw_3kdp_4Vec4_27__sub__, /*nb_subtract*/
  __pyx_pw_3kdp_4Vec4_29__mul__, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  __pyx_pw_3kdp_4Vec4_33__neg__, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_hex*/
  #endif
  __pyx_pw_3kdp_4Vec4_17__iadd__, /*nb_inplace_add*/
  __pyx_pw_3kdp_4Vec4_19__isub__, /*nb_inplace_subtract*/
  __pyx_pw_3kdp_4Vec4_21__imul__, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3 || CYTHON_COMPILING_IN_PYPY
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  __pyx_pw_3kdp_4Vec4_31__truediv__, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  __pyx_pw_3kdp_4Vec4_23__itruediv__, /*nb_inplace_true_divide*/
  0, /*nb_index*/
  #if PY_VERSION_HEX >= 0x03050000
  0, /*nb_matrix_multiply*/
  #endif
  #if PY_VERSION_HEX >= 0x03050000
  0, /*nb_inplace_matrix_multiply*/
  #endif
};

static PyTypeObject __pyx_type_3kdp_Vec4 = {
  PyVarObject_HEAD_INIT(0, 0)
  "kdp.Vec4", /*tp_name*/
  sizeof(struct __pyx_obj_3kdp_Vec4), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_3kdp_Vec4, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_3kdp_4Vec4_11__repr__, /*tp_repr*/
  &__pyx_tp_as_number_Vec4, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_3kdp_Vec4, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_3kdp_Vec4, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_3kdp_Vec4, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_3kdp_Rot3(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_3kdp_4Rot3_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_3kdp_Rot3(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_3kdp_4Rot3_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_3kdp_Rot3[] = {
  {"Make_Vec2Vec", (PyCFunction)__pyx_pw_3kdp_4Rot3_5Make_Vec2Vec, METH_VARARGS|METH_KEYWORDS, 0},
  {"Axis", (PyCFunction)__pyx_pw_3kdp_4Rot3_9Axis, METH_NOARGS, 0},
  {"Angle", (PyCFunction)__pyx_pw_3kdp_4Rot3_11Angle, METH_NOARGS, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_3kdp_Rot3 = {
  PyVarObject_HEAD_INIT(0, 0)
  "kdp.Rot3", /*tp_name*/
  sizeof(struct __pyx_obj_3kdp_Rot3), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_3kdp_Rot3, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  __pyx_pw_3kdp_4Rot3_7__call__, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_3kdp_Rot3, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_3kdp_Rot3, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_3kdp_Boost(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_3kdp_5Boost_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_3kdp_Boost(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_3kdp_5Boost_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_3kdp_Boost[] = {
  {"Axis", (PyCFunction)__pyx_pw_3kdp_5Boost_5Axis, METH_NOARGS, 0},
  {"BetaVec", (PyCFunction)__pyx_pw_3kdp_5Boost_7BetaVec, METH_NOARGS, 0},
  {"Gamma", (PyCFunction)__pyx_pw_3kdp_5Boost_9Gamma, METH_NOARGS, 0},
  {"Beta", (PyCFunction)__pyx_pw_3kdp_5Boost_11Beta, METH_NOARGS, 0},
  {"Rapidity", (PyCFunction)__pyx_pw_3kdp_5Boost_13Rapidity, METH_NOARGS, 0},
  {"Forward", (PyCFunction)__pyx_pw_3kdp_5Boost_15Forward, METH_O, 0},
  {"Backward", (PyCFunction)__pyx_pw_3kdp_5Boost_17Backward, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_3kdp_Boost = {
  PyVarObject_HEAD_INIT(0, 0)
  "kdp.Boost", /*tp_name*/
  sizeof(struct __pyx_obj_3kdp_Boost), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_3kdp_Boost, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_3kdp_Boost, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_3kdp_Boost, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
static struct PyModuleDef __pyx_moduledef = {
  #if PY_VERSION_HEX < 0x03020000
    { PyObject_HEAD_INIT(NULL) NULL, 0, NULL },
  #else
    PyModuleDef_HEAD_INIT,
  #endif
    "kdp",
    0, /* m_doc */
    -1, /* m_size */
    __pyx_methods /* m_methods */,
    NULL, /* m_reload */
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_n_s_Copy, __pyx_k_Copy, sizeof(__pyx_k_Copy), 0, 0, 1, 1},
  {&__pyx_n_s_From_MassP3, __pyx_k_From_MassP3, sizeof(__pyx_k_From_MassP3), 0, 0, 1, 1},
  {&__pyx_n_s_Make_LengthThetaPhi, __pyx_k_Make_LengthThetaPhi, sizeof(__pyx_k_Make_LengthThetaPhi), 0, 0, 1, 1},
  {&__pyx_n_s_Make_Vec2Vec, __pyx_k_Make_Vec2Vec, sizeof(__pyx_k_Make_Vec2Vec), 0, 0, 1, 1},
  {&__pyx_n_s_SetLengthRelDiffThreshold, __pyx_k_SetLengthRelDiffThreshold, sizeof(__pyx_k_SetLengthRelDiffThreshold), 0, 0, 1, 1},
  {&__pyx_n_s_angle, __pyx_k_angle, sizeof(__pyx_k_angle), 0, 0, 1, 1},
  {&__pyx_n_s_axis, __pyx_k_axis, sizeof(__pyx_k_axis), 0, 0, 1, 1},
  {&__pyx_n_s_beta, __pyx_k_beta, sizeof(__pyx_k_beta), 0, 0, 1, 1},
  {&__pyx_kp_s_home_keith_Documents_Projects_l, __pyx_k_home_keith_Documents_Projects_l, sizeof(__pyx_k_home_keith_Documents_Projects_l), 0, 0, 1, 0},
  {&__pyx_n_s_iadd, __pyx_k_iadd, sizeof(__pyx_k_iadd), 0, 0, 1, 1},
  {&__pyx_n_s_imul, __pyx_k_imul, sizeof(__pyx_k_imul), 0, 0, 1, 1},
  {&__pyx_n_s_isub, __pyx_k_isub, sizeof(__pyx_k_isub), 0, 0, 1, 1},
  {&__pyx_n_s_itruediv, __pyx_k_itruediv, sizeof(__pyx_k_itruediv), 0, 0, 1, 1},
  {&__pyx_n_s_kdp, __pyx_k_kdp, sizeof(__pyx_k_kdp), 0, 0, 1, 1},
  {&__pyx_n_s_length, __pyx_k_length, sizeof(__pyx_k_length), 0, 0, 1, 1},
  {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
  {&__pyx_n_s_mass, __pyx_k_mass, sizeof(__pyx_k_mass), 0, 0, 1, 1},
  {&__pyx_n_s_newThreshold, __pyx_k_newThreshold, sizeof(__pyx_k_newThreshold), 0, 0, 1, 1},
  {&__pyx_n_s_omega, __pyx_k_omega, sizeof(__pyx_k_omega), 0, 0, 1, 1},
  {&__pyx_n_s_p3, __pyx_k_p3, sizeof(__pyx_k_p3), 0, 0, 1, 1},
  {&__pyx_n_s_phi, __pyx_k_phi, sizeof(__pyx_k_phi), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_vtable, __pyx_k_pyx_vtable, sizeof(__pyx_k_pyx_vtable), 0, 0, 1, 1},
  {&__pyx_n_s_ret, __pyx_k_ret, sizeof(__pyx_k_ret), 0, 0, 1, 1},
  {&__pyx_n_s_rot, __pyx_k_rot, sizeof(__pyx_k_rot), 0, 0, 1, 1},
  {&__pyx_n_s_staticmethod, __pyx_k_staticmethod, sizeof(__pyx_k_staticmethod), 0, 0, 1, 1},
  {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
  {&__pyx_n_s_theta, __pyx_k_theta, sizeof(__pyx_k_theta), 0, 0, 1, 1},
  {&__pyx_n_s_tmp, __pyx_k_tmp, sizeof(__pyx_k_tmp), 0, 0, 1, 1},
  {&__pyx_n_s_u, __pyx_k_u, sizeof(__pyx_k_u), 0, 0, 1, 1},
  {&__pyx_n_s_v, __pyx_k_v, sizeof(__pyx_k_v), 0, 0, 1, 1},
  {&__pyx_n_s_victim, __pyx_k_victim, sizeof(__pyx_k_victim), 0, 0, 1, 1},
  {&__pyx_n_s_x, __pyx_k_x, sizeof(__pyx_k_x), 0, 0, 1, 1},
  {&__pyx_n_s_x0, __pyx_k_x0, sizeof(__pyx_k_x0), 0, 0, 1, 1},
  {&__pyx_n_s_x1, __pyx_k_x1, sizeof(__pyx_k_x1), 0, 0, 1, 1},
  {&__pyx_n_s_x2, __pyx_k_x2, sizeof(__pyx_k_x2), 0, 0, 1, 1},
  {&__pyx_n_s_x3, __pyx_k_x3, sizeof(__pyx_k_x3), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_staticmethod = __Pyx_GetBuiltinName(__pyx_n_s_staticmethod); if (!__pyx_builtin_staticmethod) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 238; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  return 0;
  __pyx_L1_error:;
  return -1;
}

static int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "kdp.pyx":239
 * 
 * 	@staticmethod
 * 	def Make_LengthThetaPhi(double length, double theta, double phi):             # <<<<<<<<<<<<<<
 * 		return Vec3.Factory(Vec3_c(length, theta, phi, V3f_LengthThetaPhi))
 * 
 */
  __pyx_tuple_ = PyTuple_Pack(3, __pyx_n_s_length, __pyx_n_s_theta, __pyx_n_s_phi); if (unlikely(!__pyx_tuple_)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 239; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple_);
  __Pyx_GIVEREF(__pyx_tuple_);
  __pyx_codeobj__2 = (PyObject*)__Pyx_PyCode_New(3, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple_, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_keith_Documents_Projects_l, __pyx_n_s_Make_LengthThetaPhi, 239, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 239; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "kdp.pyx":358
 * 
 * 	@staticmethod
 * 	def From_MassP3(double mass, Vec3 p3):             # <<<<<<<<<<<<<<
 * 		ret = Vec4()
 * #~ 		ret.vec = shared_ptr[Vec4_c](new Vec4_c(mass, deref(p3.vec), Mass))
 */
  __pyx_tuple__3 = PyTuple_Pack(3, __pyx_n_s_mass, __pyx_n_s_p3, __pyx_n_s_ret); if (unlikely(!__pyx_tuple__3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 358; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__3);
  __Pyx_GIVEREF(__pyx_tuple__3);
  __pyx_codeobj__4 = (PyObject*)__Pyx_PyCode_New(2, 0, 3, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__3, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_keith_Documents_Projects_l, __pyx_n_s_From_MassP3, 358, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 358; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "kdp.pyx":512
 * 
 * 	@staticmethod
 * 	def SetLengthRelDiffThreshold(double newThreshold):             # <<<<<<<<<<<<<<
 * 		Vec4_c.SetLengthRelDiffThreshold(newThreshold)
 * 
 */
  __pyx_tuple__5 = PyTuple_Pack(1, __pyx_n_s_newThreshold); if (unlikely(!__pyx_tuple__5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 512; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__5);
  __Pyx_GIVEREF(__pyx_tuple__5);
  __pyx_codeobj__6 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__5, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_keith_Documents_Projects_l, __pyx_n_s_SetLengthRelDiffThreshold, 512, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 512; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "kdp.pyx":528
 * 	# Have to make this to get the axis for vec to vec rotation
 * 	@staticmethod
 * 	def Make_Vec2Vec(Vec3 u, Vec3 v, double omega):             # <<<<<<<<<<<<<<
 * 		# Create a dummy rotation object to solve for axis/angle
 * 		# use a pointer so we don't have to declare default ctor for Cython
 */
  __pyx_tuple__7 = PyTuple_Pack(5, __pyx_n_s_u, __pyx_n_s_v, __pyx_n_s_omega, __pyx_n_s_tmp, __pyx_n_s_rot); if (unlikely(!__pyx_tuple__7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 528; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__7);
  __Pyx_GIVEREF(__pyx_tuple__7);
  __pyx_codeobj__8 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__7, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_home_keith_Documents_Projects_l, __pyx_n_s_Make_Vec2Vec, 528, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 528; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_InitGlobals(void) {
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  return 0;
  __pyx_L1_error:;
  return -1;
}

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC initkdp(void); /*proto*/
PyMODINIT_FUNC initkdp(void)
#else
PyMODINIT_FUNC PyInit_kdp(void); /*proto*/
PyMODINIT_FUNC PyInit_kdp(void)
#endif
{
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  #if CYTHON_REFNANNY
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
  if (!__Pyx_RefNanny) {
      PyErr_Clear();
      __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
      if (!__Pyx_RefNanny)
          Py_FatalError("failed to import 'refnanny' module");
  }
  #endif
  __Pyx_RefNannySetupContext("PyMODINIT_FUNC PyInit_kdp(void)", 0);
  if (__Pyx_check_binary_version() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #ifdef __Pyx_CyFunction_USED
  if (__pyx_CyFunction_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_Coroutine_USED
  if (__pyx_Coroutine_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_StopAsyncIteration_USED
  if (__pyx_StopAsyncIteration_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  #ifdef WITH_THREAD /* Python build with threading support? */
  PyEval_InitThreads();
  #endif
  #endif
  /*--- Module creation code ---*/
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4("kdp", __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (unlikely(!__pyx_m)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  Py_INCREF(__pyx_d);
  __pyx_b = PyImport_AddModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #if CYTHON_COMPILING_IN_PYPY
  Py_INCREF(__pyx_b);
  #endif
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  /*--- Initialize various global constants etc. ---*/
  if (__Pyx_InitGlobals() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  if (__pyx_module_is_main_kdp) {
    if (PyObject_SetAttrString(__pyx_m, "__name__", __pyx_n_s_main) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (!PyDict_GetItemString(modules, "kdp")) {
      if (unlikely(PyDict_SetItemString(modules, "kdp", __pyx_m) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif
  /*--- Builtin init code ---*/
  if (__Pyx_InitCachedBuiltins() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Constants init code ---*/
  if (__Pyx_InitCachedConstants() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Global init code ---*/
  /*--- Variable export code ---*/
  /*--- Function export code ---*/
  /*--- Type init code ---*/
  __pyx_vtabptr_3kdp_Vec2 = &__pyx_vtable_3kdp_Vec2;
  __pyx_vtable_3kdp_Vec2.Factory = (struct __pyx_obj_3kdp_Vec2 *(*)(kdp::Vec2 const &))__pyx_f_3kdp_4Vec2_Factory;
  if (PyType_Ready(&__pyx_type_3kdp_Vec2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 99; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_3kdp_Vec2.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_3kdp_Vec2.tp_dict, __pyx_vtabptr_3kdp_Vec2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 99; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "Vec2", (PyObject *)&__pyx_type_3kdp_Vec2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 99; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_3kdp_Vec2 = &__pyx_type_3kdp_Vec2;
  __pyx_vtabptr_3kdp_Vec3 = &__pyx_vtable_3kdp_Vec3;
  __pyx_vtable_3kdp_Vec3.Factory = (struct __pyx_obj_3kdp_Vec3 *(*)(kdp::Vec3 const &))__pyx_f_3kdp_4Vec3_Factory;
  if (PyType_Ready(&__pyx_type_3kdp_Vec3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 219; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_3kdp_Vec3.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_3kdp_Vec3.tp_dict, __pyx_vtabptr_3kdp_Vec3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 219; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "Vec3", (PyObject *)&__pyx_type_3kdp_Vec3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 219; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_3kdp_Vec3 = &__pyx_type_3kdp_Vec3;
  __pyx_vtabptr_3kdp_Vec4 = &__pyx_vtable_3kdp_Vec4;
  __pyx_vtable_3kdp_Vec4.Factory = (struct __pyx_obj_3kdp_Vec4 *(*)(kdp::Vec4 const &))__pyx_f_3kdp_4Vec4_Factory;
  if (PyType_Ready(&__pyx_type_3kdp_Vec4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 350; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_3kdp_Vec4.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_3kdp_Vec4.tp_dict, __pyx_vtabptr_3kdp_Vec4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 350; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "Vec4", (PyObject *)&__pyx_type_3kdp_Vec4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 350; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_3kdp_Vec4 = &__pyx_type_3kdp_Vec4;
  if (PyType_Ready(&__pyx_type_3kdp_Rot3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 517; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_3kdp_Rot3.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Rot3", (PyObject *)&__pyx_type_3kdp_Rot3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 517; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_3kdp_Rot3 = &__pyx_type_3kdp_Rot3;
  if (PyType_Ready(&__pyx_type_3kdp_Boost) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 549; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_3kdp_Boost.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Boost", (PyObject *)&__pyx_type_3kdp_Boost) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 549; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_3kdp_Boost = &__pyx_type_3kdp_Boost;
  /*--- Type import code ---*/
  /*--- Variable import code ---*/
  /*--- Function import code ---*/
  /*--- Execution code ---*/
  #if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
  if (__Pyx_patch_abc() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif

  /* "kdp.pyx":239
 * 
 * 	@staticmethod
 * 	def Make_LengthThetaPhi(double length, double theta, double phi):             # <<<<<<<<<<<<<<
 * 		return Vec3.Factory(Vec3_c(length, theta, phi, V3f_LengthThetaPhi))
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_3kdp_4Vec3_7Make_LengthThetaPhi, NULL, __pyx_n_s_kdp); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 239; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);

  /* "kdp.pyx":238
 * 		return copy
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def Make_LengthThetaPhi(double length, double theta, double phi):
 * 		return Vec3.Factory(Vec3_c(length, theta, phi, V3f_LengthThetaPhi))
 */
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 238; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_staticmethod, __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 238; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_3kdp_Vec3->tp_dict, __pyx_n_s_Make_LengthThetaPhi, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 239; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_3kdp_Vec3);

  /* "kdp.pyx":239
 * 
 * 	@staticmethod
 * 	def Make_LengthThetaPhi(double length, double theta, double phi):             # <<<<<<<<<<<<<<
 * 		return Vec3.Factory(Vec3_c(length, theta, phi, V3f_LengthThetaPhi))
 * 
 */
  __pyx_t_1 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_3kdp_Vec3, __pyx_n_s_Make_LengthThetaPhi); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 239; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);

  /* "kdp.pyx":238
 * 		return copy
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def Make_LengthThetaPhi(double length, double theta, double phi):
 * 		return Vec3.Factory(Vec3_c(length, theta, phi, V3f_LengthThetaPhi))
 */
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 238; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_staticmethod, __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 238; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_3kdp_Vec3->tp_dict, __pyx_n_s_Make_LengthThetaPhi, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 239; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_3kdp_Vec3);

  /* "kdp.pyx":358
 * 
 * 	@staticmethod
 * 	def From_MassP3(double mass, Vec3 p3):             # <<<<<<<<<<<<<<
 * 		ret = Vec4()
 * #~ 		ret.vec = shared_ptr[Vec4_c](new Vec4_c(mass, deref(p3.vec), Mass))
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_3kdp_4Vec4_3From_MassP3, NULL, __pyx_n_s_kdp); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 358; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);

  /* "kdp.pyx":357
 * 		self.vec = make_shared[Vec4_c](x0, x1, x2, x3)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def From_MassP3(double mass, Vec3 p3):
 * 		ret = Vec4()
 */
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 357; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_staticmethod, __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 357; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_3kdp_Vec4->tp_dict, __pyx_n_s_From_MassP3, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 358; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_3kdp_Vec4);

  /* "kdp.pyx":358
 * 
 * 	@staticmethod
 * 	def From_MassP3(double mass, Vec3 p3):             # <<<<<<<<<<<<<<
 * 		ret = Vec4()
 * #~ 		ret.vec = shared_ptr[Vec4_c](new Vec4_c(mass, deref(p3.vec), Mass))
 */
  __pyx_t_1 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_3kdp_Vec4, __pyx_n_s_From_MassP3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 358; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);

  /* "kdp.pyx":357
 * 		self.vec = make_shared[Vec4_c](x0, x1, x2, x3)
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def From_MassP3(double mass, Vec3 p3):
 * 		ret = Vec4()
 */
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 357; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_staticmethod, __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 357; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_3kdp_Vec4->tp_dict, __pyx_n_s_From_MassP3, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 358; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_3kdp_Vec4);

  /* "kdp.pyx":512
 * 
 * 	@staticmethod
 * 	def SetLengthRelDiffThreshold(double newThreshold):             # <<<<<<<<<<<<<<
 * 		Vec4_c.SetLengthRelDiffThreshold(newThreshold)
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_3kdp_4Vec4_73SetLengthRelDiffThreshold, NULL, __pyx_n_s_kdp); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 512; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);

  /* "kdp.pyx":511
 * 		return deref(self.vec).DeltaR_pseudo(deref(other.vec))
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def SetLengthRelDiffThreshold(double newThreshold):
 * 		Vec4_c.SetLengthRelDiffThreshold(newThreshold)
 */
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 511; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_staticmethod, __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 511; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_3kdp_Vec4->tp_dict, __pyx_n_s_SetLengthRelDiffThreshold, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 512; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_3kdp_Vec4);

  /* "kdp.pyx":512
 * 
 * 	@staticmethod
 * 	def SetLengthRelDiffThreshold(double newThreshold):             # <<<<<<<<<<<<<<
 * 		Vec4_c.SetLengthRelDiffThreshold(newThreshold)
 * 
 */
  __pyx_t_1 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_3kdp_Vec4, __pyx_n_s_SetLengthRelDiffThreshold); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 512; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);

  /* "kdp.pyx":511
 * 		return deref(self.vec).DeltaR_pseudo(deref(other.vec))
 * 
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def SetLengthRelDiffThreshold(double newThreshold):
 * 		Vec4_c.SetLengthRelDiffThreshold(newThreshold)
 */
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 511; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_staticmethod, __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 511; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_3kdp_Vec4->tp_dict, __pyx_n_s_SetLengthRelDiffThreshold, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 512; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_3kdp_Vec4);

  /* "kdp.pyx":528
 * 	# Have to make this to get the axis for vec to vec rotation
 * 	@staticmethod
 * 	def Make_Vec2Vec(Vec3 u, Vec3 v, double omega):             # <<<<<<<<<<<<<<
 * 		# Create a dummy rotation object to solve for axis/angle
 * 		# use a pointer so we don't have to declare default ctor for Cython
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_3kdp_4Rot3_5Make_Vec2Vec, NULL, __pyx_n_s_kdp); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 528; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);

  /* "kdp.pyx":527
 * 
 * 	# Have to make this to get the axis for vec to vec rotation
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def Make_Vec2Vec(Vec3 u, Vec3 v, double omega):
 * 		# Create a dummy rotation object to solve for axis/angle
 */
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 527; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_staticmethod, __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 527; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_3kdp_Rot3->tp_dict, __pyx_n_s_Make_Vec2Vec, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 528; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_3kdp_Rot3);

  /* "kdp.pyx":528
 * 	# Have to make this to get the axis for vec to vec rotation
 * 	@staticmethod
 * 	def Make_Vec2Vec(Vec3 u, Vec3 v, double omega):             # <<<<<<<<<<<<<<
 * 		# Create a dummy rotation object to solve for axis/angle
 * 		# use a pointer so we don't have to declare default ctor for Cython
 */
  __pyx_t_1 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_3kdp_Rot3, __pyx_n_s_Make_Vec2Vec); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 528; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);

  /* "kdp.pyx":527
 * 
 * 	# Have to make this to get the axis for vec to vec rotation
 * 	@staticmethod             # <<<<<<<<<<<<<<
 * 	def Make_Vec2Vec(Vec3 u, Vec3 v, double omega):
 * 		# Create a dummy rotation object to solve for axis/angle
 */
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 527; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_staticmethod, __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 527; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_3kdp_Rot3->tp_dict, __pyx_n_s_Make_Vec2Vec, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 528; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_3kdp_Rot3);

  /* "kdp.pyx":1
 * #cython: language_level=3, optimize.use_switch=False             # <<<<<<<<<<<<<<
 * 
 * include "kdpVectors.hpy"
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /*--- Wrapped vars code ---*/

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  if (__pyx_m) {
    if (__pyx_d) {
      __Pyx_AddTraceback("init kdp", __pyx_clineno, __pyx_lineno, __pyx_filename);
    }
    Py_DECREF(__pyx_m); __pyx_m = 0;
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init kdp");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if PY_MAJOR_VERSION < 3
  return;
  #else
  return __pyx_m;
  #endif
}

/* --- Runtime support code --- */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule((char *)modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, (char *)"RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStr(__pyx_b, name);
    if (unlikely(!result)) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%.200s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
            continue;
        }
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_CheckExact(key)) || likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (**name == key) ? 0 :
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (PyUnicode_GET_SIZE(**name) != PyUnicode_GET_SIZE(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key);
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (PyUnicode_GET_SIZE(**argname) != PyUnicode_GET_SIZE(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%.200s() takes %.8s %" CYTHON_FORMAT_SSIZE_T "d positional argument%.1s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

static void __Pyx_RaiseArgumentTypeInvalid(const char* name, PyObject *obj, PyTypeObject *type) {
    PyErr_Format(PyExc_TypeError,
        "Argument '%.200s' has incorrect type (expected %.200s, got %.200s)",
        name, type->tp_name, Py_TYPE(obj)->tp_name);
}
static CYTHON_INLINE int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact)
{
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (none_allowed && obj == Py_None) return 1;
    else if (exact) {
        if (likely(Py_TYPE(obj) == type)) return 1;
        #if PY_MAJOR_VERSION == 2
        else if ((type == &PyBaseString_Type) && likely(__Pyx_PyBaseString_CheckExact(obj))) return 1;
        #endif
    }
    else {
        if (likely(PyObject_TypeCheck(obj, type))) return 1;
    }
    __Pyx_RaiseArgumentTypeInvalid(name, obj, type);
    return 0;
}

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = func->ob_type->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {
    PyObject *self, *result;
    PyCFunction cfunc;
    cfunc = PyCFunction_GET_FUNCTION(func);
    self = PyCFunction_GET_SELF(func);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = cfunc(self, arg);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx__PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_New(1);
    if (unlikely(!args)) return NULL;
    Py_INCREF(arg);
    PyTuple_SET_ITEM(args, 0, arg);
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
#ifdef __Pyx_CyFunction_USED
    if (likely(PyCFunction_Check(func) || PyObject_TypeCheck(func, __pyx_CyFunctionType))) {
#else
    if (likely(PyCFunction_Check(func))) {
#endif
        if (likely(PyCFunction_GET_FLAGS(func) & METH_O)) {
            return __Pyx_PyObject_CallMethO(func, arg);
        }
    }
    return __Pyx__PyObject_CallOneArg(func, arg);
}
#else
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_Pack(1, arg);
    if (unlikely(!args)) return NULL;
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func) {
#ifdef __Pyx_CyFunction_USED
    if (likely(PyCFunction_Check(func) || PyObject_TypeCheck(func, __pyx_CyFunctionType))) {
#else
    if (likely(PyCFunction_Check(func))) {
#endif
        if (likely(PyCFunction_GET_FLAGS(func) & METH_NOARGS)) {
            return __Pyx_PyObject_CallMethO(func, NULL);
        }
    }
    return __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL);
}
#endif

static int __Pyx_SetVtable(PyObject *dict, void *vtable) {
#if PY_VERSION_HEX >= 0x02070000
    PyObject *ob = PyCapsule_New(vtable, 0, 0);
#else
    PyObject *ob = PyCObject_FromVoidPtr(vtable, 0);
#endif
    if (!ob)
        goto bad;
    if (PyDict_SetItem(dict, __pyx_n_s_pyx_vtable, ob) < 0)
        goto bad;
    Py_DECREF(ob);
    return 0;
bad:
    Py_XDECREF(ob);
    return -1;
}

static CYTHON_INLINE PyObject *__Pyx_GetModuleGlobalName(PyObject *name) {
    PyObject *result;
#if CYTHON_COMPILING_IN_CPYTHON
    result = PyDict_GetItem(__pyx_d, name);
    if (likely(result)) {
        Py_INCREF(result);
    } else {
#else
    result = PyObject_GetItem(__pyx_d, name);
    if (!result) {
        PyErr_Clear();
#endif
        result = __Pyx_GetBuiltinName(name);
    }
    return result;
}

static PyObject *__Pyx_GetNameInClass(PyObject *nmspace, PyObject *name) {
    PyObject *result;
    result = __Pyx_PyObject_GetAttrStr(nmspace, name);
    if (!result)
        result = __Pyx_GetModuleGlobalName(name);
    return result;
}

static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = start + (end - start) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, (size_t)new_max*sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}

#include "compile.h"
#include "frameobject.h"
#include "traceback.h"
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(filename);
    #else
    py_srcfile = PyUnicode_FromString(filename);
    #endif
    if (!py_srcfile) goto bad;
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_code = __Pyx_PyCode_New(
        0,
        0,
        0,
        0,
        0,
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    Py_DECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    py_code = __pyx_find_code_object(c_line ? c_line : py_line);
    if (!py_code) {
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) goto bad;
        __pyx_insert_code_object(c_line ? c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        PyThreadState_GET(), /*PyThreadState *tstate,*/
        py_code,             /*PyCodeObject *code,*/
        __pyx_d,      /*PyObject *globals,*/
        0                    /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    py_frame->f_lineno = py_line;
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
    const long neg_one = (long) -1, const_zero = (long) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
    }
}

#define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)
#define __PYX_VERIFY_RETURN_INT_EXC(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 1)
#define __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, exc)\
    {\
        func_type value = func_value;\
        if (sizeof(target_type) < sizeof(func_type)) {\
            if (unlikely(value != (func_type) (target_type) value)) {\
                func_type zero = 0;\
                if (exc && unlikely(value == (func_type)-1 && PyErr_Occurred()))\
                    return (target_type) -1;\
                if (is_unsigned && unlikely(value < zero))\
                    goto raise_neg_overflow;\
                else\
                    goto raise_overflow;\
            }\
        }\
        return (target_type) value;\
    }

#if CYTHON_USE_PYLONG_INTERNALS
  #include "longintrepr.h"
#endif

static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
    const long neg_one = (long) -1, const_zero = (long) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(long) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (long) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case  1: __PYX_VERIFY_RETURN_INT(long, digit, digits[0])
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 2 * PyLong_SHIFT) {
                            return (long) (((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 3 * PyLong_SHIFT) {
                            return (long) (((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 4 * PyLong_SHIFT) {
                            return (long) (((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (long) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(long) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case -1: __PYX_VERIFY_RETURN_INT(long, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(long,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(long) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) ((((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) ((((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) ((((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(long) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, long, PyLong_AsLong(x))
            } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, PY_LONG_LONG, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            long val;
            PyObject *v = __Pyx_PyNumber_Int(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (long) -1;
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
    const int neg_one = (int) -1, const_zero = (int) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case  1: __PYX_VERIFY_RETURN_INT(int, digit, digits[0])
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 2 * PyLong_SHIFT) {
                            return (int) (((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 3 * PyLong_SHIFT) {
                            return (int) (((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 4 * PyLong_SHIFT) {
                            return (int) (((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (int) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case -1: __PYX_VERIFY_RETURN_INT(int, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(int,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(int) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) ((((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) ((((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) ((((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, long, PyLong_AsLong(x))
            } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, PY_LONG_LONG, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            int val;
            PyObject *v = __Pyx_PyNumber_Int(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (int) -1;
        }
    } else {
        int val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

static int __Pyx_check_binary_version(void) {
    char ctversion[4], rtversion[4];
    PyOS_snprintf(ctversion, 4, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    PyOS_snprintf(rtversion, 4, "%s", Py_GetVersion());
    if (ctversion[0] != rtversion[0] || ctversion[2] != rtversion[2]) {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compiletime version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        return PyErr_WarnEx(NULL, message, 1);
    }
    return 0;
}

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        ++t;
    }
    return 0;
}

static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    return __Pyx_PyUnicode_FromStringAndSize(c_str, (Py_ssize_t)strlen(c_str));
}
static CYTHON_INLINE char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
static CYTHON_INLINE char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if CYTHON_COMPILING_IN_CPYTHON && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
#if PY_VERSION_HEX < 0x03030000
        char* defenc_c;
        PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
        if (!defenc) return NULL;
        defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        {
            char* end = defenc_c + PyBytes_GET_SIZE(defenc);
            char* c;
            for (c = defenc_c; c < end; c++) {
                if ((unsigned char) (*c) >= 128) {
                    PyUnicode_AsASCIIString(o);
                    return NULL;
                }
            }
        }
#endif
        *length = PyBytes_GET_SIZE(defenc);
        return defenc_c;
#else
        if (__Pyx_PyUnicode_READY(o) == -1) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        if (PyUnicode_IS_ASCII(o)) {
            *length = PyUnicode_GET_LENGTH(o);
            return PyUnicode_AsUTF8(o);
        } else {
            PyUnicode_AsASCIIString(o);
            return NULL;
        }
#else
        return PyUnicode_AsUTF8AndSize(o, length);
#endif
#endif
    } else
#endif
#if (!CYTHON_COMPILING_IN_PYPY) || (defined(PyByteArray_AS_STRING) && defined(PyByteArray_GET_SIZE))
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x) {
  PyNumberMethods *m;
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (PyInt_Check(x) || PyLong_Check(x))
#else
  if (PyLong_Check(x))
#endif
    return __Pyx_NewRef(x);
  m = Py_TYPE(x)->tp_as_number;
#if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = PyNumber_Long(x);
  }
#else
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Long(x);
  }
#endif
  if (res) {
#if PY_MAJOR_VERSION < 3
    if (!PyInt_Check(res) && !PyLong_Check(res)) {
#else
    if (!PyLong_Check(res)) {
#endif
      PyErr_Format(PyExc_TypeError,
                   "__%.4s__ returned non-%.4s (type %.200s)",
                   name, name, Py_TYPE(res)->tp_name);
      Py_DECREF(res);
      return NULL;
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_CheckExact(b))) {
    if (sizeof(Py_ssize_t) >= sizeof(long))
        return PyInt_AS_LONG(b);
    else
        return PyInt_AsSsize_t(x);
  }
#endif
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_USE_PYLONG_INTERNALS
    const digit* digits = ((PyLongObject*)b)->ob_digit;
    const Py_ssize_t size = Py_SIZE(b);
    if (likely(__Pyx_sst_abs(size) <= 1)) {
        ival = likely(size) ? digits[0] : 0;
        if (size == -1) ival = -ival;
        return ival;
    } else {
      switch (size) {
         case 2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
      }
    }
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
    return PyInt_FromSize_t(ival);
}


#endif /* Py_PYTHON_H */
